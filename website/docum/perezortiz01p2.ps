%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Pages: 9
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Helvetica NewCenturySchlbk-Roman
%%+ NewCenturySchlbk-Italic Times-Roman Helvetica-Oblique
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -f
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.09.13:2114
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 () @start
%DVIPSBitmapFont: Fa cmbx9 9 50
/Fa 50 122 df<EC07FF91B512E001078090391FFC01FC90383FE0009039FFC001FE48EB
80031400484A7E496D5AA36F5AED007093C7FCA4ED3FFFB8FCA43903FE0001B3A7277FFF
F03F13F8A42D347FB331>12 D<EC1FC0EC7FF049487E903803F87C49487E90380FE01EEB
1FC0013F7F1480A2137FA25D151EECC03E153C5D5D14C190383FE3E0DAE7C090381FFFF0
ECEF8002FFC7FC14FC6D48913800F800606D6C14014D5A6E5D011F1507D97FFF4A5A01FB
6D49C7FCD801F1151E00036E133ED807E06D5B001F6E5B48486C6C5B023F1301007F6D6C
485A6F485A00FF6D6C485A6E019FC8FC6E13FE6E5B6D6C49EB01E0157F007FDA1FFE1303
6D496C14C06C6C90B5EAC007261FFC0F9138F03F806CB5D8F87FB512006CDAE01F5B0001
DA800713F826003FF8C7EA7FE03C367CB445>38 D<120FEA3FC0EA7FE0EAFFF0A213F8A4
127F123FEA0F3812001378A21370A213F013E01201EA03C0A2EA0780EA0F00121E5A1218
0D1B7A8B19>44 D<B512FCA816087F931D>I<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3F
C0EA0F000C0C7A8B19>I<EB03FE90383FFFE090B512F848EB07FC3903FC01FE48486C7E
4848EB7F8049133F001F15C0A2003F15E049131F007F15F0A500FF15F8B1007F15F0A400
3F15E06D133FA2001F15C0A26C6CEB7F806C6CEBFF006C6C485A3901FF07FC6CEBFFF801
3F13E0D903FEC7FC25327DB02C>48 D<147814F81303131FEA03FFB5FCA3EAFC1F1200B3
B2007FB512FEA41F317AB02C>I<EB1FFC90B57E000314E0000F14F8391FE03FFC393F80
0FFF48487E6D6C1380D8FFC014C06D7E16E080A36C5A6C5A6CC7FCC8FC16C05C16805C16
004A5A4A5A5D4A5AEC3FC04A5A02FEC7FC495A495A903907E001E0EB0FC0EB1F8090383E
00034914C05B4848130748B6FC5A5A5A5A5AB71280A423317CB02C>I<151F5D5DA25D5C
5C5C5CA25C143D147D14F9EB01F114E1EB03C1EB0781130FEB1F01133E133C137813F012
01EA03E0EA07C01380EA0F00121E123E5A5AB712FEA4C700031300A80103B512FEA42731
7EB02C>52 D<EC7FC0903803FFF0010F13FC90383FE07E90387F801F4848485A4848EBFF
8048485A13F8120FEA1FF0A2123F6E13004848133C92C7FCA2142039FFE1FF8001E713E0
01EF13F89038FE03FC496C7E01F87F6E13805B16C0A24914E0A5127FA5123F16C0121F6D
1480000F5B01F814006C6C485A6C6C485A6CB55A6C6C5B011F13C0D907FEC7FC23327CB0
2C>54 D<EB07FE90383FFFC090B512F03903F807FC3907C000FE4848137F8148C7138015
1F5A7FA27F7F01F8133F01FE14006D6C5A6CEBE0FEECF1FC6CEBFFF815E06C5C6C14F06C
806C6C7F48B57E4880D80FF31480D81FE014C0383FC03FEB800F48486C13E0140148EB00
7F48143F151FA2150FA216C07E6C141F6D14806C6C133F6DEB7F00391FF803FE0007B512
F86C5CC66C13C0D90FFCC7FC23327CB02C>56 D<EB07FC90383FFF8090B512E03903FE0F
F03907F807F848486C7E001F6D7E003F80497E007F1580A212FF16C0A416E0A55C127FA2
123F5CEA1FF0000F5B6C6C5A3803FFFEC65BD93FF013C0EB00805CA2EA0780261FE00113
80EA3FF01600A24A5AA24A5A49485A391F801FF09038C07FE06CB512806C91C7FC000113
FC38003FC023327CB02C>I<120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F00C7FCA9
120FEA3FC0EA7FE0EAFFF0A6EA7FE0EA3FC0EA0F000C217AA019>I<ED1F80A24B7EA24B
7EA34B7EA24A7FA34A7FA24A7F15CFA2020F7F1587021F801503023F80EC3E01A2027E80
EC7C0002FC804A137FA20101814A133F0103814A131FA249B67EA24981A290271F800007
7F91C77EA24982013E80017E82017C80A201FC8249157FB500F0013FB512F0A43C347DB3
43>65 D<DBFFE01338021F01FE137891B6EA80F8010315E1010F9038E00FF7903A1FFE00
01FFD97FF8EB007FD9FFE0143F4849141F4849140F4890C81207485A1703485A1701123F
5B007F1600A349160012FFAB127F7F1878A2123F7F001F17F818F06C7E6D15016CEE03E0
6C7F6C6DEC07C06C6DEC0F80D97FF8EC3F00D91FFE14FE903A0FFFE007FC010390B512F0
010015C0021F49C7FC020013F035357BB340>67 D<B712FCEEFFC017F817FEC69039E000
3FFF040313C004007F717EEF1FF8717E841707848319808319C0A419E0AB19C0A419805F
A219004D5A170F604D5A4D5AEFFFE004035B041F5BB848C7FC17F817C004FCC8FC3B337D
B244>I<B812FEA4C69038E0000FEE01FF82838383A283A3DB01E013801707A4030390C7
FCA21507151F91B5FCA4ECE01F1507150318F01501A2EF01E0A392C7FCA21703A2EF07C0
A2170F171F173F17FF1607B91280A434337DB23A>I<B612E0A4C6EBE000B3B3A7B612E0
A41B337DB221>73 D<010FB512FEA4D900031380B3AE1206EA1F80EA3FC0EA7FE0EAFFF0
A44A130001E05B387FC00F6C48485A391FE07FF86CB512E00003148026007FF8C7FC2734
7FB22E>I<B612F8A4C601E0C8FCB3A81778A417F817F0A31601A21603A21607160F161F
167F923803FFE0B8FCA42D337DB235>76 D<B500E093387FFFF86E93B5FCA26E5DC6F1F8
00D9F7FCED03DFA3D9F3FEED079FA2D9F1FFED0F1FA201F06D141EA26E6C143CA26E6C14
78A26E6C14F0A36E6CEB01E0A26E6CEB03C0A26E6CEB0780A26E6CEB0F00A26EEB801EA2
6F6C5AA36F6C5AA26F6C5AA292380FF9E0A26FB45AA26F5BA26F90C7FCA3B526F000FE01
1FB512F8A2167C16384D337DB254>I<B500E091383FFFFC808080C66D9138003C008081
01F77F13F301F17F8101F07F6E7E6E7E6E7E6E7F806E7F826E7F6E7F6F7E6F7E6F7E816F
138017C06F13E06F13F06F13F8EE7FFCEE3FFE161FEE0FFF18BC7013FC828282177F173F
171FA2170F170717031701B500F01400187C183CA23E337DB245>I<913803FF80027F13
FC49B6FC0107010113C0903A1FF8003FF0D93FE0EB0FF8D9FFC0EB07FE48496D7E4890C7
6C13804980000717C04848ED7FE0A24848ED3FF0A2003F17F8A2007F17FC49151FA300FF
17FEAB007F17FCA26D153FA2003F17F8A36C6CED7FF0A26C6CEDFFE0000717C06D5C6C17
806C6D4913006C6D495AD97FF0EB1FFCD91FF8EB3FF0903A07FF01FFC0010190B5C7FC6D
6C13FC020713C037357BB342>I<B712F8EEFF8017E017F8C69039E0007FFCEE0FFE707E
701380A27013C0A218E0A718C0A24C1380A24C13004C5AEE7FFC91B612F017C04CC7FC02
E0C9FCB3B612E0A433337DB23C>I<B712E016FEEEFFC017F0C6D9E00013FCEE1FFEEE07
FF707FA2707FA284A660A24C5B95C7FC4C5AEE1FFCEEFFF891B612C094C8FC83DAE0037F
03007FEE3FF083707EA2707EA583A4193CA2188082F0C07CB6D8E003147870EBE1F070EB
FFE0053F13C0CA000313803E347DB242>82 D<D90FFC137090397FFF80F048B512E10007
14FB390FF803FF391FE0007F4848133F49130F007F140790C7FC1503481401A36D1300A2
7F6D140013F8387FFFC014FCECFFE06C14F86C14FE816C1580000315C06C15E06C6C14F0
131F010014F8140F9138007FFC153F151F150F00F01407A21503A27EA216F86C14076C15
F07E6DEB0FE001E0131F01FEEB7FC000FDB61200D8F87F5BD8F01F13F8D8E00113C02635
7BB331>I<003FB812F8A4D9F003EB801FD87F80ED03FC01001501007E1600007C177CA2
0078173CA400F8173E48171EA4C71600B3A9011FB612F0A437327DB13E>I<B600E090B5
12F8A4C601E0C8EAF800B3B0017F15016E5DA2013F4B5A6E1407011F5E6D6C140F6D6CEC
3F806D6C6C01FFC7FC6D9038F007FE6D6CB512F8021F5C020714C09126007FFCC8FC3D34
7DB244>I<EB7FFE0003B512E04814F8390FF00FFC391FF803FF806E138016C0157F6C5A
6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF07F000F1300EA1FF8485A485A485A5B
A315FF7F007F5B6D4813E03A3FF80FBFFF000FB5121F0003EBFC0F39007FE00728217EA0
2B>97 D<EA01FC12FFA4120F1207ADEC07FC91387FFF8001FDB512E09039FFF00FF89138
C007FC91380003FE496D7E496D1380A217C0167FA217E0A917C0A216FF1780A26D491300
6D495A9138C007FC9039F3F01FF801E1B512E0D9C07F13809026800FF8C7FC2B347EB331
>I<903807FF80013F13F090B512FC3903FE01FE4848487EEA0FF8EA1FF0EA3FE0A2007F
6D5A496C5A153000FF91C7FCA9127F7FA2003FEC07807F6C6C130F000FEC1F00D807FE13
3E3903FF80FCC6EBFFF8013F13E0010790C7FC21217DA027>I<ED01FC15FFA4150F1507
ADEB07FE90383FFFC790B512F70003EB01FF3907FC003F4848131F4848130F48481307A2
127F5BA212FFA9127FA27F123F150F6C6C131F6C6C133F6C6C497E2603FE03B512E0C6B5
12E7013F1387903807FC072B347DB331>I<903803FF80013F13F090B512FC48EB03FE39
07FC007F4848EB3F804848EB1FC05B003FEC0FE0127F5B16F012FF150790B6FCA301C0C8
FCA4127F7F123F16F06C7E000F14016C6CEB03E0D803FEEB0FC03A01FF807F806C6CB512
00011F13FC010313E024217EA029>I<EC3FE0903803FFF8010F13FC90383FF1FE90387F
C3FFEBFF83481303A2EA03FEEC01FEA2EC00781500A7B512FEA4D803FEC7FCB3A7387FFF
F8A420347EB31B>I<16F890390FFC07FE90387FFF9F48B6127F3907FC0FFC380FF00300
1F14FED9E001133E003FECFF1C1600A6001F5CEBF003000F5C3907FC0FF890B512E0486C
1380D90FFCC7FC48C9FCA37F7F90B512F015FE6CECFF8016E06C15F06C15F84815FC121F
393F80001F48C7EA03FE481401481400A46C14016C6CEB03FC6C6CEB07F86C6CEB0FF0D8
0FFCEB7FE00003B61280C6ECFE00010F13E028327EA12C>I<EA01FC12FFA4120F1207AD
EC03FF020F13C0023F13F09138FC0FF89039FDE007FCEBFFC04A6C7E1400A25BA25BB2B5
39E07FFFF0A42C347DB331>I<EA03F0487E487E487EA66C5A6C5A6C5AC8FCA8EA01FC12
FFA4120F1207B3A5B512C0A412357DB418>I<EA01FC12FFA4120F1207ADED7FFFA4ED1F
C04B5A037EC7FC5DEC03F8EC07E04A5AEC3F804AC8FC4A7E90B5FC8181ECBFF0EC3FF890
38FC1FFCEBF80F6E7E6E7E6E7F82806F7E6F7E6F7EB539C07FFFC0A42A347DB32F>107
D<EA01FC12FFA4120F1207B3B3A6B512E0A413347DB318>I<2703F803FEEB03FE00FF90
3B1FFFC01FFFC0027FD9E07F7F913BF81FF0F81FF0903CF9E00FF9E00FF8260FFBC0EBFB
C06CB4486CB4486C7E02001400495CA3495CB2B500E0B500E0B512E0A443217CA04A>I<
3901F803FF00FF010F13C0023F13F09138FC0FF89039F9E007FC380FFBC06CB4486C7E14
00A25BA25BB2B539E07FFFF0A42C217DA031>I<903803FF80011F13F090B512FE48EB01
FF3A07FC007FC0D80FF0EB1FE0001F15F049130F003F15F8491307007F15FCA300FF15FE
A8007F15FCA26D130F003F15F8001F15F06D131F6C6CEB3FE06C6CEB7FC03A01FF01FF00
6CEBFFFE013F13F80103138027217EA02C>I<3901FC07FC00FF90387FFF8001FDB512E0
9039FFF01FF89138C007FC000F90380003FE6C4880496D1380A26F13C0A3EE7FE0A9EEFF
C0A34B1380A26D4913006D495A9138C00FFC9138F03FF801FDB512E0D9FC7F1380DA0FF8
C7FC91C9FCABB512E0A42B307EA031>I<3901F81F8000FFEB7FF0ECFFF89038F9E3FC90
38FBC7FE380FFF876C1307A213FEEC03FCEC01F8EC0060491300B1B512F0A41F217EA024
>114 D<9038FFE1C0000713FF5A383F803F387E000F14075A14037EA26C6CC7FC13FCEB
FFE06C13FC806CEBFF80000F14C06C14E0C6FC010F13F0EB007F140F00F0130714037EA2
6C14E06C13076CEB0FC09038C01F8090B5120000F913FC38E03FE01C217DA023>I<133C
A5137CA313FCA21201A212031207001FB51280B6FCA3D807FCC7FCB0EC03C0A79038FE07
8012033901FF0F006C13FEEB3FFCEB0FF01A2F7EAE22>I<D801FC14FE00FF147FA4000F
140700071403B21507A2150F151F6C6C497E6C6C01FB13F06CEBFFF3013F13C3903807FE
032C217DA031>I<B539C007FFC0A4D807FEC7EAF80000035D6D13016C5D14806C4A5AA2
ECC007017F5CECE00F013F91C7FC6E5A011F131EECF83E010F133CECFC7C01071378ECFE
F801035B14FF6D5BA26D5BA26E5AA26EC8FCA2141E2A217EA02F>I<B53B83FFFC03FFE0
A43D07FC001FE0003E00183C6D167C00036F1378033F14F86C6C6E5B157F9139807BFC01
6C5FDAC0FB1303017FD9F1FE5B14C19139E1E0FF07013F5E9139F3C07F0F011F038FC7FC
14F7903A0FFF803FDEA29238001FFE6D5DA26D486D5AA24A130701015DA26D486D5A4A13
013B217EA040>I<B539C007FFC0A4D807FEC7EAF80000035D6D13016C5D14806C4A5AA2
ECC007017F5CECE00F013F91C7FC6E5A011F131EECF83E010F133CECFC7C01071378ECFE
F801035B14FF6D5BA26D5BA26E5AA26EC8FCA2141EA25CA2147C003E1378007F13F8486C
5A1381EB83E0EB87C0495AD87F3FC9FCEA3FFEEA1FF8EA07E02A307EA02F>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi8 8 2
/Fb 2 113 df<D93FFE91B5FCA2D900FFEC07E018C06FEB038002DF150001016D5B02CF
1406EC8FE0148701036D130E170C140381D90701141C6F1318EB060081010E017E133803
7F1330010C7FA2011CEC8070031F1360011814C0150F0138ECE0E003075B013014F01503
017014F1EEF9800160130116FD01E0EB00FF94C7FC4980A2000181163E5B486C141EEA0F
E0D8FFFE140CA2382D7CAC38>78 D<90387C01F89038FE07FE3901CF8E0F3A03879C0780
D907B813C0000713F000069038E003E0EB0FC0000E1380120CA2D8081F130712001400A2
49130F16C0133EA2017EEB1F80A2017C14005D01FC133E5D15FC6D485A3901FF03E09038
FB87C0D9F1FFC7FCEBF0FC000390C8FCA25BA21207A25BA2120FA2EAFFFCA2232B829D24
>112 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy7 7 1
/Fc 1 1 df<B712FEA327037A8F34>0 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmsy10 10 1
/Fd 1 1 df<007FB81280B912C0A26C17803204799641>0 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmmi7 7 6
/Fe 6 121 df<90383FFFF8A2D901FCC7FC5CA21303A25CA21307A25CA2130FA25CA213
1FA25CA2133FA291C8FCA249141C1618137E163801FE1430167049146016E000011401ED
03C0491307ED0F800003147FB7FC160026287DA72E>76 D<013FB512F816FF903A01FC00
1FC04AEB07E0EE01F0010315F816005CA2130716015CA2010FEC03F0A24AEB07E0EE0FC0
011FEC1F80EE3E0091388001FC91B512E093C7FCD93F80C8FC91C9FCA35B137EA313FE5B
A312015BA21203B512C0A22D287DA72A>80 D<91381FE0089138FFFC18903903E01E3890
390780077090390E0003F0491301491300017814E0137013F0A2000115C0A216007F7F6C
B47E14F86DB47E6D13F06D7F01077F01007F1407EC00FF153F81A3001880A20038141E12
300038141C153C00781438007C5C007E5C0077EB03C026E3E00FC7FC38C0FFFE38801FF0
252A7CA829>83 D<EB0FC0EB7FF0EBF0383803C01CEA0780EA0F005A121E003E13384813
70EB07E0387FFF8038FFFC0000F8C7FCA45AA214040078130C141800381330003C13E038
1E07C0380FFF00EA03F8161B7C991F>101 D<EA03E0486C1338D80C78137CEA187C0030
5CA212605B00C0495AA2EA01F0A24A5AEA03E0A34848485AEDC180A391380F8300A20003
131F9038E037863901F0E7CE3900FFC3FC90383F00F0211B7D9927>117
D<90387C03C03901FF0FF03907079C30390E03B078000CEBF0F8001813E1123015F03960
07C0E015001200A2495AA449C7FC15301238007C1460EAFC3E15C0EAF87E39F06F038039
70C70700383F83FE381F01F81D1B7D9926>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmex10 10 2
/Ff 2 20 df<160F161F163E167C16F8ED01F0ED03E0ED07C0150FED1F801600153E157E
5D4A5A5D14034A5A5D140F4A5AA24AC7FC143E147E5CA2495AA2495AA2495AA2130F5CA2
495AA2133F91C8FCA25B137E13FEA25B1201A25B1203A35B1207A35B120FA35BA2121FA4
5B123FA690C9FC5AAA12FEB3AC127FAA7E7FA6121F7FA4120FA27FA312077FA312037FA3
12017FA212007FA2137E137F7FA280131FA26D7EA2801307A26D7EA26D7EA26D7EA2147E
143E143F6E7EA26E7E1407816E7E1401816E7E157E153E811680ED0FC01507ED03E0ED01
F0ED00F8167C163E161F160F28C66E823D>18 D<12F07E127C7E7E6C7E6C7E6C7E7F6C7E
1200137C137E7F6D7E130F806D7E1303806D7EA26D7E147C147E80A26E7EA26E7EA26E7E
A2811403A26E7EA2811400A281157E157FA2811680A2151F16C0A3150F16E0A3150716F0
A31503A216F8A4150116FCA6150016FEAA167FB3AC16FEAA16FC1501A616F81503A416F0
A21507A316E0150FA316C0151FA31680153FA216005DA2157E15FE5DA214015DA24A5AA2
14075DA24A5AA24A5AA24AC7FCA2147E147C14FC495AA2495A5C1307495A5C131F49C8FC
137E137C5B1201485A5B485A485A48C9FC123E5A5A5A28C67E823D>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmtt8 8 23
/Fg 23 120 df<007FB51280B612C0A46C14801A067C9623>45 D<123E127FEAFF80A5EA
7F00123E0909738823>I<EC0380EC07C0140FA2141F1580143F15005C147EA214FE5C13
015C13035C13075CA2130F5C131F5C133F91C7FCA25B137E13FE5B12015BA212035B1207
5B120F5B121F5BA2123F90C8FC5A127E12FE5AA25A12781A347CAD23>I<1318133C137C
A213FC120112031207127F12FFA2137C127C1200B3A6387FFFFC14FEA314FC172A7AA923
>49 D<EB7FC03803FFF04813FC001F7F48EBFF80EA7F80397E003FC000FEEB0FE0481307
6CEB03F0A31401127C1238C7FC1403A2EC07E0A2EC0FC0141FEC3F80150014FE1301EB03
F8495A495AEB3FC0495A01FEC7FC485A485AD80FF013E0391FE001F0EA3F8048B5FCB6FC
A36C14E01C2A7DA923>I<EB7FC03801FFF0000713FC487F487F393FE07F809038801FC0
140F1407A3EA0E00C7120FA2EC1F80143F903801FF00EB7FFE495A5C806DB4FC9038007F
80EC1FC0EC0FE01407EC03F0A21401A2127C12FE1403A2EC07E048130F6CEB1FC0387FC0
7F6CB512806C14006C13FC00035B38007FC01C2B7DA923>I<123E127FEAFF80A5EA7F00
123EC7FCAB123E127FEAFF80A5EA7F00123E091D739C23>58 D<B512F014FE80158015C0
390F801FE0EC07F01403140115F81400A5140115F014031407EC1FE090B512C015801500
5C14F00180C7FCABEAFFF87FA35B1D297EA823>80 D<3803FF80000F13E04813F8487F80
EB80FFEC3F80381F001FC7FC140F14FF137F0003B5FC120F5A387FF00F130012FCA25A14
1F7E6C133F387F81FF90B512FC6C14FE7E000713C73901FE01FC1F1D7D9C23>97
D<B47E7FA41207A7EBC1FCEBC7FF01DF13C090B512E015F09038FE0FF8EBF8039038F001
FCEBE000A249137EA2153EA5157E7F15FC7F14019038F803F89038FE0FF090B5FC15E001
DF138001CF1300380383F81F297FA823>I<EB3FF0EBFFFC000313FF5A5A381FE07FEA3F
80387F003E007E90C7FCA25AA25AA57EA2007E1307007FEB0F80141FEA3FC0391FF07F00
6CB5FC6C5B6C5BC613F0EB3FC0191D7B9C23>I<ECFF8015C0A41407A7EB7F873801FFE7
4813F7000F13FF5A13E0383F803F387F001F007E130FA2481307A25AA56C130FA2127E14
1F007F133F383F807FEBE0FF6CB512FE7E000313F76C13C738007F031F297EA823>I<EB
3FC0EBFFF800037F4813FF481480381FF07F393F801FC0EB000F007E130715E05AB6FCA4
15C000F8C8FC7EA2007EEB01C0007FEB03E0383F800713E0391FF81FC06CB5FC6C148000
01EBFE006C6C5AEB1FE01B1D7D9C23>I<B47E7FA41207A7EBC1FCEBC7FF01DF138090B5
12C0A29038FE0FE0EBF807EBF00313E0A313C0AD39FFFE1FFF5CA38020297FA823>104
D<EA7FFEB5FCA37EEA001FB3AD007FB512C0B612E0A36C14C01B297CA823>108
D<397E1F01F039FF7FC7FC9038FFEFFE14FF6C80390FE1FE1FEBC1FC01C07FEB80F8A2EB
00F0AE3A7FE3FE3FE026FFF3FF13F0A3267FE3FE13E0241D819C23>I<38FF81FCEBC7FF
01DF138090B512C0A23907FE0FE0EBF807EBF00313E0A313C0AD39FFFE1FFF5CA380201D
7F9C23>I<133F3801FFE0487F487F487F381FC0FE383F807F383E001F007E1480007C13
0F00FC14C0481307A66C130FA2007C1480007E131F6CEB3F006D5A381FE1FE6CB45A6C5B
6C5B6C5BD8003FC7FC1A1D7C9C23>I<38FF81FCEBC7FF01DF13C090B512E015F03907FE
0FF8EBF8039038F001FCEBE000A249137EA2153EA5157E7F15FC7F14019038F803F89038
FE0FF090B5FC15E001DF138001CF1300EBC3F801C0C7FCAAEAFFFEA51F2C7F9C23>I<39
7FF00FE039FFF87FF8ECFFFC13FB6CB5FCC613F8ECC078EC800091C7FC5BA25BA35BAA38
7FFFFCB57EA36C5B1E1D7E9C23>114 D<3801FF9C000F13FE5A127FA2EAFF0000FC137E
48133EA26C131C6C1300EA7FF0383FFF80000F13E06C13F838007FFCEB01FEEB007F0070
133F00F8131F7E143F7E38FF80FFEBFFFE14FC14F814F000701380181D7B9C23>I<1370
13F8A7007FB51280B612C0A36C1480D800F8C7FCACEC01C0EC03E0A3EBFC07140F9038FE
1FC0EB7FFF158090383FFE00EB0FFCEB07F01B257EA423>I<397FF00FFE39FFF81FFFA3
397FF00FFE001FC712F86C14F0A57F390783E1E0EB87F1A3EB8FF90003EB79C013CFA2EB
DF7BA2EBDE3B00011480EBFE3FA2EBFC1FA23900F80F00201D7F9C23>119
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmr9 9 70
/Fh 70 124 df<91393FE00FE0903A01FFF83FF8903A07E01EF83C903A1F800FF07E903A
3F001FE0FE017E133F4914C0485A1738484890381F8000ACB812C0A33B03F0001F8000B3
A7486C497EB50083B5FCA32F357FB42D>11 D<EC1FE0ECFFFC903803F01E90390FC00780
EB1F8090393F000FC0017E131F5BA2485AED0F8092C7FCA9ED0FC0B7FCA33901F8001F15
0FB3A6486CEB1FE0267FFFC1B5FCA328357FB42B>I<DA1FE013FF9126FFFC0713E0903B
03F01E1F80F0903B0FC0077E003CD91F805B90273F001FF8137E017E4A13FE495CA24848
5C030F147C95C7FCA9187EB912FEA33B01F8000FC000187EB3A6486C496C13FF297FFFC1
FFFE0F13F8A33D357FB440>14 D<003C13F0387E01F838FF03FCA2EB83FEA2EA7F81383D
80F600011306A40003130EEB000CA248131C00061318000E1338000C1330001C13704813
E0387001C00060138017177EB326>34 D<14C01301EB0380EB0F00130E5B133C5B5BA248
5A485AA212075B120F90C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3121E
121FA27E7F12077F1203A26C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79B7
1E>40 D<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2
131E131FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2
485A485AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<123C127EB4FCA21380A2
127F123D1201A412031300A25A1206120E120C121C5A5A126009177A8715>44
D<B512F0A514057F921A>I<123C127E12FFA4127E123C08087A8715>I<1530157815F8A2
15F01401A215E01403A215C01407A21580140FA215005CA2143EA2143C147CA2147814F8
A25C1301A25C1303A25C1307A2495AA291C7FC5BA2131E133EA2133C137CA2137813F8A2
5B1201A25B1203A2485AA25B120FA290C8FC5AA2121E123EA2123C127CA2127812F8A25A
12601D4B7CB726>I<EB0FE0EB7FFCEBF83E3903E00F803907C007C0EB8003000F14E039
1F0001F0A24814F8A2003E1300007E14FCA500FE14FEB2007E14FCA56CEB01F8A36C14F0
A2390F8003E03907C007C0A23903E00F803900F83E00EB7FFCEB0FE01F347DB126>I<13
075B5B137FEA07FFB5FC13BFEAF83F1200B3B3A2497E007FB51280A319327AB126>I<EB
3FC0EBFFF0000313FC380F80FF391E007F80001CEB3FC048EB1FE048130F15F000601307
12FC6C14F87E1403A3007E1307123CC7FC15F0A2140F15E0EC1FC0A2EC3F801500147E5C
495A5C495A495A495A49C7FC133E133C4913185B485A48481330485A48C7FC001C147000
1FB512F05A5AB612E0A31D327CB126>I<EB1FE0EBFFFC4813FF3907E03F80390F001FC0
001EEB0FE0001CEB07F0123F018013F8140313C01380A2381F0007C7FC15F0A2EC0FE015
C0141FEC3F80EC7E00EB01F8EB7FE014FCEB003FEC1FC0EC0FE0EC07F015F8140315FC14
0115FEA3127EB4FCA415FC48130312780070EB07F86C14F0003C130F001FEB1FE0390FE0
3F800003B51200C613FCEB1FE01F347DB126>I<EC01C0A214031407A2140F141FA2143F
147F146F14CF1301EB038F140F1307130E130C131C13381330137013E013C0EA01801203
13001206120E120C5A123812305A12E0B71280A3C7380FC000A94A7E0107B51280A32133
7EB226>I<000C14C0380FC00F90B5128015005C5C14F014C0D80C18C7FC90C8FCA9EB0F
C0EB7FF8EBF07C380FC03F9038001F80EC0FC0120E000CEB07E0A2C713F01403A215F8A4
1218127E12FEA315F0140712F8006014E01270EC0FC06C131F003C14806CEB7F00380F80
FE3807FFF8000113E038003F801D347CB126>I<14FE903807FF80011F13E090383F00F0
017C13703901F801F8EBF003EA03E01207EA0FC0EC01F04848C7FCA248C8FCA35A127EEB
07F0EB1FFC38FE381F9038700F809038E007C039FFC003E0018013F0EC01F8130015FC14
00A24814FEA5127EA4127F6C14FCA26C1301018013F8000F14F0EBC0030007EB07E03903
E00FC03901F81F806CB51200EB3FFCEB0FE01F347DB126>I<1230123C003FB6FCA34814
FEA215FC0070C7123800601430157015E04814C01401EC0380C7EA07001406140E5C1418
14385CA25CA2495A1303A3495AA2130FA3131F91C7FCA25BA55BA9131C20347CB126>I<
EB0FE0EB7FFC90B5FC3903F01F803907C007C0390F0003E0000EEB01F0001E1300001C14
F8003C1478A3123EA2003F14F86D13F0EBC001D81FF013E09038F803C0390FFE07803907
FF0F006C13DE6C13F87EEB3FFE8001F713C0D803E313E0D8078013F0390F007FF8001E13
1F003EEB07FC003C1303481301EC007E12F848143EA2151EA37E153C1278007C14787E6C
14F0390F8003E03907F01FC00001B5120038007FFCEB1FE01F347DB126>I<EB0FE0EB7F
F8EBFFFE3803F83F3907E00F80390FC007C0D81F8013E0EC03F0EA3F0048EB01F8127EA2
00FE14FC1400A415FEA5007E1301A2127F7E1403EA1F80000F13073807C00E3803E01C38
01F03838007FF090381FC0FC90C7FC1401A215F8A215F01403001F14E0383F800715C014
0FEC1F809038003F00001C137E381F01FC380FFFF0000313C0C690C7FC1F347DB126>I<
123C127E12FFA4127E123C1200B0123C127E12FFA4127E123C08207A9F15>I<15E0A34A
7EA24A7EA34A7EA3EC0DFE140CA2EC187FA34A6C7EA202707FEC601FA202E07FECC00FA2
D901807F1507A249486C7EA301066D7EA2010E80010FB5FCA249800118C77EA24981163F
A2496E7EA3496E7EA20001821607487ED81FF04A7ED8FFFE49B512E0A333367DB53A>65
D<B7FC16E016F83A03FC0003FE0001EC00FFEE7F80EE3FC0161F17E0160F17F0A617E016
1F17C0EE3F80EE7F0016FEED03FC90B612F05E9039FC0007FCED00FEEE3F80EE1FC0EE0F
E017F0160717F8160317FCA617F81607A2EE0FF0EE1FE0163FEE7FC00003913803FF00B7
5A16F816C02E337DB236>I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A
0FF0003C7CD91FC0EB0EFCD97F80130701FEC7120348481401000315005B4848157C485A
173C485A171C123F5B007F160CA390C9FC481600AB7E6D150CA3123F7F001F161C17186C
7E17386C6C15306C6C15706D15E012016C6CEC01C0D97F80EB0380D91FC0EB0F00D90FF0
131ED903FE13FC0100B512F0023F13C0DA03FEC7FC2E377CB437>I<B77E16F016FE3A01
FE0001FF00009138003FC0EE0FE0707E707E707E707E177E177FEF3F80A2EF1FC0A3EF0F
E0A418F0AA18E0A3171F18C0A21880173F18005F17FE5F4C5AEE07F04C5AEE3FC000014A
B45AB748C7FC16F8168034337EB23B>I<B812C0A3D803FCC7127F0001150FEE03E01601
A21600A21760A403061330A41700150EA2151E157E90B512FEA39038FC007E151E150EA2
1506170CA3171892C7FCA41738A21770A217F01601160316070003157FB812E0A32E337D
B234>I<B81280A3D803FCC7FC0001151FEE07C01603A21601A21600A41760150CA31700
A2151CA2153C15FC90B5FCA3EBFC00153C151CA2150CA592C8FCAB487EB512FEA32B337D
B232>I<DA03FE130C91393FFF801C91B512E0903A03FE01F83C903A0FF0003C7CD91FC0
EB0EFCD97F80130701FEC7120348481401000315005B4848157C485A173C485A171C123F
5B007F160CA390C9FC4893C7FCAA0303B512E07E7F92390003FE00705A123F7F121FA26C
7E7F12076C7E7F6C6C14036C7E6D6C1307D91FC0EB0E7CD90FF0EB1C3CD903FEEBF81C01
00B5EAF00C023F01C0C7FCDA03FEC8FC33377CB43C>I<B5D8FE03B512F8A3000190C738
07FC006C486E5AB390B7FCA349C71203B3A3486C4A7EB5D8FE03B512F8A335337EB23A>
I<B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C>I<017FB5FCA39038003F
E0EC1FC0B3B1127EB4FCA4EC3F805A0060140000705B6C13FE6C485A380F03F03803FFC0
C690C7FC20357DB227>I<B500FE903807FFF8A3000190C7000113006C48EC00FC17F04C
5A4C5A4CC7FC160E5E5E5E5E4B5A4B5A4BC8FC150E5D5D15F84A7E14034A7EEC0EFF5C4A
6C7E4A6C7EECE01FD9FFC07F4A6C7E4A6C7E5B6F7E6F7EA26F7E707EA2707E707E160F83
707E707EA283486C913807FF80B500FE013F13FCA336337EB23C>I<B512FEA3D803FEC9
FC6C5AB3A9EE0180A416031700A45EA25E5E5E5E16FE00031407B7FCA329337DB230>I<
D8FFFC923801FFF86D5DA20003EFFE00D801BFED06FCA3D99F80140CA2D98FC01418A3D9
87E01430A2D983F01460A3D981F814C0A3D980FCEB0180A2027EEB0300A36E1306A26E6C
5AA36E6C5AA36E6C5AA26E6C5AA36E6C5AA3913800FD80A2037FC7FCA3486C133ED80FF0
4B7EB5011C90387FFFF8A33D337CB246>I<D8FFFE91381FFFF87F80C6030013006E143C
D9DFE01418EBCFF0A2EBC7F8EBC3FCA2EBC1FEEBC0FF6E7EA26E7E6E7EA26E7E6E7E6E7E
A26E7E6E7EA2ED7F80ED3FC0ED1FE0A2ED0FF0ED07F8A2ED03FCED01FEED00FFA2EE7F98
EE3FD8A2EE1FF8160F1607A216031601A2486C1400D807F81578B500C01438A217183533
7EB23A>I<EC07FC91387FFFC0903901FC07F0903907E000FCD90F80133E013FC76C7E01
7E6E7E496E7E48486E7E48486E7EA248486E7E000F8249157E001F167FA24848ED3F80A2
007F17C0A290C9121FA24817E0AB6C17C06D153FA3003F17806D157FA2001F17006D5D00
0F5E6C6C4A5AA26C6C4A5A00015E6C6C4A5A017E4A5A6D4A5AD91FC0017FC7FCD907E013
FC903901FC07F09039007FFFC0DA07FCC8FC33377CB43C>I<B612FEEDFFC016F03A03FC
0007FC0001EC00FE167FEE3F80EE1FC017E0160FA217F0A617E0A2EE1FC0A2EE3F80EE7F
0016FEED07F890B65A168001FCC9FCB3A2487EB512F8A32C337DB234>I<B612FCEDFF80
16F03A01FE0007FC0000EC01FEED007F707E707E83160F83A65FA24C5AA24C5A047EC7FC
4B5AED0FF090B612C093C8FC9039FE001FC0ED07F06F7E6F7E150082167E167FA583A518
0C17C0A2043F131C486C1618B500FEEB1FE0040F1338933807F070C93801FFE09338003F
8036357EB239>82 D<90381FE00390387FFC0748B5FC3907F01FCF390F8003FF48C7FC00
3E80814880A200788000F880A46C80A27E92C7FC127F13C0EA3FF013FF6C13F06C13FF6C
14C06C14F0C680013F7F01037F9038003FFF140302001380157F153FED1FC0150F12C0A2
1507A37EA26CEC0F80A26C15006C5C6C143E6C147E01C05B39F1FC03F800E0B512E0011F
138026C003FEC7FC22377CB42B>I<007FB712FEA390398007F001D87C00EC003E007816
1E0070160EA20060160600E01607A3481603A6C71500B3AB4A7E011FB512FCA330337DB2
37>I<B500F0903803FFF8A3D807FEC8EA7FC06C48ED1F000001161E6D151C00001618A2
6D15386D1530A26D6C5CA26E14E0011F5DA26D6C495AA28001074AC7FCA26D6C1306A280
01015CA26E131C01001418806E5BA2ED8070023F1360A26E6C5AA215E1020F5BA2DA07F3
C8FCA215FBEC03FEA36E5AA26E5AA31570A235357EB23A>86 D<B5D8F007B539800FFFF0
A3000390C7273FF000011300D801FC6E48EB007C1A386D140F00001930836D020715706D
1860A26E496C14E0013F60A26ED919FC1301011F60A26ED930FE1303010F95C7FCA26ED9
607F5B01071706A26E9039C03F800E0103170CA2913BFC01801FC01C01011718A2913BFE
03000FE03801001730A2DAFF06EB07F0027F5EA2038CEB03F8023F5EA203D8EB01FC021F
EDFD80A203F0EB00FF020F93C8FCA24B800207157EA24B143E0203153CA24B141C020115
184C357FB24F>I<B500F8ECFFFEA300030180EC3FE06C90C8EA1F806CEE0E006D6C5C6D
6C141817386D6C14305F6D6C14E06D6C5C16016D6C5C6D6C49C7FC5E6D6C13065E91387F
801C91383FC018163891381FE0306E6C5A16E06E6C5AEDF980EC03FF6E90C8FC5D1400B1
4A7E91B512FCA337337FB23A>89 D<003FB612FCA39039F80007F813C090C7EA0FF0003E
EC1FE0123C0038EC3FC00078EC7F801270EDFF004A5AA20060495AA24A5A4A5AC7FC4A5A
4A5AA24A5A4AC7FCA2495A495AA2495A495AA24948130C495AA2495A49C7FCA24848141C
A2485A485A1638485A4848147816F84848130148481307153FB7FCA326337CB22F>I<EA
FFF0A4EAF000B3B3B3ADEAFFF0A40C4B79B715>I<0003130C48131C000E133848137000
181360003813E0003013C0EA700100601380A2EAE00300C01300A400DE137800FF13FCEB
83FEA2EA7F81A2383F00FC001E1378171774B326>I<EAFFF0A41200B3B3B3AD12FFA40C
4B7FB715>I<EB7F803803FFF0380F80FC381C003E003F133F6D6C7E6E7EA26E7EEA1F00
C7FCA4EB01FF131FEBFF873803FC07EA0FF0EA1FC0EA3F80127F13004815C05AA3140FA2
6C131F6C133B3A3F8071F180391FC1E1FF2607FFC013003900FE003C22237DA126>97
D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E01FE7F49EB1F8049
EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB1F8001ECEB3F0001
CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8EB3FFF9038FC07C039
01F000E03903E003F03807C007120FEA1F80123F90380003E04890C7FCA2127E12FEAA12
7FA26C14187F001F14386D1330000F14706C6C13E03903F001C03900FC0F8090383FFE00
EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEBFC0F3901F003BF39
07E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C6C5BA26C6C5B6C6C
4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B>I<EB0FE0EB7FFCEB
F83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F0014014814F8127EA212FE
A2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D13706C6C13E03901F003
C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90381F078090383E0FC0EB
7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7487E387FFFE0A31A
357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC73907E03F033A0FC01F8380
9039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C48C7FCEBF07C380E
FFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14FC4880381F000100
3EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390FC001F83903F007E0C6
B51280D91FFCC7FC22337EA126>I<EA03F012FFA312071203AEEC1FC0EC7FF09038F1E0
FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7FFFCA326347EB32B
>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA3120F1207B3A6EA0FF0
B5FCA310337EB215>I<EA03F012FFA312071203AF913803FFE0A36E1300EC00F8EC01E0
5D4A5A020FC7FC141C5C5C14F0EBF3F8EBF7FC13FEEBFC7EEBF87F496C7E141F6E7E8114
076E7E8114016E7E81486CEBFF80B500C313F0A324347EB329>107
D<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA310347EB315>I<2703F01FE013FF00FF
90267FF80313C0903BF1E07C0F03E0903BF3803E1C01F02807F7003F387FD803FE147049
6D486C7EA2495CA2495CB3486C496C487EB53BC7FFFE3FFFF0A33C217EA041>I<3903F0
1FC000FFEB7FF09038F1E0FC9038F3807C3907F7007EEA03FE497FA25BA25BB3486CEB7F
80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE9038FC1F803901F007C03903C001E000
078048486C7E48C7127CA248147E003E143E007E143FA300FE1580A8007E1500A36C147E
A26C147C6D13FC6C6C485A00075C3903F007E03900FC1F80D93FFEC7FCEB07F021237EA1
26>I<3903F03F8000FFEBFFE09038F3C0F89038F7007ED807FE7F6C48EB1F804914C049
130F16E0ED07F0A3ED03F8A9150716F0A216E0150F16C06D131F6DEB3F80160001FF13FC
9038F381F89038F1FFE0D9F07FC7FC91C8FCAA487EB512C0A325307EA02B>I<3803E07C
38FFE1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049C7FCA35BB2487EB512
E0A31A217FA01E>114 D<EBFF06000713CE381F00FE003C133E48131E140E5A1406A27E
A200FE90C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F8000C0131F
140F6C1307A37E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019237EA11E>I<13
30A51370A313F0A21201A212031207381FFFFEB5FCA23803F000AF1403A814073801F806
A23800FC0EEB7E1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFFA30007EB00
7F000380B35DA35D12016D4813800000903803BFFC90387E073FEB1FFED907F813002622
7EA02B>I<B5EBFFF0A3D80FF0EB3F800007EC1F000003140E150C6D131C00011418A26C
6C5BA26D1370017E1360137F6D5BA290381F8180A214C3010F90C7FCA2EB07E6A214FE6D
5AA26D5AA36D5AA2146024217E9F29>I<B53A1FFF81FFF0A33C07F801FC003F8001F049
EB1E0000030100141C816C6C017C1318A26D017E1338000002FE1330A290267E01FF5B15
9F168090263F030F5BA216C0903A1F8607C180A202C613E390260FCC0390C7FCA2D907FC
13F6ECF80116FE6D486C5AA36D481378A36D48133034217F9F37>I<3A7FFF807FF8A33A
07F8001FC00003EC0F800001EC070015066C6C5BA26D131C017E1318A26D5BA2EC807001
1F1360ECC0E0010F5BA2903807E180A214F3010390C7FC14FBEB01FEA26D5AA31478A214
30A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0EA0FC02530
7F9F29>121 D<B712F8A22502809426>123 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmr8 8 48
/Fi 48 123 df<ECFFC0010713FC90381F807C90383E00FC5B5B485A0003147C5BAAB612
FCA23903E0007CB3A6486C13FE3A7FFF0FFFE0A2232F7FAE27>13
D<123C127EB4FCA21380A2127F123D1201A312031300A25A1206120E5A5A5A126009157A
AD14>39 D<13031307130E131C1338137013F0EA01E013C01203EA0780A2EA0F00A2121E
A35AA45AA512F8A25AAB7EA21278A57EA47EA37EA2EA0780A2EA03C0120113E0EA00F013
701338131C130E1307130310437AB11B>I<12C07E12707E7E7E120FEA0780120313C0EA
01E0A2EA00F0A21378A3133CA4131EA5131FA2130FAB131FA2131EA5133CA41378A313F0
A2EA01E0A2EA03C013801207EA0F00120E5A5A5A5A5A10437CB11B>I<EC0380B3A4B812
FCA3C7D80380C7FCB3A42E2F7CA737>43 D<123C127EB4FCA21380A2127F123D1201A312
031300A25A1206120E5A5A5A126009157A8714>I<B512C0A412047F9018>I<123C127E12
FFA4127E123C08087A8714>I<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387FFF
FEA2172C7AAB23>49 D<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A0060
EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F00147E14
7C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E0001FB5
FC5A4814C0B6FCA21C2C7DAB23>I<EB3FC03801FFF03807C0FC380E007E487FEC1F8000
3F14C0A2EB800F1300A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0EBFFC014F0EB00
FC143FEC1F8015C0140F15E0A2EC07F0A21238127C12FEA3EC0FE012F8006014C0007013
1F6C1480001EEB3F00380780FC3801FFF038007FC01C2D7DAB23>I<123C127E12FFA412
7E123C1200AD123C127E12FE12FFA3127F123F1203A312071206A2120E120C121C121812
3812701260082A7A9C14>59 D<4A7E4A7EA34A7EA24A7EA3EC1BF81419A2EC30FCA2EC70
FEEC607EA24A7EA349486C7EA2010380EC000FA201066D7EA3496D7EA2011FB57EA29038
180001496D7EA349147EA201E0147F4980A20001ED1F801203000716C0D80FF0EC3FE0D8
FFFC0103B5FCA2302F7EAE35>65 D<B612FCEDFF803A03F8000FC00001EC03F06F7E6F7E
82167E167FA6167E16FE5E4B5A4B5AED0FE0ED7F8090B6C7FC16E09039F80003F0ED01FC
6F7E167F821780161F17C0A61780163F17005E16FEED03FC0003EC0FF0B712C04BC7FC2A
2D7DAC32>I<DA1FF013C09138FFFE01903903F00F8390390F8001E3013FC71277017C14
3F4848141F4848140F48481407A248481403121F491401123F90C8FC481500A300FE1600
AB127F17C0A27E7F001F15016D1580120F6C6C1403EE07006C6C14066C6C140ED8007C5C
013F147890390F8001E0903903F00FC0902600FFFEC7FCEC1FF02A2F7CAD33>I<B712FE
A23903F800010001EC003E828282A282A3178016011518A293C7FCA31538157815F890B5
FCA2EBF800157815381518A21760A392C712C0A4160117801603A21607160F163F000391
3801FF00B8FCA22B2D7EAC30>69 D<D8FFF8903803FFFC7F00019138003FC06DEC0F006D
1406EBBF80A2EB9FC0EB8FE0138780EB83F8138180EB80FE147E147FEC3F80EC1FC0140F
15E0EC07F0140315F8EC01FC140015FE157FED3F86151F16C6ED0FE6150716F6ED03FE15
01A21500167E163EA2486C141ED80FF0140EB5FC16062E2D7DAC35>78
D<B612FCEDFF803A03F8000FE00001EC03F0ED00F882167E167F821780A617005E167E5E
5EED03F0ED0FE090B6128003FCC7FC01F8C9FCB2487EB512F0A2292D7EAC30>80
D<B612C015FC3903F8007F0001EC0FC06F7E6F7E6F7E82150082A55E15015E4B5A4B5A4B
5A037FC7FC90B512FC15F09038F800FC153E6F7E150F826F7EA582A5170316F815031707
486C903801FC0EB539F000FE1CEE3FF8C9EA07E0302E7DAC34>82
D<90383F80303901FFF0703807C07C390F000EF0001E13074813034813011400127000F0
1470A315307EA26C1400127E127FEA3FE013FE381FFFE06C13FC6C13FF00011480D8003F
13E013039038003FF0EC07F81401140015FC157C12C0153CA37EA215787E6C14706C14F0
6CEB01E039F78003C039E3F00F0038E07FFE38C00FF01E2F7CAD27>I<007FB712F8A290
39000FC003007C150000701638A200601618A200E0161CA248160CA5C71500B3A94A7E01
1FB512E0A22E2D7EAC33>I<EAFFE0A3EAE000B3B3B3A7EAFFE0A30B4379B114>91
D<EAFFE0A31200B3B3B3A712FFA30B437FB114>93 D<13FF000713C0380F01F0381C00F8
003F137C80A2143F001E7FC7FCA4EB07FF137F3801FE1FEA07F0EA1FC0EA3F80EA7F0012
7E00FE14065AA3143F7E007E137F007FEBEF8C391F83C7FC390FFF03F83901FC01E01F20
7D9E23>97 D<EA07C012FFA2120F1207AC14FE9038C7FF809038CF03E09038DC01F09038
F8007C49137E49133E497F1680A2150F16C0A9ED1F80A216005D6D133E6D5B01B05B9038
BC01F090380E07E0390607FF80260001FCC7FC222F7EAD27>I<EB1FE0EB7FFC3801F01E
3803E0073907C01F80EA0F80EA1F005A003EEB0F00007E90C7FCA2127C12FCA9127EA215
C07E6C130101801380380FC0033907E007003801F03E38007FF8EB1FC01A207E9E1F>I<
15F8141FA214011400ACEB0FE0EB7FF83801F81E3803E0073807C003380F8001EA1F0048
1300123E127EA25AA9127C127EA2003E13017EEB8003000F13073903E00EFC3A01F03CFF
C038007FF090391FC0F800222F7EAD27>I<EB1F80EBFFF03803E0783807C03E380F801E
381F001FEC0F80123E007E130715C0127C12FCA3B6FCA200FCC8FCA5127EA2003E14C012
3F6C1301390F80038001C013003803E00F3801F03C38007FF8EB1FC01A207E9E1F>I<EB
03F0EB0FFCEB3E1EEB7C3F13F8EA01F0A23803E00C1400AAB512E0A23803E000B3A6487E
387FFF80A2182F7FAE16>I<013F13F89038FFC3FE3903E1FF1E3807807C000F140C391F
003E00A2003E7FA76C133EA26C6C5A00071378380FE1F0380CFFC0D81C3FC7FC90C8FCA3
121E121F380FFFF814FF6C14C04814F0391E0007F848130048147C12F848143CA46C147C
007C14F86CEB01F06CEB03E03907E01F803901FFFE0038003FF01F2D7E9D23>I<EA07C0
12FFA2120F1207AC14FE9038C3FF809038C703E09038DE01F013F8496C7EA25BA25BB248
6C487E3AFFFE1FFFC0A2222E7EAD27>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCA8
EA07C012FFA2120F1207B3A5EA0FE0EAFFFCA20E2E7EAD14>I<EA07C012FFA2120F1207
ADEC1FFEA2EC0FF0EC07C05D020EC7FC5C5C5C5CEBC3C013C7EBCFE0EBDFF013F9EBF0F8
497EEBC07E143E80816E7E14076E7E816E7E486C487E3AFFFE07FF80A2212E7EAD25>
107 D<EA07C012FFA2120F1207B3B3A3EA0FE0EAFFFEA20F2E7EAD14>I<2607C07FEB07
F03BFFC3FFC03FFC903AC783F0783F3C0FCE01F8E01F803B07DC00F9C00F01F8D9FF8013
C04990387F000749137EA249137CB2486C01FEEB0FE03CFFFE0FFFE0FFFEA2371E7E9D3C
>I<3807C0FE39FFC3FF809038C703E0390FDE01F0EA07F8496C7EA25BA25BB2486C487E
3AFFFE1FFFC0A2221E7E9D27>I<EB1FE0EB7FF83801F03E3803C00F3907800780390F00
03C04814E0003EEB01F0A248EB00F8A300FC14FCA9007C14F8A26CEB01F0A26CEB03E0A2
390F8007C03907C00F803901F03E0038007FF8EB1FE01E207E9E23>I<3807C0FE39FFC7
FF809038CF03E0390FDC01F03907F800FC49137E49133E49133FED1F80A3ED0FC0A8151F
1680A2ED3F00A26D137E6D137C5D9038FC01F09038CE07E09038C7FF80D9C1FCC7FC01C0
C8FCA9487EEAFFFEA2222B7E9D27>I<90380FE01890387FF8383801F81C3903E00E7838
07C007390F8003F8001F1301EA3F00A2007E1300A212FE5AA8127EA36C13017EEB800338
0FC0073803E00E3801F03C38007FF0EB1FC090C7FCA94A7E91381FFFC0A2222B7E9D25>
I<380781F838FF87FEEB8E3FEA0F9CEA07B813B0EBF01EEBE000A45BB0487EB5FCA2181E
7E9D1C>I<3801FE183807FFB8381E01F8EA3C00481378481338A21418A27E7EB41300EA
7FF06CB4FC6C13C06C13F0000113F838001FFC130138C0007E143EA26C131EA27EA26C13
3CA26C137838FF01F038E3FFC000C0130017207E9E1C>I<1360A413E0A312011203A212
07121FB512F0A23803E000AF1418A714383801F03014703800F860EB3FE0EB0F80152A7F
A81B>I<D807C013F800FF131FA2000F130100071300B21401A314033803E007EC0EFC3A
01F81CFFC038007FF890391FE0F800221F7E9D27>I<3AFFFC01FFC0A23A0FE0007E0000
07147C15380003143015706C6C1360A26C6C5BA390387C0180A26D48C7FCA2EB3F07EB1F
06A2EB0F8CA214DCEB07D8A2EB03F0A36D5AA26D5A221E7F9C25>I<3BFFFC3FFE07FFA2
3B0FE003F001F801C09038E000F00007010114E0812603E00314C0A2913807F8012701F0
06781380A29039F80E7C030000D90C3C1300A290397C181E06A2151F6D486C5AA2168C90
391F600798A216D890390FC003F0A36D486C5AA36DC75A301E7F9C33>I<3AFFFC07FF80
A23A0FF003FC000003EB01F0000114C06D485A000091C7FCEB7C06EB3E0E6D5A14B8EB0F
B0EB07E013036D7E497E1307EB067C497EEB1C1F01387FEB700F496C7E6E7ED803C07F00
076D7E391FE003FC3AFFF007FFC0A2221D7F9C25>I<3AFFFC01FFC0A23A0FE0007E0000
07147C1538000314306D137000011460A26C6C5BA2EBFC01017C5BEB7E03013E90C7FCA2
EB1F06A2148EEB0F8CA2EB07D8A2EB03F0A36D5AA26D5AA2495AA2130391C8FC1278EAFC
06A25B131CEA7838EA7070EA3FE0EA0F80222B7F9C25>I<003FB51280A2EB003F003C14
000038137E00305BEA700100605B495A495A130F00005B495A49C7FC5B137E9038FC0180
EA01F8120313F03807E003EA0FC0001F1400138048485A007E5B00FE133FB6FCA2191D7E
9C1F>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr6 6 7
/Fj 7 56 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E>49
D<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C1278003013
FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA0380380600
185A5A383FFFF85AB512F0A216217CA01E>I<13FF000313C0380F03E0381C00F014F800
3E13FC147CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00A2380003E0EB00
F01478147C143E143F1230127812FCA2143E48137E0060137C003813F8381E03F0380FFF
C00001130018227DA01E>I<14E01301A213031307A2130D131D13391331136113E113C1
EA01811203EA07011206120C121C12181230127012E0B6FCA2380001E0A6EB03F0EB3FFF
A218227DA11E>I<00101330381E01F0381FFFE014C01480EBFE00EA1BF00018C7FCA513
FE381BFF80381F03C0381C01E0381800F014F8C71278A2147CA21230127812F8A2147848
13F8006013F0387001E01238381E07803807FF00EA01F816227CA01E>I<EB0FC0EB7FF0
3801F0383803C0183807803C380F007C121E001C1338003C1300A2127C1278EB7FC038F9
FFE038FB80F038FE0038143C48131EA248131FA41278A36C131EA2001C133C001E13386C
1370380781E03801FFC038007F0018227DA01E>I<1230123C003FB5FCA24813FE14FC38
60001C143814704813E014C0EA0001EB0380EB07001306130E5BA25BA21378A35BA41201
A76C5A18237CA11E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmr7 7 8
/Fk 8 56 df<EB3F803801FFF03803E0F83807803C48487E001E7F003E1480A2003C1307
007C14C0A400FC14E0AE007C14C0A36CEB0F80A36CEB1F006C131E6C6C5A3803E0F86CB4
5A38003F801B277EA521>48 D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A2
15267BA521>I<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80
A4127CC7FC15005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA
0180390300030012065A001FB5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01
F8381C007C0030137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801FF
8091C7FC380001E06D7E147C80143F801580A21238127C12FEA21500485B0078133E0070
5B6C5B381F01F03807FFC0C690C7FC19277DA521>I<1438A2147814F81301A213031307
1306130C131C131813301370136013C012011380EA03005A120E120C121C5A12305A12E0
B612E0A2C7EAF800A7497E90383FFFE0A21B277EA621>I<0018130C001F137CEBFFF85C
5C1480D819FCC7FC0018C8FCA7137F3819FFE0381F81F0381E0078001C7F0018133EC7FC
80A21580A21230127C12FCA3150012F00060133E127000305B001C5B380F03E03803FFC0
C648C7FC19277DA521>I<EB0FE0EB3FF8EBF81C3801E0063803C01F48485AEA0F005A12
1E003E131E91C7FC5AA21304EB3FC038FCFFF038FDC078EB003CB4133E48131E141FA248
1480A4127CA4003C1400123E001E131E143E6C133C6C6C5A3803C1F03801FFC06C6CC7FC
19277DA521>I<1230123C003FB512E0A215C0481480A239700007000060130E140C4813
1C5C5CC75A5C1301495AA249C7FC5B130E131EA3133E133CA2137CA413FCA813781B287D
A621>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmti10 10 22
/Fl 22 121 df<EE3FFC4BB51280923907E007C092391F8001E0DB3F0013F0037E13034B
1307A24A5A18E04A48EB038094C7FCA314075DA4140F5DA3010FB7FCA25F903A001F8000
7EA217FE023F5C92C7FCA216015F5C147E16035FA214FE4A13075FA30101140F5F4AECC1
C0A2161F1783010316805CA2EF870013074A5CEE0F8EEE079EEE03FC010FEC00F04A91C7
FCA35C131FA2001C90CAFC127E5BEAFE3E133C137CEAF878EA78F0EA3FE0EA0F80344C82
BA2F>12 D<387FFFF8A2B5FCA214F0150579941E>45 D<0103B500F890387FFFE0A21AC0
90260007F8C7380FFC004B15E061020F4BC7FC183E4B5C18F0021F4A5A4D5A4BEB0F804D
C8FC023F143C5F4B5B4C5A027FEB07C04CC9FCED001E5E4A5BED01FCECFE031507010149
7E151FECFC7C4B7E903903FDE07FDAFFC07F1580ED003F49488014F84A131F83130F160F
4A801607011F81A24A130383133F16014A80A2017F6E7EA291C8FC494A7F007F01FE011F
13FCB55CA243397CB840>75 D<14F8EB07FE90381F871C90383E03FE137CEBF801120148
486C5A485A120FEBC001001F5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48EC
C1C0A2141F15831680143F1587007C017F1300ECFF076C485B9038038F8E391F0F079E39
07FE03FC3901F000F0222677A42A>97 D<147F903803FFC090380FC1E090381F0070017E
13784913383901F801F83803F003120713E0120FD81FC013F091C7FC485AA2127F90C8FC
A35A5AA45AA3153015381578007C14F0007EEB01E0003EEB03C0EC0F806CEB3E00380F81
F83803FFE0C690C7FC1D2677A426>99 D<ED01F815FFA3150316F0A21507A216E0A2150F
A216C0A2151FA21680A2153FA202F81300EB07FE90381F877F90383E03FF017C5BEBF801
12013803F00048485B120FEBC001121F5DEA3F801403127F01005BA214075A485CA2140F
A248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF076C485B9038038F8E391F
0F079E3907FE03FC3901F000F0253B77B92A>I<147F903803FFC090380FC1E090383F00
F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F80397F81FF00
EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01E0EC03C06CEB
0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>I<EC07C0EC3FF09138FC38E0
903901F01FF0EB03E0903807C00FEB0F80011F1307D93F0013E05B017E130F13FE4914C0
1201151F1203491480A2153F1207491400A25DA249137EA215FEA25D0003130114031407
6C6C485A0000131FEB787BEB3FF390380FC3F0EB00031407A25DA2140F5D121C007E131F
5D00FE49C7FC147E5C387801F8387C07E0381FFF80D803FEC8FC24367CA426>103
D<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B90387E07F0EC1FFC
EC783E9038FFE01F02C01380EC800F1400485A16C05B49EB1F8012035BA2153F00071500
5BA25D000F147E5B15FE5D121FD98001131C15F8163C003F01031338010013F0A2167048
14E0007E15F016E0EDE1C000FE903801E38048903800FF000038143C263B7BB92A>I<EB
01C0EB07E014F0130F14E01307EB038090C7FCAB13F0EA03FCEA071EEA0E1F121CA21238
5B1270A25BEAF07E12E013FEC65AA212015B1203A25B12075BA2000F13E013C013C1001F
13C01381A2EB83801303EB0700A2130E6C5AEA07F8EA01E0143879B619>I<EB03F0EA01
FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B017EEB0F80ED3FE015F09039FE01
C1F09038FC0387EC0707140E0001011C13E0EBF83891383003800270C7FC00035BEBF1C0
EBF38001FFC8FCEA07FC7FEBFFC0EBE7F8380FE1FCEBC07E147F80001F809039801F81C0
A21583003F013F138001001303A21507481500007E133EEC1E0E151E00FE6D5A48EB07F8
0038EB01E0243B7BB926>107 D<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA213
7EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290
C7FCA25AA2EA7E0EA212FE131EEAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80
123B79B915>I<D801E001FEEB07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03
E1E01F261C1F78D9F3C013803C383FF001F7800F02E01400007801C013FE007018C00280
5B4A4848EB1F80EAF07FD8E07E5CA200000207143F01FE1700495CA2030F5C0001177E49
5C18FE031F5C120349DA8001131C18F8033F153C00070403133849020013F0A24B157000
0F17E049017E15F019E003FEECE1C0001FEE01E34949903800FF000007C70038143C3E26
79A444>I<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383F
F00114E0007813C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA2150F0001
5D5B151F5E12034990383F8380160316070007027F130049137EA2160E000F147C49141E
161C5E001FEC3C7849EB1FE00007C7EA0780292679A42F>I<147F903803FFC090380FC1
F090381F00F8017E137C5B4848137E4848133E0007143F5B120F485AA2485A157F127F90
C7FCA215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F8000
3EEB3F00147E6C13F8380F83F03803FFC0C648C7FC202677A42A>I<9039078007C09039
1FE03FF090393CF0787C903938F8E03E9038787FC00170497EECFF00D9F0FE148013E05C
EA01E113C15CA2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80
035E013F495A6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA2
1201A25BA21203A25B1207B512C0A3293580A42A>I<3903C003F0390FF01FFC391E783C
0F381C7C703A3C3EE03F8038383FC0EB7F800078150000701300151CD8F07E90C7FCEAE0
FE5BA2120012015BA312035BA312075BA3120F5BA3121F5BA3123F90C9FC120E212679A4
23>114 D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F0000113
0313F0A215E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C0130014
3F141F140F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD8
01FEC7FC1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5
FCA2B6FC3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F13
38EB0078147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>
I<13F8D803FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270
013F131F00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349
EBFC0EA20201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F8
3C78E090393FF03FC090390FC00F00272679A42D>I<01F01507D803FC903903801F80D8
071E903907C03FC0D80E1F130F121C123C0038021F131F49EC800F00701607A249133FD8
F07E168000E0ED000313FEC64849130718000001147E5B03FE5B0003160E495BA2171E00
070101141C01E05B173C1738A217781770020314F05F0003010713016D486C485A000190
391E7C07802800FC3C3E0FC7FC90393FF81FFE90390FE003F0322679A437>119
D<903907E007C090391FF81FF89039787C383C9038F03E703A01E01EE0FE3803C01F0180
13C0D8070014FC481480000E1570023F1300001E91C7FC121CA2C75AA2147EA214FEA25C
A21301A24A1370A2010314F016E0001C5B007E1401010714C000FEEC0380010F1307010E
EB0F0039781CF81E9038387C3C393FF03FF03907C00FC027267CA427>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmmi10 10 16
/Fm 16 121 df<121C127FEAFF80A5EA7F00121C0909798817>58
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817>I<EF0380EF0FC0173FEFFF80933803FE00EE0FF8EE3FE0EEFF80DB03
FEC7FCED0FF8ED3FE0EDFF80DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3F
E0EBFF80D803FECAFCEA0FF8EA3FE0EA7F8000FECBFCA2EA7F80EA3FE0EA0FF8EA03FEC6
6C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8
ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0170FEF0380323279AD41>
I<126012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007F
C0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE
01FF9338007F80EF1FC0A2EF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED
1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA
07FCEA3FF0EA7FC048CBFC12FC1270323279AD41>62 D<DCFF8013E0030F13F0037F9038
FC01C0913A01FF803E03913A07FC000F07DA0FE0EB038FDA3FC0903801DF804AC812FFEB
01FED903F8157F4948ED3F00495A495A494881017F161E49C9FC5B12014848161C5B1207
485A1818121F4993C7FCA2485AA3127F5BA312FF90CCFC93387FFFFE93B5FCA29338007F
C0715A177F95C7FCA27E5F5F7F123F16016C7E5F6C6C14036D14071207D803FCEC1EF86C
6C143C26007F80EBF07890393FF007E0010FB5EA8030010349C9FC9038003FE03B3D7DBA
41>71 D<0103B6FC5B5E90260007FCC8FC5D5D140FA25DA2141FA25DA2143FA25DA2147F
A292C9FCA25CA25CA21301A25CA21303A25CA2130718404A15C0A2010F150118804A1403
A2011F16005F4A1406170E013F151E171C4A143C177C017F5D160391C7120F49EC7FF0B8
FCA25F32397DB839>76 D<902603FFF891381FFFF8496D5CA2D90007030113006FEC007C
02061678DA0EFF157081020C6D1460A2DA1C3F15E0705CEC181F82023815016F6C5C1430
150702706D1303030392C7FC02607FA2DAE0015C701306ECC0008201016E130EEF800C5C
163F0103EDC01C041F131891C713E0160F49EDF03818300106140717F8010E02031370EF
FC60130CEE01FE011C16E004005B011815FF177F1338600130153FA20170151F95C8FC01
F081EA07FCB512E01706A245397DB843>78 D<0103B7FC4916E018F8903B0007F80007FC
4BEB00FE187F020FED3F80F01FC05DA2021F16E0A25DA2143FF03FC05DA2027FED7F80A2
92C8130018FE4A4A5A604AEC07F04D5A0101ED3FC04CB4C7FC91B612FC17E0D903FCCAFC
A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291CBFC497EB6FCA33B39
7DB835>80 D<92391FE00380DBFFFC130002036D5A91390FE01F8F91393F0007DF027EEB
01FE02F81300495A4948147E177C4948143C495AA2011F153891C8FCA3491530A28094C7
FC80806D7E14FEECFFE06D13FE6DEBFFC06D14F06D806D80021F7F02037FEC003F03037F
1500167F163F161FA3120C160FA2001C151F94C7FCA3003C153EA25E003E5D127E007F4A
5A6D495A6DEB0FC0D8F9F0495AD8F0FE01FEC8FC39E03FFFF8010F13E0D8C00190C9FC31
3D7CBA33>83 D<EC3FC0903801FFF0903807E07890381F801C90387E001E49130E485A48
5A1207485A49131E001F141C153C484813F8EC03E0007FEB3FC09038FFFE0014E090C8FC
5A5AA7007E140315071506003E140E153C6C14706C6C13E0EC07C03903E03F003801FFF8
38003FC020267DA427>101 D<16F8ED03FEED0F8792381F0F80ED3E3F167F157CA215FC
1700161C4A48C7FCA414035DA414075DA20107B512F0A39026000FE0C7FC5DA4141F5DA4
143F92C8FCA45C147EA514FE5CA413015CA4495AA45C1307A25C121E123F387F8F80A200
FF90C9FC131E12FEEA7C3CEA7878EA1FF0EA07C0294C7CBA29>I<90390F8003F090391F
E00FFC903939F03C1F903A70F8700F80903AE0FDE007C09038C0FF80030013E000014913
03018015F05CEA038113015CA2D800031407A25CA20107140FA24A14E0A2010F141F17C0
5CEE3F80131FEE7F004A137E16FE013F5C6E485A4B5A6E485A90397F700F80DA383FC7FC
90387E1FFCEC07E001FEC9FCA25BA21201A25BA21203A25B1207B512C0A32C3583A42A>
112 D<02FC13C0903803FF0190380F838390383F01C790397E00EF8049137F485A484813
3F000715005B485A001F5C157E485AA2007F14FE90C75AA3481301485CA31403485CA314
075D140F127C141F007E495A003E137F381F01EF380F839F3903FF1F80EA00FC1300143F
92C7FCA35C147EA314FE5C130190387FFFF0A322357DA425>I<EB01C0497E1307A4130F
5CA3131F5CA3133F91C7FC007FB51280A2B6FCD8007EC7FCA313FE5BA312015BA312035B
A312075BA3120FEBC006A2140E001F130CEB801C141814385C146014E0380F81C0380787
80D803FEC7FCEA00F819357EB31E>116 D<13F8D803FE1438D8070F147C000E6D13FC12
1C1218003814011230D8701F5C12601503EAE03F00C001005B5BD8007E1307A201FE5C5B
150F1201495CA2151F120349EC80C0A2153F1681EE0180A2ED7F0303FF130012014A5B3A
00F8079F0E90397C0E0F1C90393FFC07F8903907F001F02A267EA430>I<903907E001F0
90391FF807FC9039783E0E0F9039E01F1C1FD801C09038383F803A03800FF07F0100EBE0
FF5A000E4A1300000C157E021F133C001C4AC7FC1218A2C7123FA292C8FCA25CA2147EA2
14FEA24A130CA20101141C001E1518003F5BD87F81143801835C00FF1560010714E03AFE
0E7C01C0D87C1C495A2778383E0FC7FC391FF00FFC3907C003F029267EA42F>120
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmbx10 10 46
/Fn 46 122 df<913803FFC0027F13F00103B512FC010FEB00FED93FF8133FD97FE0EBFF
8049485A5A1480484A13C04A6C1380A36F1300167E93C7FCA592383FFFC0B8FCA4000390
C7FCB3ABB5D8FC3F13FFA4303A7EB935>12 D<EA0F80EA3FE0EA7FF0A2EAFFF8A213FCA3
127FA2123FEA0F9CEA001C133C1338A31378137013F0EA01E0A2EA03C0EA0780EA0F005A
121C12180E1D798C1B>44 D<B61280A819087F9620>I<EA0F80EA3FE0EA7FF0A2EAFFF8
A5EA7FF0A2EA3FE0EA0F800D0D798C1B>I<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA2
92B57EA34A8015F302038015E1A202078015C0020F80ED807FA2021F80ED003F4A80023E
131FA2027E80027C7F02FC814A7FA20101824A7F49B77EA3498202C0C7FC010F824A147F
A2011F8291C8123F4982013E151FA2017E82017C8101FE83B500F80107B61280A4413A7D
B948>65 D<DB3FFCEB01C00203B5EAC003021FECF00791B6EAFC0F01039039FC00FF3F49
01C0EB1FFFD91FFEC77E49481403D97FF080494880485B48177F4849153F4890C9FC181F
485A180F123F5B1807127FA24993C7FC12FFAD127F7FF003C0123FA27F001F1707A26C6C
1780180F6C6D16006C6D5D6C173E6C6D157ED97FF85D6D6C4A5A6DB44A5A010701C0EB0F
E06D01FCEBFF80010090B548C7FC021F14F8020314E09126003FFEC8FC3A3B7BB945>67
D<B87E17F817FF18C028007FF8000713F09338007FF8EF1FFE717E050313807113C0A271
13E0F07FF0A2F03FF8A219FC181FA219FEA419FFAC19FEA419FC183FA219F8187F19F0F0
FFE0A24D13C04D13804D1300EF1FFEEF7FFC933807FFF0B912C095C7FC17FC178040397D
B849>I<B912F0A426007FF8C7FCEF1FF8170717031701A21700A21878A3043C137C183C
A41800167CA216FC150391B5FCA4ECF8031500167CA2163C180FA3181EA293C7FCA2183E
A2183C187CA218FCA2EF01F81703170F173FEE01FFB9FC18F0A338397DB83F>I<B912C0
A43A007FF800039338007FE0171F170F1707A21703A21701A318F0EE7800A41800A216F8
A21501150791B5FCA4ECF80715011500A21678A693C8FCADB7FCA434397DB83C>I<DB3F
FCEB01C00203B5EAC003021FECF00791B6EAFC0F01039039FC00FF3F4901C0EB1FFFD91F
FEC77E49481403D97FF080494880485B48177F4849153F4890C9FC181F485A180F123F5B
1807127FA24993C8FC12FFAB043FB61280A2127F7FDC0003EBC000123FA27F121FA26C7E
A26C7F6C7F6C7F7ED97FF85C6D7E6DB45C010701C05B6D01FCEBFF3F010090B5EAFE0F02
1FECF8030203ECE0009126003FFEC9FC413B7BB94B>I<B6D8FC03B612F0A426007FF8C7
0001EBE000B3A391B8FCA402F8C71201B3A6B6D8FC03B612F0A444397DB84B>I<B612FC
A439007FF800B3B3ADB612FCA41E397DB824>I<B600FC0103B512C0A426007FF8C8381F
E00019804EC7FC18FEEF01F84D5A4D5A4D5AEF3F80057EC8FC5F4C5A4C5AEE0FE0EE1F80
4CC9FC167E5EED03F84B7E4B7E4B7E4B7F5D02F9B57EDAFBF77FDAFFE37F15C103807F4A
487F4A6D7E4A133F707E707F8482707F707F8482717E717E8483717F717F858385B600FC
017FEBFFE0A443397DB84B>75 D<B7FCA426007FF8C9FCB3ACEF0780A5170F1800A35FA2
5FA25F5F5E5EEE0FFE167FB8FCA431397DB839>I<B500F80403B512F06E5EA26E5ED800
7FF1E000A2D97BFF161EA201796D5DA201786D5DA26E6C5DA36E6C4A5AA26E6C4A5AA26E
6C4A5AA26E6C4A5AA26E6C141EA36E6D5BA26E6D5BA26F6C5BA26F6C485AA36F6C485AA2
6F6C485AA26F6C48C7FCA2923803FF1EA36F13BCA26F13F8A2705AA2705AA213FCB500FC
6D4848B612F0A2EE0F80EE070054397DB85B>I<B500FC0203B512F0A28080C66C6D9039
0003F0006F6E5A81017B7F13798101787F6E7E6E7E6E7F6E7FA26E7F6E7F6E7F6E7F6F7E
153F826F13806F13C06F13E06F13F06F13F88117FCEE7FFEEE3FFF7013817013C17013E1
8218F17013F97013FDEF7FFF8383A28383838383187FA2183F181F01FC160FB500FC1507
18031801A244397DB84B>I<EDFFF8020FEBFF80027F14F0903A01FFC01FFC0107903800
07FFD91FFC010113C0D93FF06D6C7E49486E7E49486E7E48496E7E48834890C86C7EA248
486F1380A248486F13C0A2003F18E0A348486F13F0A400FF18F8AC007F18F06D5DA3003F
18E0A26D5D001F18C0A26C6C4B13806C18006E5C6C6D4A5A6C5F6C6D4A5A6D6C4A5AD93F
FC49485A6DB401075B0107D9C01F90C7FC010190B512FC6D6C14F0020F1480020001F8C8
FC3D3B7BB948>I<B8FC17F017FEEFFF8028007FF8000F13C0040113E07013F0EF7FF8EF
3FFCA2EF1FFEA218FFA818FEA2EF3FFCA2EF7FF8EFFFF04C13E0040F13C091B7120017FC
17E002F8C9FCB3A4B612FCA438397DB841>I<B712FCEEFFE017FC17FF28007FF8000F13
C004017F707F717E717EA2717EA284A760A24D5A604D5A4D5A04035B041F90C8FC91B612
FC17E0839139F8003FFCEE0FFF707F707F8284A2707FA584A51A601AF084177F1901DD3F
FE13E0B600FC011F130394390FFF87C071EBFF8005011400CBEA1FFC443A7DB848>82
D<D907FF130E013FEBE01E90B5EAF83E0003ECFE7E3A07FC01FFFE390FF0001F4848130F
48481303491301007F140090C8FC167E5A163EA27F161E7F7F6D91C7FC13FC387FFFE014
FEECFFF06C14FE6F7E6C816C15F06C816C81C681133F010F801301D9000F1480EC007F03
0F13C01503818100F0157FA3163FA27E17807E167F6C16007E6D14FE01E0495A01F81303
9039FF801FF800FC90B512E0D8F83F5CD8F00749C7FC39E0007FF02A3B7BB935>I<003F
B91280A4D9F800EBF003D87FC09238007FC049161F007EC7150FA2007C1707A200781703
A400F818E0481701A4C892C7FCB3AE010FB7FCA43B387DB742>I<B600FC011FB512C0A4
26007FF8C8381FC000725AB3B3181F013F94C7FC8060011F163E6D6C157E187C6D6C15FC
6D6D495A6D6DEB07F06D01F0EB1FE0DA7FFEEBFFC0021FB6C8FC02075C020014F0030F13
80423A7DB849>I<B6D8E01FB500FC90383FFFFCA4000101F0C7D83FFCC8EA7E006C7115
3C171F6E197C017F701578836E7014F8013F6F5E6E1801011F4B6D5CA26E18036D4B6D5C
A26D6D496D495A173C6F170F6D037C6D91C7FCEF787F6F5F6D4B6C6C131E816D02016E5B
EFE01F03F8177C027F01036E13784D7E03FCEE80F8023F49486C5C15FE021F010FEDC1E0
4D7E03FF16C36E49EDE3C0041E7F049E15F76E01BC6D5C04FC15FF6E95C8FC4C80A26E5F
4C143F6E5F4C141FA2037F5E4C140FA26F486E5AA2031F5E93C812036F5E5E3A7EB863>
87 D<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA26C5A
6C5AEA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3FF85B485A
12FF5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39003F
E0032A257DA42E>97 D<13FFB5FCA412077EAF4AB47E020F13F0023F13FC9138FE03FFDA
F00013804AEB7FC00280EB3FE091C713F0EE1FF8A217FC160FA217FEAA17FCA3EE1FF8A2
17F06E133F6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE009039F03FFFF8D9E00F13
E0D9C00390C7FC2F3A7EB935>I<903801FFC0010F13FC017F13FFD9FF8013802603FE00
13C048485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7FC12FFA9127FA27F123F
ED01E06C7E15036C6CEB07C06C6C14806C6C131FC69038C07E006DB45A010F13F0010113
8023257DA42A>I<EE7F80ED7FFFA4150381AF903801FF81010F13F1013F13FD9038FFC0
7F0003EB001FD807FC1307000F8048487F5B123FA2485AA312FFAA127FA27F123FA26C6C
5B000F5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F13E1010313012F3A7DB9
35>I<903803FF80011F13F0017F13FC3901FF83FE3A03FE007F804848133F484814C000
1FEC1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0C8FCA4127FA36C7E1678
121F6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC06DB51200010F13FC010113
E025257DA42C>I<EC1FF0903801FFFC010713FF90391FF87F8090383FE0FFD9FFC113C0
A2481381A24813016E1380A2ED3E0092C7FCA8B6FCA4000390C8FCB3ABB512FEA4223A7D
B91D>I<161FD907FEEBFFC090387FFFE348B6EAEFE02607FE07138F260FF801131F4848
6C138F003F15CF4990387FC7C0EEC000007F81A6003F5DA26D13FF001F5D6C6C4890C7FC
3907FE07FE48B512F86D13E0261E07FEC8FC90CAFCA2123E123F7F6C7E90B512F8EDFF80
16E06C15F86C816C815A001F81393FC0000F48C8138048157F5A163FA36C157F6C16006D
5C6C6C495AD81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7FC010713F02B377DA530
>I<13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F03FFDA3C01138014784A
7E4A14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935>I<EA01F0EA07FC487EA2
487EA56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3A9B512F8A4153B7DBA1B>I<13
FFB5FCA412077EAF92380FFFE0A4923803FC0016F0ED0FE0ED1F804BC7FC157E5DEC03F8
EC07E04A5A141FEC7FE04A7E8181A2ECCFFEEC0FFF496C7F806E7F6E7F82157F6F7E6F7E
82150F82B5D8F83F13F8A42D3A7EB932>107 D<13FFB5FCA412077EB3B3ACB512FCA416
3A7DB91B>I<01FED97FE0EB0FFC00FF902601FFFC90383FFF80020701FF90B512E0DA1F
81903983F03FF0DA3C00903887801F000749DACF007F00034914DE6D48D97FFC6D7E4A5C
A24A5CA291C75BB3A3B5D8FC1FB50083B512F0A44C257DA451>I<01FEEB7FC000FF9038
03FFF8020F13FE91381F03FFDA3C011380000713780003497E6D4814C05CA25CA291C7FC
B3A3B5D8FC3F13FFA430257DA435>I<903801FFC0010F13F8017F13FFD9FF807F3A03FE
003FE048486D7E48486D7E48486D7EA2003F81491303007F81A300FF1680A9007F1600A3
003F5D6D1307001F5DA26C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC
010113C029257DA430>I<9039FF01FF80B5000F13F0023F13FC9138FE07FFDAF0011380
0007496C13C06C0180EB7FE091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC161FA217F816
3F17F06E137F6E14E06EEBFFC0DAF00313809139FC07FE0091383FFFF8020F13E0020390
C7FC91C9FCACB512FCA42F357EA435>I<9038FE03F000FFEB0FFEEC3FFF91387C7F8091
38F8FFC000075B6C6C5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B512FEA42225
7EA427>114 D<90383FF0383903FFFEF8000F13FF381FC00F383F0003007E1301007C13
0012FC15787E7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F81203C614FC13
1F9038007FFE140700F0130114007E157E7E157C6C14FC6C14F8EB80019038F007F090B5
12C000F8140038E01FF81F257DA426>I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6
FCA3000390C7FCB21578A815F86CEB80F014816CEBC3E090383FFFC06D1380903803FE00
1D357EB425>I<01FFEC3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C6E4813E06C
D9C03E13FF90387FFFFC011F13F00103138030257DA435>I<B539F001FFF8A4000390C7
EA3F00161E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2
ECFC07010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E
5AA26E5AA22D257EA432>I<B500F1B538803FFFA43D07FE000FF80003E06C6C010715C0
82028015076C6E6C148015076C01C0ED0F00826E485C017FED801E5D90273FF01E7F5B17
C0DAF83E147C011F90393C3FE078037C14F8903B0FFC781FF0F0A29139FEF00FF10107ED
F9E002FF14FB6D496CB45AA24B7E6D5EA26D496C90C7FCA292C7FC6E5CA2023E147C023C
143C40257EA445>I<B539F01FFFF0A4000390398003F8006C01C013E06C1407D97FE05B
6D6C485A6E48C7FC90381FFC3E010F5B903807FEFC6D6C5A5D6D5B6D5B6E7E6E7E814A7E
A24A7E903801F3FFD903E37FD907C17FEB0FC049486C7E4A6C7E013E80496D7E49130F00
016E7EB590383FFFF8A42D257EA432>I<B539F001FFF8A4000390C7EA3F00161E6E133E
6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F495AA2ECFC07010F5CECFE
0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA292C8FC
A25C141E003F133E387F803C38FFC07C147814F8EBC1F0EBC3E06C485A387D1F80D83FFF
C9FCEA1FFCEA07F02D357EA432>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmtt10 10 17
/Fo 17 123 df<EA0F80EA1FE0EA3FF0EA7FF8A213FCA3123F121F120F120013F8A21201
EA03F01207EA1FE0EA7FC0EAFF80130012FC12700E17718A2C>44
D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B708A2C>46
D<EC7F80903803FFE0010F7F013F7F497F9038FFC0FE3901FE007FD803F87F4848EB1F80
9038E00FCF390FC03FFF48484813C091B5FCEA3F01393E03F87F903907F03FE0007EEBE0
1F397C0FC00FEC8007A2EAFC1F00F8EB0003A900FCEB8007D87C0F14C0A2ECC00F3A7E07
E01F80003EEBF03F903903F87F00393F01FFFED81F805B6E5A6C6C6C5A3907E00FC09039
F00007C06C6CEB0FE0D801FE131F3900FFC0FF6DB512C06D1480010FEBFE00010313F890
38007FC023337CB22C>64 D<3801FFF0000713FE001F6D7E15E048809038C01FF81407EC
01FC381F80000006C77EC8127EA3ECFFFE131F90B5FC1203120F48EB807E383FF800EA7F
C090C7FC12FE5AA47E007F14FEEB8003383FE01F6CB612FC6C15FE6C14BF0001EBFE1F3A
003FF007FC27247CA32C>97 D<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA
0FF0485A49137E4848131890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D13
3F6C6CEB7F003907FE03FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C>99
D<EC0FFE4A7EA380EC003FAAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF0034848
7E497E48487F90C7FC007E80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380FF00738
07FC1F6CB612FC6CECBFFE6C143FEB3FFC90390FF01FFC27337DB22C>I<EB03FE90381F
FFC0017F13F048B57E48803907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC090C712
0F5A007E15E015075AB7FCA416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C7ED80F
F0130F6C6CEB3FC001FF13FF000190B512806C1500013F13FC010F13F00101138023247C
A32C>I<EC0FF8EC3FFE91B5FC4914805B903807FC7F14F090390FE03F0014C092C7FCA6
007FB512FEB7FCA36C5C26000FC0C7FCB3A8003FB512F04880A36C5C21337DB22C>I<13
07EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2EA0007B3A8007FB5
12FCB612FEA36C14FC1F3479B32C>105 D<140EEC3F80A2EC7FC0A3EC3F80A2EC0E0091
C7FCA748B512804814C0A37EC7120FB3B3A2141F003C1480007E133FB414005CEB01FEEB
FFFC6C5B5C001F5B000790C7FC1A467CB32C>I<387FFFE0B57EA37EEA0003B3B3A5007F
B61280B712C0A36C158022337BB22C>108 D<3A7F83F007E09039CFFC1FF83AFFDFFE3F
FCD87FFF13FF91B57E3A07FE1FFC3E01FCEBF83F496C487E01F013E001E013C0A301C013
80B33B7FFC3FF87FF0027F13FFD8FFFE6D13F8D87FFC4913F0023F137F2D2481A32C>I<
397FF01FE039FFF8FFF801FB13FE90B6FC6C158000019038F07FC09138801FE091380007
F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F
9138801FE09138E07FC091B51280160001FB5B01F813F8EC3FC091C8FCAD387FFFE0B57E
A36C5B27367FA32C>112 D<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39003F
7FE1ECFF019138FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C26
247EA32C>114 D<90387FF8700003B512F8120F5A5A387FC00F387E00034813015AA36C
EB00F0007F140013F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB0007EC
00FE0078147F00FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815E000
F8148039701FFC0020247AA32C>I<3A7FF003FF80486C487FA3007F7F0001EB000FB3A3
151FA2153F6D137F3900FE03FF90B7FC6D15807F6D13CF902603FE07130029247FA32C>
117 D<003FB612E04815F0A4007EC7EA1FE0ED3FC0ED7F80EDFF004A5A003C495AC7485A
4A5A4A5A4A5A4A5A4AC7FCEB01FC495AEB0FF0495A495A495A49C8FC4848EB01E04848EB
03F0485A485A485A485A485AB7FCA46C15E024247DA32C>122 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmr10 10 80
/Fp 80 123 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F
8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A328
01F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CF
C00380903C1F8000FF0001C090273F0007FE130F017E4948497EA2495CA248485C03076E
5A03030203C7FC95C8FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E26
7FFFE0B500C1B51280A3413B7FBA45>14 D<EA03F012FFA312071203B3AA487EB512C0A3
12257EA417>16 D<127812FCA27E7EEA7F80121FEA0FC0EA07E0EA03F012001378133C13
1E13060F0F77B92A>18 D<133C137EA213FE1201EA03FC13F0EA07E0EA0FC0EA1F80EA1E
005A5A5A12C00F0F6FB92A>I<001C131C007F137F39FF80FF80A26D13C0A3007F137F00
1C131C00001300A40001130101801380A20003130301001300485B00061306000E130E48
5B485B485B006013601A197DB92A>34 D<121C127FEAFF80A213C0A3127F121C1200A412
011380A2120313005A1206120E5A5A5A12600A1979B917>39 D<146014E0EB01C0EB0380
EB0700130E131E5B5BA25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65A
B2127CA67EA3121EA2121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380
EB01C0EB00E01460135278BD20>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA213
78A2137C133C133E131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400
A25B131EA2133E133C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527C
BD20>I<15301578B3A6007FB812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>
43 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A
5A5A12600A19798817>I<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00121C0909
798817>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C4848
7FA248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C15
006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F823
3A7DB72A>48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A3
1C3879B72A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E
123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D
140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B491303484814
00485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C0
3901F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401
A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F
80A216C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF00
6C495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<15
38A2157815F8A2140114031407A2140F141F141B14331473146314C313011483EB030313
071306130C131C131813301370136013C01201EA038013005A120E120C5A123812305A12
E0B712F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C90
38F003F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F8039
07E007E090388003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300
485C12E000605C12700030495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7
FC38007FFCEB1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F80
0790387E001F49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3
127F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA2
49148016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C
6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E
003FB612E0A316C05A168016000070C712060060140E5D151800E01438485C5D5DC71201
4A5A92C7FC5C140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133F
A5137FA96DC8FC131E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901E001F8
48486C7E4848137C90C77E48141E000E141F001E80A3121FA27F5D01E0131E6C6C133E01
FC133C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13F801F0
7F3903E07FFE3907801FFF48486C1380481303003E6D13C0003CEB007F007C143F0078EC
0FE000F814075A1503A21501A36C15C012781503007C15806CEC07006C5C6C6C131ED807
E0137C3903F803F0C6B55A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF017F13
C09038FC07E03903F803F048486C7E48486C7E49137E121F48487FA2007F158090C7FCA2
48EC1FC0A616E0A56C143FA27F123F001F147FA26C6C13FF3907E001DF0003149F3801F0
033900FC0F1FD93FFC13C0EB07F090C7FC153F1680A316005D000F147E487E486C5BA24A
5A4A5A49485A6C48485A001C495A260F807FC7FC3807FFFC000113F038003FC0233A7DB7
2A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A3
17>I<121C127FEAFF80A5EA7F00121CC7FCB2121C127F5A1380A4127F121D1201A41203
1300A25A1206A2120E5A121812385A1260093479A317>I<007FB812F8B912FCA26C17F8
CCFCAE007FB812F8B912FCA26C17F836167B9F41>61 D<1538A3157CA315FEA34A7EA34A
6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC60
03A202C07F1501A2D901807F81A249C77F167FA20106810107B6FCA24981010CC7121FA2
496E7EA3496E7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B512FEA337
3C7DBB3E>65 D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA270
7EA283A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07
F0707E707E83707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7F
F0B812C094C7FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8903A01FF
807E07903A03FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F12
014848151F4848150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F
6DED0180A3123F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F1538
6D6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F0
02011380313D7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE
03F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0
A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16
F816C036397DB83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E170EA3
1706A317078316C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A218
60A318E093C712C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333
397DB839>I<B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA417
0E1706A2ED0180A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FC
AD4813C0B612C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF803F0390
3A03FC000787D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848150F48
481507A248481503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007F
E0EF3FC0A2123F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD9
0FF8EB03C7D903FEEB0783903A00FFC03F0191393FFFFC00020F01F0130002001380383D
7CBA41>I<B648B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C71201B3
A6486D497EB648B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0
A31A397EB81E>I<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F80EAFFC0A44A
5A1380D87F005B0070131F6C5C6C495A6C49C7FC380781FC3801FFF038007F80233B7DB8
2B>I<B649B5FCA3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F4C5A4C
5A4CC8FC160E5E5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C
7E4A6C7E14704A6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2707E70
7EA2707E707F8484486D497FB6011FEBFF80A339397DB841>I<B612E0A3000101C0C8FC
6C90C9FCB3AD1718A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FCA3
2D397DB834>I<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9
C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E
6C1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06
A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED
018045397DB84C>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EB
CFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080
ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE
1FF6EE0FFEA216071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA217
0637397DB83E>I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7E
D93F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0
A2001F17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F
17F0A26C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F
4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE00203
90C8FC363D7BBA41>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07
F0EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF
0091B512FC16F091C9FCB3A5487FB6FCA330397DB839>I<B612FEEDFFE016F800019038
8007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE3F8004
FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E707EA2161F83A583A6F001
80A217F8160F1803486D01071400B66D6C5A04011306933800FE0ECAEA3FFCEF07F0393B
7DB83D>82 D<D90FF813C090383FFE0190B512813903F807E33907E000F74848137F4848
133F48C7121F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C7E7F13
F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F020713E0
EC007FED3FF0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C14076C
15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190C7FC25
3D7CBA2E>I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F000781600007017
70A300601730A400E01738481718A4C71600B3B0913807FF80011FB612E0A335397DB83C
>I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B2170E6D150C
80171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7FC91387F
807E91381FFFF8020713E09138007F80373B7DB83E>I<B500FC91387FFF80A300030180
91380FFC006C90C8EA07E0715A6C705A6E1403017F93C7FCA280013F1506A26E140E011F
150C80010F5DA28001075DA26E147001031560A26D6C5CA2806D4A5AA2ED8003027F91C8
FCA291383FC006A215E0021F5BA2EDF01C020F1318A26E6C5AA215FC02035BA2EDFEE002
015BA26E6C5AA36FC9FCA3153EA2151CA3393B7EB83E>I<B5D8FC07B5D8F001B5FCA300
07902780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C1500A2
6E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE0C3FA2
6D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC9338C003
FCA203805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6EC7F98
A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A2020093C8FC
4B80503B7EB855>I<007FB590383FFFFCA3C601F801071380D97FE0D903FCC7FC013FEC
01F06D6C5C5F6D6C5C6D6C13034CC8FC6D6C1306160E6D6C5B6DEB8018163891387FC030
6E6C5A16E06E6C5A91380FF18015FB6EB4C9FC5D14036E7EA26E7F6F7EA24B7E15DF9138
019FF09138038FF8150F91380607FC91380E03FE140C4A6C7EEC38000230804A6D7E14E0
4A6D7E49486D7E130391C76C7E01066E7E130E010C6E7E011C1401013C8101FE822607FF
80010713E0B500E0013FEBFF80A339397EB83E>I<EAFFF8A4EAF000B3B3B3B3A3EAFFF8
A40D5378BD17>91 D<3901800180000313033907000700000E130E485B00181318003813
38003013300070137000601360A200E013E0485BA400CE13CE39FF80FF806D13C0A3007F
137FA2393F803F80390E000E001A1974B92A>I<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A4
0D537FBD17>I<13101338137C13FE487E3803C780380783C0380F01E0381E00F0481378
0070131C48130E00401304170D77B92A>I<EB1FE0EBFFFC3803E03F3907000F80390F80
07E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0F
F0EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E18383FC01E
3A0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97 D<EA03F012FFA3120F1203
B0EC1FE0EC7FF89038F1E03E9039F3801F809039F7000FC001FEEB07E049EB03F049EB01
F85BED00FCA216FEA2167E167FAA167E16FEA216FC15016D14F8ED03F07F01EEEB07E001
C6EB0FC09039C7801F00903881E07E903800FFF8C7EA1FC0283B7EB92E>I<EB03FC9038
1FFF8090387E03E03901F80070484813F83907E001FC380FC003A2EA1F80123F90380001
F848EB00F01500A2127E12FEAA127E127FA26C14067F001F140E6D130C000F141C6C6C13
386C6C13706C6C13E039007C07C090381FFF00EB07F81F277DA525>I<ED0FC0EC03FFA3
EC003F150FB0EB03F8EB1FFF90387E078F9038F801EF3903F0007F4848133F4848131FA2
4848130F123F90C7FC5AA2127E12FEAA127E127FA27EA26C6C131FA26C6C133F6C6C137F
6C6CEBEFF03A01F801CFFF39007C078F90381FFE0FD907F813C0283B7DB92E>I<EB07F8
EB1FFF90387C0FC03901F803E03903F001F0D807E013F8380FC0004848137CA248C7127E
153E5A153F127E12FEA3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C6C130600
07140E6D131CD801F013386C6C137090387E03E090381FFF80903803FC0020277EA525>
I<147E903803FF8090380FC1E0EB1F8790383F0FF0137EA213FCA23901F803C091C7FCAD
B512FCA3D801F8C7FCB3AB487E387FFFF8A31C3B7FBA19>I<ED03F090390FF00FF89039
3FFC3C3C9039F81F707C3901F00FE03903E007C03A07C003E010000FECF000A248486C7E
A86C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA2
13C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048C7EA0FF0003E1403481401
16F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC
01FC39007FFFF0010790C7FC26387EA52A>I<EA03F012FFA3120F1203B0EC0FF0EC3FFC
ECF03F9039F1C01F809039F3800FC0EBF70013FE496D7EA25BA35BB3A3486C497EB500C1
B51280A3293A7EB92E>I<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA31207
1203B3AA487EB512C0A312387EB717>I<EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FC
AAEB01F813FFA313071301B3B3A2123C127E00FF13F01303A214E038FE07C0127C383C0F
00EA0FFEEA03F8154984B719>I<EA03F012FFA3120F1203B1913801FFFCA39138007FC0
1600157C15705D4A5A4A5A4AC7FC141E1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F
496C7E8114076E7E6E7E811400157E157F811680ED1FC0486CEB3FF0B500C0B5FCA3283A
7EB92C>I<EA03F012FFA3120F1203B3B3AD487EB512C0A3123A7EB917>I<2703F00FF0EB
1FE000FFD93FFCEB7FF8913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603
F70013CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083
B5FCA340257EA445>I<3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC038
03F70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A329257EA42E>I<EB03FE90
380FFF8090383E03E09038F800F84848137C48487F48487F4848EB0F80001F15C090C712
074815E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F
15806D131F6C6CEB3F006C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277E
A52A>I<3903F01FE000FFEB7FF89038F1E07E9039F3801F803A0FF7000FC0D803FEEB07
E049EB03F04914F849130116FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13
076DEB0FE001F614C09039F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512
C0A328357EA42E>I<D903F813C090381FFE0190387E07819038FC01C33903F000E30007
14774848133749133F001F141F485A150F48C7FCA312FEAA127FA37E6D131F121F6D133F
120F6C6C137F6C6C13EF3901F801CF39007E078F90381FFE0FEB07F890C7FCABED1FE002
03B5FCA328357DA42C>I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03
E613EE9038EC03E09038FC0080491300A45BB3A2487EB512F0A31C257EA421>I<EBFF03
000313E7380F80FF381E003F487F487F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C
13E06C13F86C7F00037FC67F01071380EB007F141F00C0EB0FC01407A26C1303A37E1580
6C13077EEC0F00B4131E38F3C07C38E1FFF038C03F801A277DA521>I<1318A51338A313
78A313F8120112031207001FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580EB7C0301
7E13006D5AEB0FFEEB01F81A347FB220>I<D803F0EB07E000FFEB01FFA3000FEB001F00
031407B3A4150FA3151F12016D133F0000EC77F86D9038E7FF8090383F03C790381FFF87
903A03FC07E00029267EA42E>I<B538803FFEA33A0FF8000FF06C48EB07E00003EC03C0
6D148000011500A26C6C1306A26D130E017E130CA26D5BA2EC8038011F1330A26D6C5AA2
14E001075BA2903803F180A3D901FBC7FCA214FF6D5AA2147CA31438A227257EA32C>I<
B53A1FFFE03FFEA3260FF8009038000FF86C48017EEB03E018C00003023EEB0180A26C6C
013FEB0300A36C6CEC8006156FA2017E9038EFC00C15C7A2D93F016D5A15830281EBF038
D91F831430150102C3EBF87090260FC6001360A2D907E66D5A02EC137CA2D903FCEB7F80
4A133FA2010192C7FC4A7FA20100141E4A130E0260130C37257EA33C>I<B538807FFFA3
3A03FE003FF00001EC1F80000092C7FC017E131C6D13186D6C5AECC070010F5B6D6C5AEC
F180EB03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7E090380383F090380703F8EB
0601496C7E011C137E49137F01787F496D7E486C80000FEC3FF0D8FFFE90B51280A32924
7FA32C>I<B538803FFEA33A0FF8000FF06C48EB07C00003EC03806C7E16007F00001406
A2017E5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C5AA214F101035BA2D901FBC7
FCA214FF6D5AA2147CA31438A21430A214701460A25CA2EA7C0100FE5B130391C8FC1306
EAFC0EEA701C6C5AEA1FF0EA0FC027357EA32C>I<003FB512FCA2EB8003D83E0013F800
3CEB07F00038EB0FE012300070EB1FC0EC3F800060137F150014FE495AA2C6485A495AA2
495A495A495AA290387F000613FEA2485A485A0007140E5B4848130C4848131CA2484813
3C48C7127C48EB03FC90B5FCA21F247EA325>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmssbx10 14.4 20
/Fq 20 88 df<003FB612804815C0B712E0A56C15C06C158023097F9F2C>45
D<0307B5FC4B804B804B80A24B80A292B67EA34A81A34A81A216FB4A81A216F94A01F180
A34A01E080A34A6E7F16C0A24A6E7F1680A291B5814C7EA24983835D4983835D4983835D
498483494982A283494982A284494982A28490B5488292B8FCA24885A34885A34885A348
01F8C800031480A284484918C0A284484918E0A24A82481AF0A24A82B519F88591CAFC6C
487113F0D83FF8050313E04D537BD258>65 D<001FB712E0007F16FF18E0B912FC18FF85
85858585859138800007DC007F7F171F05077F83831A8083A81A005FA24D5B5F4D5B4D5B
177F0403B55A91B812C0614EC7FC18F818C018FCF0FF8019E019F8912680000F80DC007F
7F050F7F050314807114C0837213E0841AF084A27213F8A860A24E13F0A26095B512E017
03050F14C094B6FC91B91280A21A00616119F06119806C4DC7FC18E0001F04FCC8FC4553
75D258>I<93383FFFF8030FB612E0037F15FC0203B812C0020F17F0143F91B9FC5B1307
4918E05B5B499138FC007F90B600C013074BC712014802F89138007FC0484A151F03C015
0F484A150792C9120348F000804A1700485BA2485BA25CA25A5CA5B5FC5CAF807EA5807E
A280A26C7FA26C7F6E17386C19786F16F86C6E150103F015076C6E150F6C02FE153FDBFF
C0903801FFFC6D02FC131F6D91B7FC7F7F7F13016D18F0023F17C0020F17800203EEFE00
DA007F15F0030F15C0DB003F01F8C7FC465579D354>I<001FB712F0007FEEFF8018F8BA
FC19C019F08519FE8586869126C0000181DC001F801703050080727F181F727F84868472
1480A2841BC0A2851BE0A385A31BF0B21BE0A361A21BC0A296B5FCA24E1480A2601B0060
4E5B604E5B95B55A1703051F5C4CB65A91B95A6297C7FC6119F86119C096C8FC6C17F818
C0001F04F0C9FC4C5375D25F>I<001FB9FC007F188019C0BAFCA71980190002C0CAFCB3
A491B712F08484A8606002C0CAFCB3A691B812C019E019F0A87E19E0001F18C03C5375D2
4D>I<001FB812FE007F831980BAFCA719006002C0CAFCB3A591B77E8484A8606002C0CA
FCB3AF7E5C001F90CBFC395376D249>I<93383FFFF00307B612C0037F15F80203B8FC02
0F17C0023F17F091B912FC5B5B130F5B4918F8499138FC007F90B600C013074BC8FC4802
F8153F484A151F03C0ED07F0484A150392C912014818004A1770484917201A005C5A5CA2
5AA25CA4B5FC5CA90507B512FE5FA5807EA480EF00037EA2807E80A26C7F807E816C8015
F06C806C14FEEDFFC06D02FC133F6D91B7FC7F7F13037F7F023F17F8020F17E002031700
DA007F15F803071580DB003F01F0C7FC475579D358>I<D81FFFEFFFFC007F6D4B13FE6E
4B13FFB5FCB3AD91BAFCAC02C0C81203B3B07E4A6F13FE001F90CA13FC485375D25F>I<
EA1FFF007F138014C0B5FCB3B3B3B3A57E1480001F1300125375D228>I<EA1FFF007F7F
80B5FCB3B3B3ADEF3F8091B712E018F018F8A77E18F0001F17E0355376D245>76
D<261FFFF095383FFFF0007F01FC95B512F86E4D14FCB65FA26F5EA26F5EA36F5EA36F5E
A2496DEE7FFDA36E6CEEFFF9A26F5DA2023F18F16F5DA26E6D4A13E1A36E6D4A13C1A270
5C6E1881A2705C6E1801705C6E17FEA27014FF6E17FCA2705B037F16F8705B6F16F0A271
5A6F16E0A2715A6F16C0715A6F1680A2715A6F1600A26F6D485AA36F6D485AA2047F5CA3
70B55AA2705CA3705CA2705CA37091C7FCA2705B705BEF3FF0007F93C9FC497313F8D81F
F8F27FF05E5375D275>I<261FFFF8EE1FFC007F01FEEE3FFE6EEE7FFFB67E81A281A281
A281A281A281A2497FA26E7FA26E7FA26E7FA26E7FA26E7FA26E7FA26E7FA26E7FA26F7F
A26F7FA26F7FA26F7FA36F7FA26F7FA26F7FA26F7FA2701380A27013C0A27013E0A27013
F0A27013F8A27013FCA27013FEA27013FFA27190B5FCA283A283A283A283A283A283007F
82497013FED81FF8041F13FC485375D25F>I<93B5FC031F14F892B7FC020716E0021F16
F8027F16FE49B97E49844984498449DAE007804991C7804901F8021F7F90B5486E7F4802
C0020314804B804891C914C04A82481AE04A82481AF04A82481AF84A82A2481AFC4A82A3
481AFEA34A82A3B519FFB3A26C6D4C13FEA66C6D4C13FCA46C6D4C13F8A26C6D4C13F0A2
6E5E6C1AE06E93B5FC6C6E4A14C06C6E4A14806F5C6C6E4A14006D01FC023F5B6D01FF91
B55AEEE0076D91B75A010718E06D606D606D6C4CC7FC021F16F8020716E002011680DA00
1F02F8C8FC030091C9FC505979D55F>I<001FB712E0007F16FF18E0B912FC84727E8585
8585859138C00001DC003F7F050F7F838371148083A37213C0AC95B51280A35F4D14005F
4D5B173F4CB55A91B85AA26161198096C7FC18FC18F0188005E0C8FC02C0CBFCB3AB7E5C
001F90CCFC425376D254>I<001FB712E0007F16FF18E0B912FC84727E8519F085A28591
26C0000180EE001F05077F8371148083A37213C0AA95B51280A25F1A005F4D5B171F4CB5
5A91B85A61616196C7FC18FC18F0188095C8FCECC001848184707F828482848284707FA2
707F828582858385717FA2717F83858385717FA2711480A27114C0841AE06C834A17C000
1F90C9000F1380435376D254>82 D<913803FFFC027FEBFFE049B612FC010FEDFF804916
E0017F16F890B812FE5A5AA25A485FED801F489038F800014AEB007F4801C0141F17074A
6E5A17014890C9FC18781838181095C7FCA280A38080806C13FC14FF15F06CECFF8016F8
6C15FF17E06C16F86C826C16FF6C836D826D826D826D820103826D82EB003F020F811400
03071580ED007F040F14C0160316007113E083A283A283A312101238123C123F6D5D6D17
C0EA7FF06D5D01FE5D6D6C91B5128002F013039126FF801F1400BAFC60A26060003F5F00
0F5F00035FC65F013F4BC7FC010715F8D9007F14C0020301FCC8FC3B597AD549>I<001F
BB12E0007F1AF01BF8BCFCA76C1AF06C1AE0C8000391C9FCB3B3B3AD815F6F6C5A4D527B
D158>I<D81FFF933807FFC0007F6D4B13E06E4B13F0B5FCB3B3B3A56C19E06E5DA36C19
C06E5DA26C6D92B512806E5C6C6D4A14006E5C6C02C0011F5B03F890B5FC6C91B75A6C60
6C606D5F6D5F010F94C7FC6D5E010116F8D9003F15C002074AC8FCDA003F13C0445675D2
5B>I<D83FF893263FFFF0EE3FE0486C93B56CEEFFF0486C724B13F86D4B80665F6C6D71
17F066A25F6C6D7216E066A26E5C6C7416C06619DF6E4A139F6C74168066198F6E4A130F
6C74160066856EEC7FFE6C745D1EFF05FF7F6E15FC6C74495B855E6C6D03F860755B854C
5B6D018063755B86606D6D48621C80745C606D6D48621CC0745C606D4A6203F018E0745C
95C7FC6D4A97C7FC03F818F0745C5F6D64047F8103FC18F86D4B4D5AA2864C48826D6D62
1CFD865F6EB594B55AA2875F6E63A2875F6E63A2876E4A60876E91C96C91C8FC020101FC
7013FC75537DD27C>87 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop 643 980 a Fq(A)44 b(COMP)-11 b(ARISON)43 b(BETWEEN)f(RECURRENT)
560 1129 y(NEURAL)i(ARCHITECTURES)e(F)l(OR)i(REAL-TIME)715
1278 y(NONLINEAR)f(PREDICTION)f(OF)i(SPEECH)1606 1428
y(SIGNALS)618 1694 y Fp(Juan)27 b(An)n(tonio)g(P)n(\023)-39
b(erez-Ortiz,)25 b(Jorge)h(Calera-Rubio)f(and)j(Mik)n(el)f(L.)h(F)-7
b(orcada)932 1793 y(Departamen)n(t)27 b(de)h(Llenguatges)e(i)i
(Sistemes)g(Inform\022)-42 b(atics)1477 1893 y(Univ)n(ersitat)27
b(d'Alacan)n(t)1441 1992 y(E-03071)e(Alacan)n(t,)i(Spain)1470
2092 y(F)-7 b(ax:)37 b(+34)26 b(965)g(90)h(9326)1086
2192 y(E-mail:)36 b Fo(japerez,calera,m)o(lf@)o(dl)o(si)o(.ua)o(.e)o(s)
487 2479 y Fn(Abstract.)70 b(This)28 b(pap)s(er)h(presen)m(ts)f(a)h
(comparativ)m(e)g(study)g(on)f(the)h(p)s(erfor-)487 2578
y(mance)f(of)i(recurren)m(t)g(neural)g(net)m(w)m(orks)g(trained)g(in)f
(real-time)e(to)i(predict)487 2678 y(the)40 b(next)i(sample)d(in)h(a)h
(sp)s(eec)m(h)g(signal.)68 b(The)41 b(comparison)e(is)h(basically)487
2777 y(done)48 b(v)m(ersus)h(linear)f(predictors,)k(and)d(a)h(pip)s
(elined)c(recurren)m(t)k(neural)487 2877 y(net)m(w)m(ork)40
b(whic)m(h)h(has)f(b)s(een)f(prop)s(osed)f(for)i(this)g(task.)66
b(Results)38 b(con\014rm)487 2977 y(those)44 b(of)h(previous)g(w)m
(orks)g(where)g(limitations)d(to)j(deal)g(with)f(n)m(umeric)487
3076 y(time)35 b(series)h(w)m(ere)h(detected)g(for)h(recurren)m(t)h
(neural)e(arc)m(hitectures,)i(sp)s(e-)487 3176 y(cially)33
b(when)g(using)f(the)i(real-time)d(recurren)m(t)k(learning)e
(algorithm.)44 b(The)487 3276 y(decoupled)27 b(extended)h(Kalman)g
(\014lter)g(training)g(algorithm,)e(on)i(the)g(other)487
3375 y(hand,)j(o)m(v)m(ercomes)g(partially)h(some)e(of)i(these)f
(limitations.)487 3674 y(INTR)m(ODUCTION)487 3873 y Fp(Real-time)f(sp)r
(eec)n(h)f(prediction)h(is)g(an)g(imp)r(ortan)n(t)g(mo)r(dule)h(in)f
(curren)n(t)f(digital)h(com-)487 3973 y(m)n(unication)23
b(systems)h(suc)n(h)g(as)f(mobile)h(telephone)g(systems.)36
b(By)23 b(assuming)h(that)g(the)487 4073 y(v)-5 b(alue)32
b(of)g(the)h(signal)e(at)h(time)h Fm(t)g Fp(ma)n(y)e(b)r(e)i(predicted)
f(from)g(the)h(v)-5 b(alue)32 b(of)h(the)f(signal)487
4172 y(at)37 b(previous)f(times,)41 b(a)c(lo)n(w)n(ering)e(of)j(the)g
(bit)g(rate)f(ma)n(y)g(b)r(e)g(ac)n(hiev)n(ed)g(\(dep)r(ending)487
4272 y(on)29 b(predictor's)g(accuracy\))f(b)n(y)i(e\016cien)n(tly)g(co)
r(ding)f(the)h(di\013erence)g(b)r(et)n(w)n(een)g(the)g(ac-)487
4371 y(tual)d(signal)f(at)h(time)g Fm(t)g Fp(and)g(the)h(predicted)f
(signal.)36 b(No)26 b(prepro)r(cessing)g(is)g(done)h(o)n(v)n(er)487
4471 y(sp)r(eec)n(h)j(in)i(this)f(pap)r(er:)43 b(the)32
b(prediction)f(is)g(p)r(erformed)f(directly)h(o)n(v)n(er)e(the)j
(sampled)487 4571 y(w)n(a)n(v)n(eform.)611 4670 y(Although)37
b(the)h(mec)n(hanisms)e(in)n(v)n(olv)n(ed)f(in)j(sp)r(eec)n(h)e
(generation)g(are)g(inheren)n(tly)487 4770 y Fl(nonline)l(ar)p
Fp(,)31 b(most)f(curren)n(t)f(standards)f([3])i(consider)f(adaptiv)n(e)
g Fl(line)l(ar)40 b Fp(arc)n(hitectures)487 4870 y(for)35
b(predictor)f(implemen)n(tation,)k(b)r(ecause)d(of)h(their)g
(acceptable)f(balance)g(b)r(et)n(w)n(een)487 4969 y(complexit)n(y)d
(and)h(p)r(erformance.)53 b(On)33 b(the)h(other)f(hand,)h(nonlinear)f
(mo)r(dels)g(should)487 5069 y(in)24 b(principle)g(tak)n(e)f(in)n(to)g
(accoun)n(t)g(these)h(nonlinearities)f(and)h(outp)r(erform)f
(traditional)487 5168 y(approac)n(hes.)p eop
%%Page: 2 2
2 1 bop 611 664 a Fp(Recurren)n(t)26 b(neural)g(net)n(w)n(orks)f
(\(RNN\))j([15)o(])f(seem)f(a)g(promising)g(nonlinear)f(adap-)487
764 y(tiv)n(e)30 b(alternativ)n(e)g(for)g(sp)r(eec)n(h)g(prediction:)43
b(recurren)n(t)30 b(connections)g(allo)n(w)f(RNNs)j(to)487
863 y(ha)n(v)n(e,)26 b(in)i(principle,)f(a)g(p)r(oten)n(tially)h
(unlimited)g(memory)f(ab)r(out)g(the)h(past,)2899 833
y Fk(1)2964 863 y Fp(whereas)487 963 y(adaptiv)n(e)17
b(learning)g(mak)n(es)h(them)h(appropiate)e(for)h(nonstationary)e
(signals)h(lik)n(e)h(sp)r(eec)n(h.)611 1063 y(Ha)n(ykin)25
b(and)g(Li)g([9)o(])h(designed)e(a)h(pip)r(elined)h(recurren)n(t)e
(neural)g(net)n(w)n(ork)g(\(PRNN\))487 1162 y(for)c(sp)r(eec)n(h)g
(prediction)g(and)g(considered)g(a)g(mo)r(di\014ed)h(v)n(ersion)e(of)h
(the)h(real-time)f(recur-)487 1262 y(ren)n(t)h(learning)f(\(R)-7
b(TRL\))22 b([16)o(])g(for)e(training)h(it.)35 b(The)22
b(PRNN)f(w)n(as)g(used)g(in)h(a)e(cascade)h(of)487 1362
y(nonlinear)j(and)g(linear)h(predictors.)35 b(Baltersee)23
b(and)i(Cham)n(b)r(ers)f([1])h(sho)n(w)n(ed)f(that)h(the)487
1461 y(PRNN)h(do)r(es)f(not)h(p)r(erform)f(satisfactorily)f(when)i(R)-7
b(TRL)26 b(is)g(used)g(and)f(prop)r(osed)g(the)487 1561
y(use)g(of)g(the)h(decoupled)f(extended)h(Kalman)e(\014lter)i(\(DEKF\))
f([13)o(])h(training)f(algorithm)487 1660 y(instead,)i(obtaining)f(for)
g(the)i(cascaded)d(form)i(of)g(predictors)e(adv)-5 b(an)n(tages)26
b(of)g(appro)n(x-)487 1760 y(imately)g(2dB)g(o)n(v)n(er)f(linear)g
(\014lters)i(alone.)35 b(It)27 b(has)f(to)g(b)r(e)h(p)r(oin)n(ted)g
(out,)g(ho)n(w)n(ev)n(er,)d(that)487 1860 y(the)f(results)g(presen)n
(ted)g(in)g(b)r(oth)h(pap)r(ers)f(b)r(elong)g(to)g(a)g(b)r(est-case)f
(situation:)35 b(only)23 b(one)487 1959 y(exp)r(erimen)n(t)k(with)h
Fl(ad)j(ho)l(c)i Fp(parameter)26 b(v)-5 b(alues)27 b(w)n(as)g(sho)n
(wn.)611 2059 y(The)j(PRNN)h(is)f(comp)r(osed)f(of)h(sev)n(eral)e
(recurren)n(t)h(error)f(propagation)g(net)n(w)n(orks)487
2159 y(\(REPN,)i(lik)n(e)g(those)g(used)g(b)n(y)h(Robinson)e(and)i(F)-7
b(allside)30 b([14)o(]\))h(sharing)e(w)n(eigh)n(ts)h(and)487
2258 y(connected)d(in)h(suc)n(h)f(a)g(w)n(a)n(y)g(that)h(the)f(output)i
(of)e(a)g(net)n(w)n(ork)f(feeds)i(the)g(input)h(of)e(the)487
2358 y(next)i(one.)41 b(The)29 b(PRNN)g(ma)n(y)g(b)r(e)g(considered)f
(partly)h(as)f(an)h(arc)n(hitecture)f(designed)487 2457
y(on)e(purp)r(ose)g(\(in)h(fact,)g(w)n(e)f(do)g(not)g(ha)n(v)n(e)f
(evidence)i(of)f(other)g(w)n(orks)f(using)h(it\).)37
b(There)487 2557 y(is,)27 b(ho)n(w)n(ev)n(er,)e(a)i(lac)n(k)f(of)h
(studies)h(on)f(the)g(p)r(erformance)f(of)h(classical)f
Fl(gener)l(al-purp)l(ose)487 2657 y Fp(RNNs)21 b(when)h(applied)f(to)g
(sp)r(eec)n(h)g(prediction.)34 b(This)21 b(pap)r(er)g(compares)f
(Baltersee)g(and)487 2756 y(Cham)n(b)r(ers')35 b(results)g(with)h(new)g
(ones)g(obtained)f(for)h(some)f(classical)f(RNNs,)39
b(using)487 2856 y(b)r(oth)28 b(R)-7 b(TRL)27 b(and)h(DEKF.)487
3155 y Fn(METHOD)487 3354 y Fp(F)-7 b(ollo)n(wing)28
b(Ha)n(ykin)i(and)f(Li)h([9],)g(and)g(Baltersee)f(and)g(Cham)n(b)r(ers)
g([1],)h(our)f(mo)r(del)i(of)487 3454 y(predictor)f(is)h(comp)r(osed)f
(of)h(a)g(nonlinear)f(predictor)g(\(a)h(RNN\),)h(whic)n(h)f(is)g(supp)r
(osed)487 3553 y(to)25 b(linearize)f(the)i(input)g(signal,)f(follo)n(w)
n(ed)f(b)n(y)h(a)g(linear)g(predictor)f(\(a)h(\014lter\),)h(whic)n(h)g
(is)487 3653 y(supp)r(osed)i(to)h(tak)n(e)g(adv)-5 b(an)n(tage)27
b(of)i(this)h(linearization.)40 b(Eac)n(h)28 b(mo)r(dule)h(is)g
(separately)487 3753 y(trained.)60 b(It)36 b(is)g(exp)r(ected)g(that)g
(\\this)f(com)n(bination)g(of)g(a)h(nonlinear)e(\014lter)i(with)g(a)487
3852 y(linear)24 b(\014lter)g(should)h(b)r(e)g(able)f(to)h(extract)f(b)
r(oth)h(the)g(nonlinear)f(and)g(the)h(linear)f(infor-)487
3952 y(mation)j(con)n(tained)g(in)h(the)g(input)g(signal)f(to)g(pro)r
(duce)g(the)h(prediction")f([9].)611 4051 y(Figure)33
b(1)h(sho)n(ws)f(a)g(diagram)g(for)g(the)h(complete)g(cascaded)f(arc)n
(hitecture.)54 b(The)487 4151 y(\014rst)21 b(mo)r(dule)g(is)g(trained)g
(to)g(predict)g(the)h(sample)e Fm(u)p Fp([)p Fm(t)p Fp(])h(from)g(the)h
Fm(p)f Fp(previous)f(samples)3214 4121 y Fk(2)487 4251
y Fp(and)28 b(the)i(information)e(stored)g(in)h(the)h(net)n(w)n(ork's)d
(state.)41 b(The)29 b(predicted)g(signal)k(^)-47 b Fm(u)o
Fp([)p Fm(t)p Fp(])487 4350 y(is)29 b(in)n(tro)r(duced)g(in)n(to)h(the)
g(linear)e(mo)r(dule,)j(whic)n(h)e(is)h(trained)f(to)g(predict)h(the)g
(sample)487 4450 y(at)j(time)h Fm(t)22 b Fp(+)g(1.)54
b(The)33 b(later)g(is)g(considered)g(as)g(the)g(o)n(v)n(erall)f(output)
h(of)h(the)g(system.)487 4550 y(As)f(sho)n(wn)g(in)h(the)g(diagram)e
(\(follo)n(wing)h(again)f(the)i(aforemen)n(tioned)e(pap)r(ers\),)j(the)
487 4649 y(nonlinear)27 b(mo)r(dule)i(has)f(input)h(order)e
Fm(p)p Fp(,)h(and)h Fm(q)i Fp(is)d(the)h(corresp)r(onding)e(order)g(of)
h(the)p 487 4702 1106 4 v 579 4756 a Fj(1)614 4779 y
Fi(Actually)-6 b(,)23 b(the)h(memory)d(of)i(standard)h(RNNs)e(is)h(v)n
(ery)g(limited)f(and)i(reduces)g(to)f(a)h(few)e(samples)487
4858 y(due)i(to)g(the)h(problem)d(of)i(v)l(anishing)g(gradien)n(ts)g
([2].)579 4914 y Fj(2)614 4938 y Fi(The)32 b(explicit)g(in)n(tro)r
(duction)i(of)d(recen)n(t)j(samples)d(in)n(to)h(the)h(net)n(w)n(ork)g
(giv)n(es)f(it)g(an)h(additional)487 5016 y(adv)l(an)n(tage)23
b(o)n(v)n(er)d(single-input)h(net)n(w)n(orks)g(whic)n(h)g(ha)n(v)n(e)g
(access)g(to)h(recen)n(t)f(history)f(of)h(the)g(signal)f(only)487
5095 y(through)k(their)g(state.)32 b(The)24 b(exp)r(erimen)n(ts)g(will)
e(determine)h(the)i(imp)r(ortance)f(of)f(suc)n(h)h(an)g(addition.)p
eop
%%Page: 3 3
3 2 bop 1163 1644 a @beginspecial 73 @llx 591 @lly 357
@urx 805 @ury 1275 @rhi @setspecial
%%BeginDocument: predictor.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 73 591 357 805
%%Title: predictor
%%CreationDate: Thu Sep 13 21:14:35 2001
%%Creator: Tgif-4.1.35 by William Chia-Wei Cheng (william@cs.UCLA.edu)
%%ProducedBy: (unknown)
%%Pages: 1
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog

/tgifdict 53 dict def
tgifdict begin

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/TGAT % tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/TGMAX
 { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
 } def
/TGMIN
 { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
 } def
/TGSW { stringwidth pop } def

/bd { bind def } bind def

/GS { gsave } bd
/GR { grestore } bd
/NP { newpath } bd
/CP { closepath } bd
/CHP { charpath } bd
/CT { curveto } bd
/L { lineto } bd
/RL { rlineto } bd
/M { moveto } bd
/RM { rmoveto } bd
/S { stroke } bd
/F { fill } bd
/TR { translate } bd
/RO { rotate } bd
/SC { scale } bd
/MU { mul } bd
/DI { div } bd
/DU { dup } bd
/NE { neg } bd
/AD { add } bd
/SU { sub } bd
/PO { pop } bd
/EX { exch } bd
/CO { concat } bd
/CL { clip } bd
/EC { eoclip } bd
/EF { eofill } bd
/IM { image } bd
/IMM { imagemask } bd
/ARY { array } bd
/SG { setgray } bd
/RG { setrgbcolor } bd
/SD { setdash } bd
/W { setlinewidth } bd
/SM { setmiterlimit } bd
/SLC { setlinecap } bd
/SLJ { setlinejoin } bd
/SH { show } bd
/FF { findfont } bd
/MS { makefont setfont } bd
/AR { arcto 4 {pop} repeat } bd
/CURP { currentpoint } bd
/FLAT { flattenpath strokepath clip newpath } bd
/TGSM { tgiforigctm setmatrix } def
/TGRM { savematrix setmatrix } def

end

%%EndProlog
%%Page: 1 1

%%PageBoundingBox: 73 591 357 805
tgifdict begin
/tgifsavedpage save def

1 SM
1 W

0 SG

72 0 MU 72 11.602 MU TR
72 128 DI 100.000 MU 100 DI DU NE SC

GS

/tgiforigctm matrix currentmatrix def

% TEXT
NP
0 SG
   GS
      1 W
      405 145 M
      GS
        GS
        0
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (z) TGSW 
        AD
          GS
          0
            0
              0
                GS
                0
                    /NewCenturySchlbk-Italic FF [15 0 0 -15 0 0] MS
                    (-1) TGSW 
                AD
                GR
              TGMAX
            TGMAX
          TGMAX
          GR
        AD
            0
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (z) SH
          GS
            GS
              0 -13 RM
              GS
                    0 SG
                    /NewCenturySchlbk-Italic FF [15 0 0 -15 0 0] MS
                    (-1) SH
              GR
            GR
          GR
            0
              0
                GS
                0
                    /NewCenturySchlbk-Italic FF [15 0 0 -15 0 0] MS
                    (-1) TGSW 
                AD
                GR
              TGMAX
            TGMAX
          0 RM
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 385 110 M 425 110 L 425 150 L 385 150 L CP
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      220 145 M
      GS
        GS
        0
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (z) TGSW 
        AD
          GS
          0
            0
              0
                GS
                0
                    /NewCenturySchlbk-Italic FF [15 0 0 -15 0 0] MS
                    (-1) TGSW 
                AD
                GR
              TGMAX
            TGMAX
          TGMAX
          GR
        AD
            0
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (z) SH
          GS
            GS
              0 -13 RM
              GS
                    0 SG
                    /NewCenturySchlbk-Italic FF [15 0 0 -15 0 0] MS
                    (-1) SH
              GR
            GR
          GR
            0
              0
                GS
                0
                    /NewCenturySchlbk-Italic FF [15 0 0 -15 0 0] MS
                    (-1) TGSW 
                AD
                GR
              TGMAX
            TGMAX
          0 RM
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 200 110 M 240 110 L 240 150 L 200 150 L CP
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      220 310 M
      GS
        GS
        0
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (z) TGSW 
        AD
          GS
          0
            0
              0
                GS
                0
                    /NewCenturySchlbk-Italic FF [15 0 0 -15 0 0] MS
                    (-1) TGSW 
                AD
                GR
              TGMAX
            TGMAX
          TGMAX
          GR
        AD
            0
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (z) SH
          GS
            GS
              0 -13 RM
              GS
                    0 SG
                    /NewCenturySchlbk-Italic FF [15 0 0 -15 0 0] MS
                    (-1) SH
              GR
            GR
          GR
            0
              0
                GS
                0
                    /NewCenturySchlbk-Italic FF [15 0 0 -15 0 0] MS
                    (-1) TGSW 
                AD
                GR
              TGMAX
            TGMAX
          0 RM
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 200 275 M 240 275 L 240 315 L 200 315 L CP
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      405 310 M
      GS
        GS
        0
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (z) TGSW 
        AD
          GS
          0
            0
              0
                GS
                0
                    /NewCenturySchlbk-Italic FF [15 0 0 -15 0 0] MS
                    (-1) TGSW 
                AD
                GR
              TGMAX
            TGMAX
          TGMAX
          GR
        AD
            0
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (z) SH
          GS
            GS
              0 -13 RM
              GS
                    0 SG
                    /NewCenturySchlbk-Italic FF [15 0 0 -15 0 0] MS
                    (-1) SH
              GR
            GR
          GR
            0
              0
                GS
                0
                    /NewCenturySchlbk-Italic FF [15 0 0 -15 0 0] MS
                    (-1) TGSW 
                AD
                GR
              TGMAX
            TGMAX
          0 RM
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 385 275 M 425 275 L 425 315 L 385 315 L CP
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      545 80 M
      GS
        GS
        0
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (u) TGSW 
        AD
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            ([) TGSW 
        AD
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (t-1) TGSW 
        AD
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            (]) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (u) SH
            0 SG
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            ([) SH
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (t-1) SH
            0 SG
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            (]) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      355 180 M
      GS
        GS
        0
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (u) TGSW 
        AD
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            ([) TGSW 
        AD
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (t-2) TGSW 
        AD
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            (]) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (u) SH
            0 SG
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            ([) SH
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (t-2) SH
            0 SG
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            (]) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      170 180 M
      GS
        GS
        0
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (u) TGSW 
        AD
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            ([) TGSW 
        AD
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (t-p) TGSW 
        AD
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            (]) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (u) SH
            0 SG
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            ([) SH
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (t-p) SH
            0 SG
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            (]) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      535 285 M
      GS
        GS
        0
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (u) TGSW 
        AD
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            ([) TGSW 
        AD
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (t) TGSW 
        AD
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            (]) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (u) SH
            0 SG
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            ([) SH
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (t) SH
            0 SG
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            (]) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      355 345 M
      GS
        GS
        0
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (u) TGSW 
        AD
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            ([) TGSW 
        AD
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (t-1) TGSW 
        AD
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            (]) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (u) SH
            0 SG
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            ([) SH
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (t-1) SH
            0 SG
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            (]) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      165 340 M
      GS
        GS
        0
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (u) TGSW 
        AD
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            ([) TGSW 
        AD
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (t-q) TGSW 
        AD
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            (]) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (u) SH
            0 SG
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            ([) SH
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (t-q) SH
            0 SG
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            (]) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      600 425 M
      GS
        GS
        0
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (u) TGSW 
        AD
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            ([) TGSW 
        AD
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (t+1) TGSW 
        AD
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            (]) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (u) SH
            0 SG
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            ([) SH
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (t+1) SH
            0 SG
            /NewCenturySchlbk-Roman FF [25 0 0 -25 0 0] MS
            (]) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      525 275 M
      GS
        GS
        0
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (^) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (^) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      330 335 M
      GS
        GS
        0
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (^) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (^) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      140 330 M
      GS
        GS
        0
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (^) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (^) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      575 415 M
      GS
        GS
        0
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (^) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /NewCenturySchlbk-Italic FF [25 0 0 -25 0 0] MS
            (^) SH
      GR
   GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 200 195 M 525 195 L 525 240 L 200 240 L CP
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      365 225 M
      GS
        GS
        0
            /Helvetica FF [25 0 0 -25 0 0] MS
            (Recurrent neural filter) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica FF [25 0 0 -25 0 0] MS
            (Recurrent neural filter) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      500 65 M
      130 0 atan DU cos 8.000 MU 500 exch SU
      exch sin 8.000 MU 195 exch SU L
   TGSM
   1 W
   S
GR
GS
   TGSM
   NP
      500 195 8.000 3.000 0 130 TGAT
   1 SG CP F
   0 SG
   NP
      500 195 8.000 3.000 0 130 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      405 150 M
      45 0 atan DU cos 8.000 MU 405 exch SU
      exch sin 8.000 MU 195 exch SU L
   TGSM
   1 W
   S
GR
GS
   TGSM
   NP
      405 195 8.000 3.000 0 45 TGAT
   1 SG CP F
   0 SG
   NP
      405 195 8.000 3.000 0 45 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      220 150 M
      45 0 atan DU cos 8.000 MU 220 exch SU
      exch sin 8.000 MU 195 exch SU L
   TGSM
   1 W
   S
GR
GS
   TGSM
   NP
      220 195 8.000 3.000 0 45 TGAT
   1 SG CP F
   0 SG
   NP
      220 195 8.000 3.000 0 45 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      500 125 M
      0 -75 atan DU cos 8.000 MU 425 exch SU
      exch sin 8.000 MU 125 exch SU L
   TGSM
   1 W
   S
GR
GS
   TGSM
   NP
      425 125 8.000 3.000 -75 0 TGAT
   1 SG CP F
   0 SG
   NP
      425 125 8.000 3.000 -75 0 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   [8 8] 0 SD
   NP
      385 125 M
      0 -145 atan DU cos 8.000 MU 240 exch SU
      exch sin 8.000 MU 125 exch SU L
   TGSM
   1 W
   S
   [] 0 SD
GR
GS
   TGSM
   NP
      240 125 8.000 3.000 -145 0 TGAT
   1 SG CP F
   0 SG
   NP
      240 125 8.000 3.000 -145 0 TGAT
   CP F
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 200 360 M 525 360 L 525 405 L 200 405 L CP
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      365 390 M
      GS
        GS
        0
            /Helvetica FF [25 0 0 -25 0 0] MS
            (Linear filter) TGSW 
        AD
        GR
      2 DI NE 0 RM
            0 SG
            /Helvetica FF [25 0 0 -25 0 0] MS
            (Linear filter) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      500 240 M
      120 0 atan DU cos 8.000 MU 500 exch SU
      exch sin 8.000 MU 360 exch SU L
   TGSM
   1 W
   S
GR
GS
   TGSM
   NP
      500 360 8.000 3.000 0 120 TGAT
   1 SG CP F
   0 SG
   NP
      500 360 8.000 3.000 0 120 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      405 315 M
      45 0 atan DU cos 8.000 MU 405 exch SU
      exch sin 8.000 MU 360 exch SU L
   TGSM
   1 W
   S
GR
GS
   TGSM
   NP
      405 360 8.000 3.000 0 45 TGAT
   1 SG CP F
   0 SG
   NP
      405 360 8.000 3.000 0 45 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      220 315 M
      45 0 atan DU cos 8.000 MU 220 exch SU
      exch sin 8.000 MU 360 exch SU L
   TGSM
   1 W
   S
GR
GS
   TGSM
   NP
      220 360 8.000 3.000 0 45 TGAT
   1 SG CP F
   0 SG
   NP
      220 360 8.000 3.000 0 45 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      500 295 M
      0 -75 atan DU cos 8.000 MU 425 exch SU
      exch sin 8.000 MU 295 exch SU L
   TGSM
   1 W
   S
GR
GS
   TGSM
   NP
      425 295 8.000 3.000 -75 0 TGAT
   1 SG CP F
   0 SG
   NP
      425 295 8.000 3.000 -75 0 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   [8 8] 0 SD
   NP
      385 295 M
      0 -145 atan DU cos 8.000 MU 240 exch SU
      exch sin 8.000 MU 295 exch SU L
   TGSM
   1 W
   S
   [] 0 SD
GR
GS
   TGSM
   NP
      240 295 8.000 3.000 -145 0 TGAT
   1 SG CP F
   0 SG
   NP
      240 295 8.000 3.000 -145 0 TGAT
   CP F
GR

% POLY/OPEN-SPLINE
0 SG
GS
   519 361 TR
   [0.000 -1.000 1.000 0.000 9 21] CO
   519 NE 361 NE TR
GS
   NP
      519 361 M
      519 440 L
   TGSM
   1 W
   S
GR
GS
   TGSM
   NP
      613 382 8.000 3.000 85 0 TGAT
   1 SG CP F
   0 SG
   NP
      613 382 8.000 3.000 85 0 TGAT
   CP F
GR
GR

GR
tgifsavedpage restore
end
showpage

%%Trailer
%MatchingCreationDate: Thu Sep 13 21:14:35 2001
%%DocumentFonts: Helvetica
%%+ NewCenturySchlbk-Roman
%%+ NewCenturySchlbk-Italic
%%EOF

%%EndDocument
 @endspecial 565 1771 a Fh(Figure)26 b(1:)35 b(Arc)n(hitecture)25
b(of)h(the)g(predictor)g(com)n(bining)f(nonlinear)h(and)f(linear)i
(\014lters.)487 1971 y Fp(linear)35 b(predictor.)62 b(In)36
b(addition)g(to)g(the)h(results)e(for)h(this)g(h)n(ybrid)g(mo)r(del,)j
(w)n(e)d(also)487 2071 y(sho)n(w)26 b(the)i(results)f(for)g(the)h
(nonlinear)f(and)g(linear)g(predictors)g(alone.)487 2270
y Fn(Nonlinear)k(Predictors)487 2469 y Fp(The)37 b(follo)n(wing)f
(discrete-time)g(RNNs)i(acting)e(as)g(nonlinear)g(predictors)g(are)g
(com-)487 2569 y(pared:)e Fl(pip)l(eline)l(d)27 b(r)l(e)l(curr)l(ent)d
(neur)l(al)i(network)32 b Fp(\(PRNN\))24 b([9],)g(Elman's)e
Fl(simple)27 b(r)l(e)l(cur-)487 2668 y(r)l(ent)j(net)36
b Fp(\(SRN\))30 b([5)o(],)f(and)g(Robinson)f(and)g(F)-7
b(allside's)29 b Fl(r)l(e)l(curr)l(ent)g(err)l(or)i(pr)l(op)l(agation)
487 2768 y(network)49 b Fp(\(REPN\))39 b([14)o(].)73
b(W)-7 b(e)40 b(also)f(exp)r(erimen)n(ted)h(with)g(other)f(recurren)n
(t)f(arc)n(hi-)487 2868 y(tectures,)26 b(suc)n(h)g(as)g(the)g(fully)h
(recurren)n(t)e(net)n(w)n(ork)g([16)o(])i(or)e(the)i(NARX)g(net)n(w)n
(ork)e([10)o(],)487 2967 y(obtaining)19 b(results)g(similar)g(to)h
(those)f(of)h(the)g(SRN)g(and)g(REPN,)f(whic)n(h,)i(consequen)n(tly)-7
b(,)487 3067 y(will)24 b(not)h(b)r(e)g(sho)n(wn.)35 b(The)25
b(n)n(um)n(b)r(er)f(of)h(state)f(\(recurren)n(t\))g(neurons)f(of)i(eac)
n(h)f(arc)n(hitec-)487 3166 y(ture)j(is)h(denoted)f(b)n(y)h
Fm(N)9 b Fp(.)611 3266 y(The)40 b(t)n(w)n(o)f(gradien)n(t-based)f
(real-time)h(\(that)i(is,)i Fl(online)6 b Fp(\))41 b(training)e
(algorithms)487 3366 y(used)26 b(for)f(these)h(arc)n(hitectures)f(are)g
(the)i Fl(r)l(e)l(al-time)h(r)l(e)l(curr)l(ent)f(le)l(arning)34
b Fp(\(R)-7 b(TRL\))27 b([16)o(])487 3465 y(and)g(the)h
Fl(de)l(c)l(ouple)l(d)j(extende)l(d)f(Kalman)g(\014lter)36
b Fp(\(DEKF\))28 b([13)o(].)487 3665 y Fn(Linear)k(Predictors)487
3864 y Fp(The)19 b(linear)g(predictor)g(is)h(a)f(\014nite-impulse)h
(resp)r(onse)f(\(FIR\))i(\014lter)f(whose)f(w)n(eigh)n(ts)f(are)487
3963 y(adapted)30 b(either)h(b)n(y)g(the)h(least-mean-square)c(\(LMS\))
k([11)o(,)f(12)o(])h(or)e(b)n(y)h(the)g(recursiv)n(e)487
4063 y(least-squares)25 b(\(RLS\))j([11)o(,)g(12)o(])g(algorithms.)611
4163 y(As)35 b(a)f(w)n(a)n(y)f(of)h(determining)h(baseline)f(p)r
(erformance,)h(w)n(e)f(ev)-5 b(aluate)34 b(as)g(w)n(ell)g(the)487
4262 y(prediction)21 b(qualit)n(y)g(of)h(a)f(simplest)h(parameter-free)
d(predictor)i(computing)26 b(^)-47 b Fm(u)p Fp([)p Fm(t)6
b Fp(+)g(1])23 b(=)487 4362 y Fm(u)p Fp([)p Fm(t)p Fp(].)487
4661 y Fn(RESUL)-8 b(TS)487 4860 y Fp(W)h(e)37 b(study)h(the)g(qualit)n
(y)f(of)g(the)h(predictors)e(via)h(the)h(same)f(three)g(signals)f
(\(length)487 4960 y(10000\))31 b(used)j(b)n(y)f(Baltersee)f(and)h
(Cham)n(b)r(ers)g([1].)2119 4930 y Fk(3)2211 4960 y Fp(P)n(erformance)e
(is)i(measured)g(b)n(y)p 487 5013 1106 4 v 579 5066 a
Fj(3)614 5090 y Fi(The)24 b(signals)g Fg(s1)p Fi(,)h
Fg(s2)g Fi(and)g Fg(s3)f Fi(are)h(a)n(v)l(ailable)g(at)g(Baltersee's)f
(homepage)h(at)49 b Fg(http://www.ert.)487 5169 y(rwth-)t
(aachen.de/Personen/)q(balt)q(ers)q(ee.h)q(tml)q Fi(.)p
eop
%%Page: 4 4
4 3 bop 1052 669 a Fh(T)-6 b(able)26 b(1:)35 b(Prediction)26
b(gains)h(for)f(a)g(12-tap)g(FIR)f(\014lter.)p 1038 695
1661 4 v 1088 765 a Fp(T)-7 b(raining)126 b(Signal)28
b(1)126 b(Signal)27 b(2)127 b(Signal)27 b(3)p 1038 798
V 1088 868 a(LMS)403 b(8.99)269 b(7.98)g(5.82)1088 967
y(RLS)377 b(13.32)227 b(11.60)268 b(9.66)p 1038 1000
V 808 1194 a Fh(T)-6 b(able)26 b(2:)35 b(Prediction)27
b(gains)f(with)g(a)g(PRNN.)f(V)-6 b(alues)26 b(tak)n(en)f(from)g([1)q
(].)p 764 1225 2209 4 v 814 1294 a Fp(T)-7 b(raining)675
b(Signal)27 b(1)127 b(Signal)27 b(2)127 b(Signal)27 b(3)p
764 1328 V 814 1397 a(PRNN)h(\(R)-7 b(TRL\))28 b(+)f(LMS)229
b(10.25)269 b(9.49)g(7.30)814 1497 y(PRNN)28 b(\(R)-7
b(TRL\))28 b(+)f(RLS)244 b(13.01)227 b(11.80)269 b(9.24)814
1597 y(PRNN)28 b(\(DEKF\))g(+)f(RLS)232 b(14.73)227 b(13.59)g(10.90)p
764 1630 V 487 1815 a(means)27 b(of)g(the)h Fl(pr)l(e)l(diction)j(gain)
k Fp(\(PG\),)28 b(whic)n(h)g(is)f(de\014ned)h(as)1518
2051 y Fm(G)23 b Fp(=)g(10)14 b(log)1898 2071 y Fk(10)1982
1934 y Ff(\022)2053 1995 y Fm(S)2109 1965 y Fk(2)2104
2015 y Fe(u)p 2053 2032 95 4 v 2054 2108 a Fm(S)2110
2084 y Fk(2)2105 2128 y Fe(e)2158 1934 y Ff(\023)3144
2051 y Fp(\(1\))487 2289 y(where)34 b Fm(S)790 2258 y
Fk(2)785 2309 y Fe(u)863 2289 y Fp(is)h(the)g(estimated)g(v)-5
b(ariance)34 b(of)h(the)g(sp)r(eec)n(h)g(signal)f Fm(u)p
Fp([)p Fm(t)p Fp(])h(and)f Fm(S)2972 2258 y Fk(2)2967
2309 y Fe(e)3044 2289 y Fp(is)h(the)487 2388 y(estimated)27
b(v)-5 b(ariance)27 b(of)g(the)h(error)e(signal)h Fm(e)p
Fp([)p Fm(t)p Fp(])22 b(=)h Fm(u)p Fp([)p Fm(t)p Fp(])18
b Fd(\000)23 b Fp(^)-47 b Fm(u)p Fp([)p Fm(t)p Fp(].)611
2488 y(The)34 b(amplitudes)h(of)f(the)g(three)g(signals)f(lie)h(in)g
(the)h(range)e([0)p Fm(;)14 b Fp(1\),)35 b(therefore)e(w)n(e)487
2587 y(use)23 b(the)g(logistic)g(sigmoid)f(function)i
Fm(f)9 b Fp(\()p Fm(x)p Fp(\))24 b(=)e(\(1)10 b(+)g Fm(e)2133
2557 y Fc(\000)p Fe(x)2225 2587 y Fp(\))2257 2557 y Fc(\000)p
Fk(1)2370 2587 y Fp(for)23 b(the)g(activ)-5 b(ations)23
b(of)g(the)487 2687 y(neurons)k(in)h(the)g(output)g(la)n(y)n(ers)e(of)i
(the)g(RNNs)g(\(and)g(for)f(ev)n(ery)g(activ)-5 b(ation)27
b(function)487 2787 y(in)g(general\).)611 2886 y(F)-7
b(ollo)n(wing)43 b(the)h(aforemen)n(tioned)e(w)n(orks,)k(w)n(e)d(p)r
(erform)g(an)g(initial)h(ep)r(o)r(c)n(h)n(wise)487 2986
y(training)32 b(with)h(300)e(samples)h(of)g(the)h(input)h(signal)e(for)
g(the)h(neural)f(arc)n(hitectures.)3215 2956 y Fk(4)487
3086 y Fp(The)e(n)n(um)n(b)r(er)g(of)h(training)e(ep)r(o)r(c)n(hs)h(is)
h(set)f(to)h(200)e(for)g(R)-7 b(TRL)31 b(and)f(to)h(5)f(for)g(DEKF.)487
3185 y(These)24 b(v)-5 b(alues)25 b(ga)n(v)n(e)f(go)r(o)r(d)g(results)h
(in)g(preliminary)f(exp)r(erimen)n(ts:)36 b(m)n(uc)n(h)24
b(higher)h(v)-5 b(al-)487 3285 y(ues)27 b(for)g(DEKF)g(or)g(m)n(uc)n(h)
h(lo)n(w)n(er)e(ones)h(for)g(R)-7 b(TRL)27 b(reduce)h(the)g(PG)f(in)h
(a)f(few)h(dB.)611 3384 y(Unless)c(stated,)g(all)g(the)g(PGs)f(presen)n
(ted)g(are)g(the)h(a)n(v)n(erage)d(for)i(7)g(di\013eren)n(t)h(w)n(eigh)
n(t)487 3484 y(initializations;)43 b(the)c(v)-5 b(ariance)37
b(of)h(these)h(gains)e(is)h(in)h(all)f(cases)f(b)r(elo)n(w)h(0)p
Fm(:)p Fp(3)g(and)g(it)487 3584 y(is)31 b(not)h(sho)n(wn)e(an)n
(ywhere.)48 b(Initial)32 b(w)n(eigh)n(ts)e(are)h(tak)n(en)g(randomly)f
(from)h(a)h(uniform)487 3683 y(distribution)27 b(in)h([-0.2,0.2].)611
3783 y(The)f(PGs)g(obtained)g(with)h(a)f(linear)f(\014lter)h(alone)g
(with)g Fm(q)f Fp(=)d(12)j(taps,)h(using)g(LMS)487 3883
y(and)d(RLS)h(algorithms,)f(are)g(sho)n(wn)g(in)h(T)-7
b(able)24 b(1.)36 b(In)25 b(this)g(case,)f(the)h(forgetting)f(factor)
487 3982 y(for)f(RLS)h(is)f(0)p Fm(:)p Fp(998,)g(the)h(diagonal)f
(elemen)n(ts)g(of)h(the)g(RLS)g(in)n(v)n(erse)e(correlation)g(matrix)
487 4082 y(are)k(initialized)i(to)g(100,)e(and)h(LMS)h(uses)f(an)h
(adaptation)e(constan)n(t)h(of)h(0)p Fm(:)p Fp(2.)611
4181 y(The)f(results)f(with)h(the)f(PRNN)h(are)f(tak)n(en)f(from)i(the)
f(exp)r(erimen)n(ts)h(b)n(y)f(Baltersee)487 4281 y(and)k(Cham)n(b)r
(ers)f([1])h(and)g(are)f(sho)n(wn)h(in)g(T)-7 b(able)30
b(2.)44 b(W)-7 b(e)31 b(refer)e(in)n(terested)h(readers)f(to)487
4381 y(their)37 b(pap)r(er)f(for)h(details)f(ab)r(out)h(v)-5
b(alues)37 b(of)g(the)g(training)f(parameters.)64 b(It)37
b(has)g(to)487 4480 y(b)r(e)32 b(stressed)g(that)g(there)h(is)f(no)g
(indication)g(in)h(that)f(pap)r(er)g(ab)r(out)g(a)n(v)n(erage)e
(results,)487 4580 y(since)37 b(only)g(the)g(results)g(for)g(one)f(exp)
r(erimen)n(t)i(with)f Fl(ad)j(ho)l(c)j Fp(parameters)35
b(\(c)n(hosen)487 4680 y(di\013eren)n(tly)h(for)g(eac)n(h)g(signal\))f
(are)h(sho)n(wn.)62 b(An)n(yw)n(a)n(y)-7 b(,)38 b(ev)n(en)e(the)g(b)r
(est-case)g(results)487 4779 y(obtained)23 b(here)f(for)h(other)f
(recurren)n(t)g(arc)n(hitectures)g(are)g(w)n(orse)g(than)h(those)g
(obtained)487 4879 y(with)28 b(the)g(PRNN.)p 487 4932
1106 4 v 579 4986 a Fj(4)614 5009 y Fi(This)19 b(atten)n(uates)j
(partially)d(the)h(real-time)e(nature)i(of)f(the)i(prediction,)f(but)g
(ma)n(y)f(b)r(e)h(acceptable)487 5088 y(if)k(the)h(complexit)n(y)g(is)g
(lo)n(w.)34 b(Exp)r(erimen)n(ts)24 b(sho)n(w)n(ed)i(that)g(this)f(kind)
g(of)g(initialization)g(has)g(a)g(strong)487 5167 y(in\015uence)g(on)f
(the)g(prediction)h(gain)e(obtained.)p eop
%%Page: 5 5
5 4 bop 487 1665 a @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1700 @rwi @setspecial
%%BeginDocument: is1srn.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: is1srn.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Thu Sep 13 21:14:35 2001
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -86 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Helvetica reencodeISO def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1014 520 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 520 M
[ [(Helvetica) 260.0 0.0 true true (5)]
] -86.7 MRshow
1014 1054 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 1054 M
[ [(Helvetica) 260.0 0.0 true true (6)]
] -86.7 MRshow
1014 1589 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 1589 M
[ [(Helvetica) 260.0 0.0 true true (7)]
] -86.7 MRshow
1014 2123 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 2123 M
[ [(Helvetica) 260.0 0.0 true true (8)]
] -86.7 MRshow
1014 2657 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 2657 M
[ [(Helvetica) 260.0 0.0 true true (9)]
] -86.7 MRshow
1014 3191 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 3191 M
[ [(Helvetica) 260.0 0.0 true true (10)]
] -86.7 MRshow
1014 3726 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 3726 M
[ [(Helvetica) 260.0 0.0 true true (11)]
] -86.7 MRshow
1014 4260 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 4260 M
[ [(Helvetica) 260.0 0.0 true true (12)]
] -86.7 MRshow
1493 520 M
0 63 V
 stroke
1493 260 M
[ /Helvetica-Oblique reencodeISO def
[(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=1)]
] -93.3 MCshow
3886 520 M
0 63 V
 stroke
3886 260 M
[ [(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=2)]
] -93.3 MCshow
6279 520 M
0 63 V
 stroke
6279 260 M
[ [(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=3)]
] -93.3 MCshow
1.000 UL
LTb
1014 520 M
5744 0 V
0 3740 V
-5744 0 V
0 -3740 V
 stroke
260 2390 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica-Oblique) 260.0 0.0 true true (G)]
[(Helvetica) 260.0 0.0 true true (  )]
[(Helvetica) 260.0 0.0 true true (\(dB\))]
] -86.7 MCshow
grestore
3886 4650 M
[ /Times-Roman reencodeISO def
[(Times-Roman) 280.0 0.0 true true (\(a\))]
] -93.3 MCshow
4843 2978 M
[ [(Helvetica) 240.0 0.0 true true (RTRL)]
] -80.0 MLshow
4843 3886 M
[ [(Helvetica) 240.0 0.0 true true (DEKF)]
] -80.0 MLshow
1971 1589 M
[ [(Helvetica) 240.0 0.0 true true (RTRL+LMS)]
] -80.0 MLshow
1971 2069 M
[ [(Helvetica) 240.0 0.0 true true (DEKF+LMS)]
] -80.0 MLshow
4843 1215 M
[ [(Helvetica) 240.0 0.0 true true (DEKF+RLS)]
] -80.0 MLshow
2.000 UP
1.000 UL
LT2
1493 3042 M
2393 75 V
2393 123 V
1493 3042 C5
3886 3117 C5
6279 3240 C5
2.000 UP
1.000 UL
LT2
1493 3699 M
2393 305 V
2393 133 V
1493 3699 Star
3886 4004 Star
6279 4137 Star
2.000 UP
1.000 UL
LT4
1493 1824 M
2393 16 V
2393 -64 V
1493 1824 BoxF
3886 1840 BoxF
6279 1776 BoxF
2.000 UP
1.000 UL
LT2
1493 1866 M
2393 -10 V
2393 -75 V
1493 1866 Dia
3886 1856 Dia
6279 1781 Dia
2.000 UP
1.000 UL
LT3
1493 1060 M
2393 42 V
2393 -21 V
1493 1060 Box
3886 1102 Box
6279 1081 Box
1.000 UL
LT4
1014 905 M
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica-Oblique Helvetica

%%EndDocument
 @endspecial 1438 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1700 @rwi @setspecial
%%BeginDocument: is1repn.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: is1repn.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Thu Sep 13 21:14:35 2001
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -86 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Helvetica reencodeISO def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1014 520 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 520 M
[ [(Helvetica) 260.0 0.0 true true (5)]
] -86.7 MRshow
1014 1054 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 1054 M
[ [(Helvetica) 260.0 0.0 true true (6)]
] -86.7 MRshow
1014 1589 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 1589 M
[ [(Helvetica) 260.0 0.0 true true (7)]
] -86.7 MRshow
1014 2123 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 2123 M
[ [(Helvetica) 260.0 0.0 true true (8)]
] -86.7 MRshow
1014 2657 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 2657 M
[ [(Helvetica) 260.0 0.0 true true (9)]
] -86.7 MRshow
1014 3191 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 3191 M
[ [(Helvetica) 260.0 0.0 true true (10)]
] -86.7 MRshow
1014 3726 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 3726 M
[ [(Helvetica) 260.0 0.0 true true (11)]
] -86.7 MRshow
1014 4260 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 4260 M
[ [(Helvetica) 260.0 0.0 true true (12)]
] -86.7 MRshow
1493 520 M
0 63 V
 stroke
1493 260 M
[ /Helvetica-Oblique reencodeISO def
[(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=1)]
] -93.3 MCshow
3886 520 M
0 63 V
 stroke
3886 260 M
[ [(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=2)]
] -93.3 MCshow
6279 520 M
0 63 V
 stroke
6279 260 M
[ [(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=3)]
] -93.3 MCshow
1.000 UL
LTb
1014 520 M
5744 0 V
0 3740 V
-5744 0 V
0 -3740 V
 stroke
260 2390 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica-Oblique) 260.0 0.0 true true (G)]
[(Helvetica) 260.0 0.0 true true (  )]
[(Helvetica) 260.0 0.0 true true (\(dB\))]
] -86.7 MCshow
grestore
3886 4650 M
[ /Times-Roman reencodeISO def
[(Times-Roman) 280.0 0.0 true true (\(b\))]
] -93.3 MCshow
4843 2978 M
[ [(Helvetica) 240.0 0.0 true true (RTRL)]
] -80.0 MLshow
4843 3699 M
[ [(Helvetica) 240.0 0.0 true true (DEKF)]
] -80.0 MLshow
1971 1963 M
[ [(Helvetica) 240.0 0.0 true true (RTRL+LMS)]
] -80.0 MLshow
1971 1482 M
[ [(Helvetica) 240.0 0.0 true true (DEKF+LMS)]
] -80.0 MLshow
4843 1215 M
[ [(Helvetica) 240.0 0.0 true true (DEKF+RLS)]
] -80.0 MLshow
2.000 UP
1.000 UL
LT2
1493 3181 M
2393 69 V
6279 3111 L
1493 3181 C5
3886 3250 C5
6279 3111 C5
2.000 UP
1.000 UL
LT2
1493 3549 M
2393 235 V
2393 182 V
1493 3549 Star
3886 3784 Star
6279 3966 Star
2.000 UP
1.000 UL
LT4
1493 1786 M
2393 6 V
2393 -38 V
1493 1786 BoxF
3886 1792 BoxF
6279 1754 BoxF
2.000 UP
1.000 UL
LT2
1493 1706 M
2393 -11 V
2393 -37 V
1493 1706 Dia
3886 1695 Dia
6279 1658 Dia
2.000 UP
1.000 UL
LT3
1493 969 M
2393 -6 V
2393 70 V
1493 969 Box
3886 963 Box
6279 1033 Box
1.000 UL
LT4
1014 905 M
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica-Oblique Helvetica

%%EndDocument
 @endspecial 487 1792 a Fh(Figure)28 b(2:)40 b(Prediction)29
b(gains)g(for)g(signal)g(1:)39 b(\(a\))29 b(SRN,)e(\(b\))g(REPN.)h
(Constan)n(t)g(line)h(repre-)487 1883 y(sen)n(ts)c(baseline)i
(reference.)611 2068 y Fp(T)-7 b(ables)26 b(and)f(graphs)g(indicate)h
(the)h(real-time)e(training)g(algorithms)g(used)h(for)f(the)487
2168 y(RNNs)g(and)g(for)g(the)h(linear)e(\014lter)i(\(if)g(an)n(y\))e
(separated)g(b)n(y)h(a)g(plus)h(sign.)35 b(The)26 b(order)e(of)487
2267 y(the)k(linear)e(\014lters)i(is)f(in)h(all)f(cases)g
Fm(q)f Fp(=)d(12.)611 2367 y(The)e(results)f(when)h(using)f(the)i
(predictors)d(based)h(on)h(SRN)g(and)g(REPN)f(with)h
Fm(N)32 b Fp(=)487 2467 y(5)27 b(are)f(illustrated)h(in)h(Figs.)f(2)g
(to)g(4)g(for)g(di\013eren)n(t)g(v)-5 b(alues)27 b(of)h(the)g(input)g
(order)e Fm(p)p Fp(.)36 b(The)487 2566 y(parameters)27
b(in)i(these)g(cases)f(are)g(0)p Fm(:)p Fp(3)g(for)h(the)g(R)-7
b(TRL)30 b(learning)e(rate)g(\(no)h(additional)487 2666
y(momen)n(tum)h(term)g(w)n(as)f(used\),)i(0)p Fm(:)p
Fp(2)e(for)g(the)i(LMS)f(adaptation)f(constan)n(t,)h(1)g(for)f(the)487
2766 y(forgetting)35 b(factors)f(in)j(RLS)f(and)f(DEKF)h(\(no)g
(forgetting:)53 b(v)-5 b(alues)35 b(under)h(1)f(mak)n(e)487
2865 y(them)g(su\013er)f(from)h(instabilit)n(y\),)h(and)f(1000)e(for)h
(the)h(initial)g(diagonal)e(elemen)n(ts)i(of)487 2965
y(the)f(correlation)d(matrices)i(of)h(RLS)g(and)f(DEKF.)h(The)g(rest)f
(of)g(the)i(parameters)d(of)487 3064 y(DEKF)27 b(w)n(ere)g(set)g(as)g
(prop)r(osed)g(in)h([8)o(,)g(p.)g(771].)611 3164 y(The)21
b(v)-5 b(alue)20 b Fm(N)32 b Fp(=)22 b(5)e(and)h(those)f(of)g(the)h
(input)g(order)e Fm(p)k Fp(=)g(1)p Fm(;)14 b Fp(2)p Fm(;)g
Fp(3)k(are)i(c)n(hosen)f(so)h(that)487 3264 y(the)27
b(n)n(um)n(b)r(er)g(of)g(learnable)f(parameters)f(is)i(comparable)f(to)
h(that)g(used)g(b)n(y)g(Baltersee)487 3363 y(and)c(Cham)n(b)r(ers)g([1)
o(],)i(who)e(consider)g(PRNNs)g(with)h(around)f(35)g(adjustable)g(w)n
(eigh)n(ts.)3214 3333 y Fk(5)487 3463 y Fp(An)n(yw)n(a)n(y)-7
b(,)19 b(SRNs)g(and)g(REPNs)g(with)g(di\013eren)n(t)g(n)n(um)n(b)r(er)g
(of)g(state)g(neurons)f(giv)n(e)g(results)487 3563 y(\(not)27
b(sho)n(wn\))f(whic)n(h)g(do)h(not)f(v)-5 b(ary)26 b(signi\014can)n
(tly)g(from)g(those)g(presen)n(ted)g(for)g Fm(N)32 b
Fp(=)23 b(5;)487 3662 y(for)37 b(example,)j(with)e Fm(N)49
b Fp(=)40 b(1,)f(the)g(results)e(using)g(R)-7 b(TRL)38
b(are)f(appro)n(ximately)f(the)487 3762 y(same,)27 b(whereas)g(those)h
(using)f(DEKF)h(are)f(1dB)h(b)r(elo)n(w;)g(with)g Fm(N)33
b Fp(=)23 b(10,)k(R)-7 b(TRL)29 b(giv)n(es)487 3861 y(again)c(similar)g
(PGs,)h(whereas)f(DEKF)h(impro)n(v)n(es)f(them)i(v)n(ery)e(little)i
(\(b)r(et)n(w)n(een)g(0)f(and)487 3961 y(0.5dB,)g(dep)r(ending)i(on)g
(the)g(particular)e(signal)h(and)g(arc)n(hitecture\).)611
4061 y(Finally)-7 b(,)37 b(the)e(PGs)f(for)g(a)g(simple)h(\014lter)g
(taking)k(^)-47 b Fm(u)o Fp([)p Fm(t)24 b Fp(+)e(1])35
b(=)f Fm(u)p Fp([)p Fm(t)p Fp(])h(are)e(sho)n(wn)h(as)487
4160 y(constan)n(t)g(lines)g(in)h(Figs.)g(2-4.)57 b(This)34
b(stands)h(for)f(the)h(simplest)g(w)n(a)n(y)e(of)i(predicting)487
4260 y(next)27 b(sample)h(and)f(is)h(considered)e(here)h(as)g(a)g
(baseline)g(reference.)487 4559 y Fn(DISCUSSION)487 4758
y Fp(Among)40 b(the)g(three)h(recurren)n(t)e(arc)n(hitectures)g
(studied,)44 b(only)c(the)h(DEKF-trained)487 4858 y(PRNN)23
b(follo)n(w)n(ed)g(b)n(y)g(a)g(RLS-trained)g(linear)g(\014lter)h
(clearly)e(surpasses)g(\(b)r(et)n(w)n(een)i(1dB)487 4957
y(and)d(2dB)h(higher\))f(the)h(PG)g(of)g(a)f(12-tap)g(linear)g
(\014lter)g(trained)h(with)g(RLS.)g(The)g(rest)g(of)p
487 5010 1106 4 v 579 5064 a Fj(5)614 5088 y Fi(The)e(n)n(um)n(b)r(er)f
(of)h(w)n(eigh)n(ts,)h(including)f(biases,)g(of)g(a)g(single-output)h
Fb(p)p Fi(-th)f(order)f(SRN)h(is)g(\()p Fb(p)8 b Fi(+)g
Fb(N)16 b Fi(+)487 5166 y(2\))p Fb(N)7 b Fi(;)24 b(in)f(the)h(case)h
(of)e(a)h(single-output)h Fb(p)p Fi(-th)e(order)g(REPN,)g(it)h(is)f(\()
p Fb(p)15 b Fi(+)h Fb(N)23 b Fi(+)15 b(2\))p Fb(N)24
b Fi(+)15 b Fb(p)h Fi(+)f(1.)p eop
%%Page: 6 6
6 5 bop 487 1665 a @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1700 @rwi @setspecial
%%BeginDocument: is2srn.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: is2srn.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Thu Sep 13 21:14:35 2001
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -86 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Helvetica reencodeISO def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1014 520 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 520 M
[ [(Helvetica) 260.0 0.0 true true (4)]
] -86.7 MRshow
1014 1019 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 1019 M
[ [(Helvetica) 260.0 0.0 true true (5)]
] -86.7 MRshow
1014 1517 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 1517 M
[ [(Helvetica) 260.0 0.0 true true (6)]
] -86.7 MRshow
1014 2016 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 2016 M
[ [(Helvetica) 260.0 0.0 true true (7)]
] -86.7 MRshow
1014 2515 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 2515 M
[ [(Helvetica) 260.0 0.0 true true (8)]
] -86.7 MRshow
1014 3013 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 3013 M
[ [(Helvetica) 260.0 0.0 true true (9)]
] -86.7 MRshow
1014 3512 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 3512 M
[ [(Helvetica) 260.0 0.0 true true (10)]
] -86.7 MRshow
1014 4011 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 4011 M
[ [(Helvetica) 260.0 0.0 true true (11)]
] -86.7 MRshow
1493 520 M
0 63 V
 stroke
1493 260 M
[ /Helvetica-Oblique reencodeISO def
[(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=1)]
] -93.3 MCshow
3886 520 M
0 63 V
 stroke
3886 260 M
[ [(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=2)]
] -93.3 MCshow
6279 520 M
0 63 V
 stroke
6279 260 M
[ [(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=3)]
] -93.3 MCshow
1.000 UL
LTb
1014 520 M
5744 0 V
0 3740 V
-5744 0 V
0 -3740 V
 stroke
260 2390 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica-Oblique) 260.0 0.0 true true (G)]
[(Helvetica) 260.0 0.0 true true (  )]
[(Helvetica) 260.0 0.0 true true (\(dB\))]
] -86.7 MCshow
grestore
3886 4650 M
[ /Times-Roman reencodeISO def
[(Times-Roman) 280.0 0.0 true true (\(a\))]
] -93.3 MCshow
4843 2889 M
[ [(Helvetica) 240.0 0.0 true true (RTRL)]
] -80.0 MLshow
4843 3811 M
[ [(Helvetica) 240.0 0.0 true true (DEKF)]
] -80.0 MLshow
1971 1717 M
[ [(Helvetica) 240.0 0.0 true true (RTRL+LMS)]
] -80.0 MLshow
1971 2315 M
[ [(Helvetica) 240.0 0.0 true true (DEKF+LMS)]
] -80.0 MLshow
4843 1193 M
[ [(Helvetica) 240.0 0.0 true true (DEKF+RLS)]
] -80.0 MLshow
2.000 UP
1.000 UL
LT2
1493 3193 M
3886 3063 L
2393 -40 V
1493 3193 C5
3886 3063 C5
6279 3023 C5
2.000 UP
1.000 UL
LT2
1493 3936 M
2393 30 V
2393 65 V
1493 3936 Star
3886 3966 Star
6279 4031 Star
2.000 UP
1.000 UL
LT4
1493 1946 M
2393 90 V
2393 -30 V
1493 1946 BoxF
3886 2036 BoxF
6279 2006 BoxF
2.000 UP
1.000 UL
LT2
1493 1986 M
2393 50 V
2393 -90 V
1493 1986 Dia
3886 2036 Dia
6279 1946 Dia
2.000 UP
1.000 UL
LT3
1493 1004 M
2393 30 V
2393 25 V
1493 1004 Box
3886 1034 Box
6279 1059 Box
1.000 UL
LT4
1014 2141 M
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica-Oblique Helvetica

%%EndDocument
 @endspecial 1438 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1700 @rwi @setspecial
%%BeginDocument: is2repn.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: is2repn.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Thu Sep 13 21:14:35 2001
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -86 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Helvetica reencodeISO def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
1014 520 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 520 M
[ [(Helvetica) 260.0 0.0 true true (4)]
] -86.7 MRshow
1014 1019 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 1019 M
[ [(Helvetica) 260.0 0.0 true true (5)]
] -86.7 MRshow
1014 1517 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 1517 M
[ [(Helvetica) 260.0 0.0 true true (6)]
] -86.7 MRshow
1014 2016 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 2016 M
[ [(Helvetica) 260.0 0.0 true true (7)]
] -86.7 MRshow
1014 2515 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 2515 M
[ [(Helvetica) 260.0 0.0 true true (8)]
] -86.7 MRshow
1014 3013 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 3013 M
[ [(Helvetica) 260.0 0.0 true true (9)]
] -86.7 MRshow
1014 3512 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 3512 M
[ [(Helvetica) 260.0 0.0 true true (10)]
] -86.7 MRshow
1014 4011 M
63 0 V
5681 0 R
-63 0 V
 stroke
858 4011 M
[ [(Helvetica) 260.0 0.0 true true (11)]
] -86.7 MRshow
1493 520 M
0 63 V
 stroke
1493 260 M
[ /Helvetica-Oblique reencodeISO def
[(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=1)]
] -93.3 MCshow
3886 520 M
0 63 V
 stroke
3886 260 M
[ [(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=2)]
] -93.3 MCshow
6279 520 M
0 63 V
 stroke
6279 260 M
[ [(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=3)]
] -93.3 MCshow
1.000 UL
LTb
1014 520 M
5744 0 V
0 3740 V
-5744 0 V
0 -3740 V
 stroke
260 2390 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica-Oblique) 260.0 0.0 true true (G)]
[(Helvetica) 260.0 0.0 true true (  )]
[(Helvetica) 260.0 0.0 true true (\(dB\))]
] -86.7 MCshow
grestore
3886 4650 M
[ /Times-Roman reencodeISO def
[(Times-Roman) 280.0 0.0 true true (\(b\))]
] -93.3 MCshow
4843 2814 M
[ [(Helvetica) 240.0 0.0 true true (RTRL)]
] -80.0 MLshow
4843 3662 M
[ [(Helvetica) 240.0 0.0 true true (DEKF)]
] -80.0 MLshow
1971 2315 M
[ [(Helvetica) 240.0 0.0 true true (RTRL+LMS)]
] -80.0 MLshow
1971 1717 M
[ [(Helvetica) 240.0 0.0 true true (DEKF+LMS)]
] -80.0 MLshow
4843 1193 M
[ [(Helvetica) 240.0 0.0 true true (DEKF+RLS)]
] -80.0 MLshow
2.000 UP
1.000 UL
LT2
1493 2764 M
2393 394 V
6279 2834 L
1493 2764 C5
3886 3158 C5
6279 2834 C5
2.000 UP
1.000 UL
LT2
1493 3716 M
2393 30 V
2393 140 V
1493 3716 Star
3886 3746 Star
6279 3886 Star
2.000 UP
1.000 UL
LT4
1493 2021 M
2393 20 V
2393 10 V
1493 2021 BoxF
3886 2041 BoxF
6279 2051 BoxF
2.000 UP
1.000 UL
LT2
1493 1941 M
2393 -15 V
2393 -60 V
1493 1941 Dia
3886 1926 Dia
6279 1866 Dia
2.000 UP
1.000 UL
LT3
1493 934 M
2393 25 V
2393 75 V
1493 934 Box
3886 959 Box
6279 1034 Box
1.000 UL
LT4
1014 2141 M
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
59 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
58 0 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica-Oblique Helvetica

%%EndDocument
 @endspecial 487 1792 a Fh(Figure)28 b(3:)40 b(Prediction)29
b(gains)g(for)g(signal)g(2:)39 b(\(a\))29 b(SRN,)e(\(b\))g(REPN.)h
(Constan)n(t)g(line)h(repre-)487 1883 y(sen)n(ts)c(baseline)i
(reference.)487 2068 y Fp(neural)g(con\014gurations)f(\(cascaded)h(or)g
(not\))h(do)f(w)n(orse)g(than)h(a)f(simple)h(RLS-trained)487
2168 y(FIR)g(\014lter)f(with)h(a)f(smaller)g(n)n(um)n(b)r(er)g(of)h
(parameters.)611 2267 y(When)e(using)g(SRN)g(or)f(REPN)g(alone,)g(DEKF)
g(yields)h(m)n(uc)n(h)f(b)r(etter)h(results)f(than)487
2367 y(standard)c(R)-7 b(TRL)22 b(algorithm:)33 b(DEKF)21
b(attains)h(PGs)f(b)r(et)n(w)n(een)h(1dB)g(and)g(3dB)f(higher.)487
2467 y(The)36 b(results)g(with)i(b)r(oth)f(arc)n(hitectures)e(and)h
(DEKF)h(consisten)n(tly)f(con\014rm)g(those)487 2566
y(of)i(previous)f(w)n(orks)g([4])h(where)g(the)h(impro)n(v)n(emen)n(t)e
(of)i(nonlinear)e(predictors)g(o)n(v)n(er)487 2666 y(LMS-trained)23
b(linear)g(predictors)g(are)g(rep)r(orted)g(to)h(b)r(e)g(around)f(3dB.)
g(Ho)n(w)n(ev)n(er,)g(b)r(oth)487 2766 y(training)j(algorithms)h(do)g
(not)h(reac)n(h)e(the)i(PGs)f(of)h(a)f(RLS-trained)g(FIR)h(\014lter.)
611 2865 y(In)n(terestingly)-7 b(,)24 b(cascading)f(nonlinear)g
(predictors)g(based)h(on)g(SRN)h(or)e(REPN)h(and)487
2965 y(linear)33 b(predictors)f(pro)r(duce)i(w)n(orse)e(results)h(than)
h(using)g(the)g(nonlinear)f(predictors)487 3064 y(alone.)72
b(Results)39 b(with)h(these)g(cascaded)e(forms)h(are)g(v)n(ery)f
(negativ)n(e)h(as)g(compared)487 3164 y(with)28 b(baseline)f(\(a)h
(predictor)f(repro)r(ducing)f(curren)n(t)h(sample\);)h(in)g(fact,)g
(for)f(signals)g(2)487 3264 y(and)k(3)h(they)g(are)e(ev)n(en)i(w)n
(orse.)47 b(Hence,)33 b(the)f(follo)n(wing)f(situation)h(arises:)44
b(it)32 b(can)f(b)r(e)487 3363 y(considered)25 b(that)i(w)n(e)f(ha)n(v)
n(e)f(t)n(w)n(o)h(t)n(yp)r(es)g(of)h(nonlinear)e(predictors,)h
Fm(P)38 b Fp(\(a)27 b(PRNN\))g(and)487 3463 y Fm(S)g
Fp(\(a)22 b(SRN)h(or)f(a)g(REPN,)g(whic)n(h)h(presen)n(t)f(similar)f(b)
r(eha)n(viour\),)i(and)f(that,)i(optionally)-7 b(,)487
3563 y(w)n(e)21 b(feed)h(a)f(linear)g(predictor)g Fm(L)g
Fp(with)h(their)g(output.)35 b(Let)22 b Fm(G)2372 3575
y Fe(P)2428 3563 y Fp(,)h Fm(G)2539 3575 y Fe(S)2609
3563 y Fp(denote)e(the)h(PGs)g(of)487 3662 y(the)27 b(nonlinear)f
(predictors)g(alone,)h Fm(G)1686 3674 y Fe(L)1763 3662
y Fp(the)h(PG)f(of)g(the)g(linear)g(predictor,)f(and)h
Fm(G)3126 3674 y Fe(P)9 b(L)3227 3662 y Fp(,)487 3762
y Fm(G)552 3774 y Fe(S)s(L)676 3762 y Fp(the)31 b(PGs)e(of)i(the)f(h)n
(ybrid)g(cascaded)f(mo)r(del)i(com)n(bining)f(one)f(of)i(the)f
(nonlinear)487 3861 y(predictors)c(and)h(the)h(linear)f(one.)37
b(F)-7 b(rom)27 b(the)h(previous)e(results)h(w)n(e)h(can)f(write:)3033
3831 y Fk(6)1610 4025 y Fm(G)1675 4037 y Fe(P)9 b(L)1859
4025 y Fm(>)83 b(G)2072 4037 y Fe(S)3144 4025 y Fp(\(2\))1610
4150 y Fm(G)1675 4162 y Fe(P)9 b(L)1859 4150 y Fm(>)83
b(G)2072 4162 y Fe(P)3144 4150 y Fp(\(3\))1617 4274 y
Fm(G)1682 4286 y Fe(S)s(L)1859 4274 y Fm(<)g(G)2072 4286
y Fe(S)3144 4274 y Fp(\(4\))1610 4399 y Fm(G)1675 4411
y Fe(P)9 b(L)1859 4399 y Fm(>)83 b(G)2072 4411 y Fe(L)3144
4399 y Fp(\(5\))1617 4523 y Fm(G)1682 4535 y Fe(S)s(L)1859
4523 y Fm(<)g(G)2072 4535 y Fe(L)3144 4523 y Fp(\(6\))611
4687 y(F)-7 b(rom)25 b(\(5\))g(and)f(\(6\),)i(w)n(e)e(conclude)h(that)g
Fm(P)37 b Fp(cancels)24 b(accurately)f(nonlinearities)h(in)487
4787 y(the)29 b(signal)g(and)g(exploits)g(its)g(linear)g
(relationships,)g(whereas,)f(con)n(v)n(ersely)-7 b(,)28
b Fm(S)34 b Fp(seems)487 4886 y(to)29 b(amplify)g(nonlinearities,)g(lo)
n(w)n(ering)e(the)j(p)r(erformance)e(of)h(the)g(linear)g(\014lter.)41
b(This)487 4986 y(seems)27 b(an)g(imp)r(ortan)n(t)g(asp)r(ect)h(w)n
(orthing)e(a)h(deep)r(er)h(study)-7 b(.)p 487 5031 1106
4 v 579 5085 a Fj(6)614 5109 y Fi(Equation)25 b(\(3\))h(should)f(b)r(e)
g(true,)g(since)g(Baltersee)g(and)h(Cham)n(b)r(ers)d(do)i(not)h(sho)n
(w)f(results)f(for)g(a)487 5187 y(PRNN)f(alone.)p eop
%%Page: 7 7
7 6 bop 487 1665 a @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1700 @rwi @setspecial
%%BeginDocument: is3srn.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: is3srn.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Thu Sep 13 21:14:35 2001
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -86 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Helvetica reencodeISO def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
858 520 M
63 0 V
5837 0 R
-63 0 V
 stroke
702 520 M
[ [(Helvetica) 260.0 0.0 true true (3)]
] -86.7 MRshow
858 1143 M
63 0 V
5837 0 R
-63 0 V
 stroke
702 1143 M
[ [(Helvetica) 260.0 0.0 true true (4)]
] -86.7 MRshow
858 1767 M
63 0 V
5837 0 R
-63 0 V
 stroke
702 1767 M
[ [(Helvetica) 260.0 0.0 true true (5)]
] -86.7 MRshow
858 2390 M
63 0 V
5837 0 R
-63 0 V
 stroke
702 2390 M
[ [(Helvetica) 260.0 0.0 true true (6)]
] -86.7 MRshow
858 3013 M
63 0 V
5837 0 R
-63 0 V
 stroke
702 3013 M
[ [(Helvetica) 260.0 0.0 true true (7)]
] -86.7 MRshow
858 3637 M
63 0 V
5837 0 R
-63 0 V
 stroke
702 3637 M
[ [(Helvetica) 260.0 0.0 true true (8)]
] -86.7 MRshow
858 4260 M
63 0 V
5837 0 R
-63 0 V
 stroke
702 4260 M
[ [(Helvetica) 260.0 0.0 true true (9)]
] -86.7 MRshow
1350 520 M
0 63 V
 stroke
1350 260 M
[ /Helvetica-Oblique reencodeISO def
[(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=1)]
] -93.3 MCshow
3808 520 M
0 63 V
 stroke
3808 260 M
[ [(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=2)]
] -93.3 MCshow
6266 520 M
0 63 V
 stroke
6266 260 M
[ [(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=3)]
] -93.3 MCshow
1.000 UL
LTb
858 520 M
5900 0 V
0 3740 V
-5900 0 V
858 520 L
 stroke
260 2390 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica-Oblique) 260.0 0.0 true true (G)]
[(Helvetica) 260.0 0.0 true true (  )]
[(Helvetica) 260.0 0.0 true true (\(dB\))]
] -86.7 MCshow
grestore
3808 4650 M
[ /Times-Roman reencodeISO def
[(Times-Roman) 280.0 0.0 true true (\(a\))]
] -93.3 MCshow
4791 2141 M
[ [(Helvetica) 240.0 0.0 true true (RTRL)]
] -80.0 MLshow
4791 3948 M
[ [(Helvetica) 240.0 0.0 true true (DEKF)]
] -80.0 MLshow
4791 695 M
[ [(Helvetica) 240.0 0.0 true true (RTRL+LMS)]
] -80.0 MLshow
1841 1361 M
[ [(Helvetica) 240.0 0.0 true true (DEKF+LMS)]
] -80.0 MLshow
4791 1143 M
[ [(Helvetica) 240.0 0.0 true true (DEKF+RLS)]
] -80.0 MLshow
2.000 UP
1.000 UL
LT2
1350 2851 M
3808 2484 L
6266 2309 L
1350 2851 C5
3808 2484 C5
6266 2309 C5
2.000 UP
1.000 UL
LT2
1350 3867 M
2458 200 V
2458 156 V
1350 3867 Star
3808 4067 Star
6266 4223 Star
2.000 UP
1.000 UL
LT4
1350 875 M
3808 857 L
2458 25 V
1350 875 BoxF
3808 857 BoxF
6266 882 BoxF
2.000 UP
1.000 UL
LT2
1350 1243 M
2458 -25 V
2458 106 V
1350 1243 Dia
3808 1218 Dia
6266 1324 Dia
2.000 UP
1.000 UL
LT3
1350 975 M
3808 950 L
2458 75 V
1350 975 Box
3808 950 Box
6266 1025 Box
1.000 UL
LT4
858 1524 M
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica-Oblique Helvetica

%%EndDocument
 @endspecial 1438 w @beginspecial 50 @llx 50 @lly 410
@urx 302 @ury 1700 @rwi @setspecial
%%BeginDocument: is3repn.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: is3repn.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Thu Sep 13 21:14:35 2001
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -86 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/Helvetica reencodeISO def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 260 scalefont setfont
1.000 UL
LTb
858 520 M
63 0 V
5837 0 R
-63 0 V
 stroke
702 520 M
[ [(Helvetica) 260.0 0.0 true true (3)]
] -86.7 MRshow
858 1143 M
63 0 V
5837 0 R
-63 0 V
 stroke
702 1143 M
[ [(Helvetica) 260.0 0.0 true true (4)]
] -86.7 MRshow
858 1767 M
63 0 V
5837 0 R
-63 0 V
 stroke
702 1767 M
[ [(Helvetica) 260.0 0.0 true true (5)]
] -86.7 MRshow
858 2390 M
63 0 V
5837 0 R
-63 0 V
 stroke
702 2390 M
[ [(Helvetica) 260.0 0.0 true true (6)]
] -86.7 MRshow
858 3013 M
63 0 V
5837 0 R
-63 0 V
 stroke
702 3013 M
[ [(Helvetica) 260.0 0.0 true true (7)]
] -86.7 MRshow
858 3637 M
63 0 V
5837 0 R
-63 0 V
 stroke
702 3637 M
[ [(Helvetica) 260.0 0.0 true true (8)]
] -86.7 MRshow
858 4260 M
63 0 V
5837 0 R
-63 0 V
 stroke
702 4260 M
[ [(Helvetica) 260.0 0.0 true true (9)]
] -86.7 MRshow
1350 520 M
0 63 V
 stroke
1350 260 M
[ /Helvetica-Oblique reencodeISO def
[(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=1)]
] -93.3 MCshow
3808 520 M
0 63 V
 stroke
3808 260 M
[ [(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=2)]
] -93.3 MCshow
6266 520 M
0 63 V
 stroke
6266 260 M
[ [(Helvetica-Oblique) 280.0 0.0 true true (p)]
[(Helvetica) 280.0 0.0 true true (=3)]
] -93.3 MCshow
1.000 UL
LTb
858 520 M
5900 0 V
0 3740 V
-5900 0 V
858 520 L
 stroke
260 2390 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica-Oblique) 260.0 0.0 true true (G)]
[(Helvetica) 260.0 0.0 true true (  )]
[(Helvetica) 260.0 0.0 true true (\(dB\))]
] -86.7 MCshow
grestore
3808 4650 M
[ /Times-Roman reencodeISO def
[(Times-Roman) 280.0 0.0 true true (\(b\))]
] -93.3 MCshow
4791 2078 M
[ [(Helvetica) 240.0 0.0 true true (RTRL)]
] -80.0 MLshow
4791 3948 M
[ [(Helvetica) 240.0 0.0 true true (DEKF)]
] -80.0 MLshow
4791 1050 M
[ [(Helvetica) 240.0 0.0 true true (RTRL+LMS)]
] -80.0 MLshow
1841 1355 M
[ [(Helvetica) 240.0 0.0 true true (DEKF+LMS)]
] -80.0 MLshow
4791 657 M
[ [(Helvetica) 240.0 0.0 true true (DEKF+RLS)]
] -80.0 MLshow
2.000 UP
1.000 UL
LT2
1350 2222 M
2458 43 V
2458 -6 V
1350 2222 C5
3808 2265 C5
6266 2259 C5
2.000 UP
1.000 UL
LT2
1350 3743 M
2458 274 V
2458 174 V
1350 3743 Star
3808 4017 Star
6266 4191 Star
2.000 UP
1.000 UL
LT4
1350 925 M
3808 906 L
6266 888 L
1350 925 BoxF
3808 906 BoxF
6266 888 BoxF
2.000 UP
1.000 UL
LT2
1350 1237 M
3808 1137 L
2458 94 V
1350 1237 Dia
3808 1137 Dia
6266 1231 Dia
2.000 UP
1.000 UL
LT3
1350 882 M
3808 801 L
2458 93 V
1350 882 Box
3808 801 Box
6266 894 Box
1.000 UL
LT4
858 1524 M
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
60 0 V
59 0 V
60 0 V
59 0 V
60 0 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica-Oblique Helvetica

%%EndDocument
 @endspecial 487 1792 a Fh(Figure)28 b(4:)40 b(Prediction)29
b(gains)g(for)g(signal)g(3:)39 b(\(a\))29 b(SRN,)e(\(b\))g(REPN.)h
(Constan)n(t)g(line)h(repre-)487 1883 y(sen)n(ts)c(baseline)i
(reference.)611 2068 y Fp(F)-7 b(rom)20 b(\(3\))g(and)g(\(4\),)i(w)n(e)
e(infer)g(that)h(no)e(cascaded)g(con\014guration)g(is)h(appropiate)f
(for)487 2168 y(SRN)28 b(or)f(REPN,)g(whereas)g(it)h(is)g(highly)f
(recommended)g(for)h(PRNN.)g(Equations)e(\(2\))487 2267
y(and)32 b(\(4\))h(state)f(the)h(sup)r(eriorit)n(y)f(of)g(PRNN)h(in)g
(cascaded)e(form)h(o)n(v)n(er)f(the)i(other)f(re-)487
2367 y(curren)n(t)26 b(mo)r(dels.)611 2467 y(When)h(comparing)d(REPN)i
(and)f(SRN,)i(the)f(later)g(giv)n(es)f(sligh)n(tly)g(higher)g(PGs.)36
b(A)487 2566 y(p)r(ossible)e(explanation)g(is)g(that)h(a)f(correct)f
(use)i(of)f(state)h(information)f(is)g(necessary)487
2666 y(when)j(using)g(SRN)g(arc)n(hitecture,)i(whereas)d(REPN)g(ma)n(y)
h(b)r(e)g(ignoring)f(this)h(infor-)487 2766 y(mation)h(and)g(concen)n
(trating)f(exclusiv)n(ely)g(on)h(direct)g(connections)g(from)g(input)h
(to)487 2865 y(output)32 b(la)n(y)n(er.)961 2835 y Fk(7)1047
2865 y Fp(The)g(p)r(ositiv)n(e)f(dep)r(endence)h(on)g(the)g(input)h
(order)e Fm(p)h Fp(is)f(clear)g(when)487 2965 y(using)c(DEKF)g(but)i
(is)e(less)h(ob)n(vious)e(in)i(the)g(case)f(of)g(R)-7
b(TRL)28 b(\(in)h(fact,)e(in)h(some)g(cases,)487 3064
y(increasing)e Fm(p)h Fp(decreases)f(the)i(corresp)r(onding)e
(prediction)h(gain\).)611 3164 y(Finally)-7 b(,)23 b(w)n(e)e(also)g(em)
n(b)r(edded)h(SRN)g(and)g(REPN)f(in)h(a)f Fl(r)l(e)l(al)31
b Fp(sp)r(eec)n(h)21 b(co)r(ding)h(system)487 3264 y(follo)n(wing)35
b(the)j(G721)d(adaptiv)n(e)h(di\013eren)n(tial)g(pulse)h(co)r(de)g(mo)r
(dulation)g(\(ADPCM\))487 3363 y(standard)24 b([3)o(].)37
b(W)-7 b(e)25 b(replaced)g(the)g(in\014nite-impulse)h(resp)r(onse)e
(\(I)r(IR\))j(predictor)d(sp)r(ec-)487 3463 y(i\014ed)h(b)n(y)f(G721)g
(\(t)n(w)n(o)g(p)r(oles)g(and)h(six)g(zeros\))e(with)j(SRNs)f(and)f
(REPNs,)h(and)f(k)n(ept)h(the)487 3563 y(standard's)32
b(adaptiv)n(e)h(quan)n(tizer.)55 b(The)34 b(new)g(results)f(con\014rm)g
(the)h(previous)f(ones:)487 3662 y(in)38 b(this)h(case,)i(only)d(DEKF)h
(attains)f(PGs)g(similar)g(to)g(those)g(of)h(the)g(original)e(I)r(IR)
487 3762 y(predictor)26 b(and)i(R)-7 b(TRL)27 b(giv)n(es)g(m)n(uc)n(h)g
(lo)n(w)n(er)f(gains.)487 4061 y Fn(CONCLUDING)32 b(REMARKS)487
4260 y Fp(When)f(the)g(output)g(of)g(a)f(DEKF-trained)g(PRNN)h(is)g
(pro)r(cessed)e(b)n(y)i(a)f(RLS-trained)487 4360 y(linear)21
b(\014lter,)i(the)g(resulting)f(PGs)f(surpass)g(those)h(obtained)g
(with)h(a)f(RLS-trained)f(lin-)487 4459 y(ear)e(\014lter)i(alone.)33
b(This)21 b(pap)r(er)f(studies)g(whether)h(this)g(b)r(eha)n(viour)e
(can)h(b)r(e)h(extended)g(to)487 4559 y(the)e(case)g(of)g(other)g
(classical)f(RNNs.)34 b(Results)20 b(are)e(sho)n(wn)g(for)h(SRN)h(and)f
(REPN)g(arc)n(hi-)487 4658 y(tectures,)26 b(but)g(w)n(e)g(also)f(exp)r
(erimen)n(ted)g(with)i(other)e(recurren)n(t)g(net)n(w)n(orks.)34
b(Although)487 4758 y(these)28 b(RNNs)h(giv)n(e)f(easily)g(higher)g
(prediction)g(gains)g(than)h(those)f(of)h(a)f(LMS-trained)487
4858 y(linear)34 b(\014lter,)j(the)e(b)r(est)h(results,)g(attainable)f
(via)f(the)h(DEKF)g(training)g(algorithm,)487 4957 y(are)26
b(similar)h(\(but)i(lo)n(w)n(er\))d(to)h(those)h(of)f(a)g(RLS-trained)g
(linear)g(\014lter.)p 487 5010 1106 4 v 579 5064 a Fj(7)614
5088 y Fi(The)f(output)i(of)e(a)g(REPN)g(is)g(computed)g(from)f(the)i
(net)n(w)n(ork's)f(state)i(and)e(the)h(curren)n(t)g(input,)487
5166 y(whereas)d(a)f(SRN)h(computes)g(it)g(solely)f(from)f(the)i(net)n
(w)n(ork's)g(state.)p eop
%%Page: 8 8
8 7 bop 611 664 a Fp(This)36 b(pap)r(er)f(mak)n(es)g(eviden)n(t)h(a)g
(notorious)e(adv)-5 b(an)n(tage)34 b(of)i(DEKF)g(training)f(al-)487
764 y(gorithm)30 b(o)n(v)n(er)g(R)-7 b(TRL.)32 b(Besides)e(that,)j(the)
f(signal)e(predicted)i(b)n(y)f(SRN)h(and)f(REPN)487 863
y(presen)n(ts)g(a)g(stronger)f(nonlinear)h(c)n(haracter)f(than)i(the)h
(actual)e(signal)g(and)h(mak)n(es)f(a)487 963 y(cascaded)j
(con\014guration)h(with)h(a)g(subsequen)n(t)f(linear)h(predictor)e
(unfeasible.)62 b(The)487 1063 y(p)r(erformance)26 b(of)i(PRNN,)g(ho)n
(w)n(ev)n(er,)d(is)j(impro)n(v)n(ed)e(b)n(y)h(the)h(linear)f
(predictor.)611 1162 y(Some)22 b(w)n(orks)f(ha)n(v)n(e)g(detected)i
(serious)e(limitations)h([6,)g(7])g(of)g(RNNs)h(when)f(applied)487
1262 y(to)30 b(nonlinear)f(n)n(umeric)g(prediction)h(tasks.)44
b(The)30 b(\014ndings)g(presen)n(ted)f(in)i(this)f(pap)r(er)487
1362 y(suggest)c(similar)h(conclusions.)487 1660 y Fn(A)m(CKNO)m
(WLEDGEMENTS)487 1860 y Fp(This)i(w)n(ork)e(has)i(b)r(een)g(supp)r
(orted)g(b)n(y)g(the)g(Generalitat)f(V)-7 b(alenciana)28
b(through)h(gran)n(t)487 1959 y(FPI-99-14-268,)j(and)j(b)n(y)f(the)i
(Spanish)f(Comisi\023)-42 b(on)34 b(In)n(terministerial)g(de)h(Ciencia)
g(y)487 2059 y(T)-7 b(ecnolog)e(\023)-32 b(\020a)24 b(through)j(gran)n
(ts)f(TIC97-0941)f(and)i(TIC2000-1599-C02-02)o(.)487
2358 y Fn(REFERENCES)535 2549 y Fh([1])42 b(J.)32 b(Baltersee)g(and)f
(J.)h(A.)e(Cham)n(b)r(ers,)j(\\Non-linear)e(adaptiv)n(e)g(prediction)g
(of)g(sp)r(eec)n(h)657 2640 y(signals)23 b(using)e(a)g(pip)r(elined)g
(recurren)n(t)f(net)n(w)n(ork,")i Fa(IEEE)j(T)-7 b(ransactions)25
b(on)f(Signal)657 2731 y(Pro)r(cessing)p Fh(,)k(v)n(ol.)e(46,)h(no.)f
(8,)g(1998.)535 2823 y([2])42 b(Y.)22 b(Bengio,)i(P)-6
b(.)22 b(Simard)f(and)h(P)-6 b(.)22 b(F)-6 b(rasconi,)24
b(\\Learning)f(long-term)e(dep)r(endencies)h(with)657
2914 y(gradien)n(t)32 b(descen)n(t)e(is)i(di\016cult,")h
Fa(IEEE)j(T)-7 b(ransactions)37 b(on)e(Neural)i(Net)n(w)n(orks)p
Fh(,)657 3005 y(v)n(ol.)26 b(5,)h(no.)f(2,)g(pp.)f(157{166,)k(1994.)535
3097 y([3])42 b(N.)23 b(Ben)n(v)n(en)n(uto,)f(G.)i(Berto)r(cci)g(and)e
(W.)h(R.)f(Daumer,)h(\\The)g(32-kb/s)g(ADPCM)g(co)r(ding)657
3188 y(standard,")k Fa(A)-7 b(T&T)27 b(T)-7 b(ec)n(hnical)30
b(Journal)p Fh(,)d(v)n(ol.)f(2,)g(pp.)g(270{280,)i(1987.)535
3279 y([4])42 b(M.)26 b(Birgmeier,)g(\\Nonlinear)g(prediction)f(of)h
(sp)r(eec)n(h)e(signals)j(using)e(radial)h(basis)g(func-)657
3371 y(tion)18 b(net)n(w)n(orks,")i(in)d Fa(Pro)r(ceedings)22
b(of)f(the)f(Europ)r(ean)h(Signal)h(Pro)r(cessing)g(Con-)657
3462 y(ference,)29 b(EUSIPCO)h(96)p Fh(,)d(T)-6 b(rieste,)27
b(Italy)-6 b(,)25 b(1996.)535 3553 y([5])42 b(J.)j(L.)f(Elman,)k
(\\Finding)c(structure)g(in)g(time,")k Fa(Cognitiv)n(e)j(Science)p
Fh(,)e(v)n(ol.)44 b(14,)657 3645 y(pp.)26 b(179{211,)i(1990.)535
3736 y([6])42 b(F.)c(A.)g(Gers,)k(D.)c(Ec)n(k)f(and)h(J.)g(Sc)n(hmidh)n
(ub)r(er,)h(\\Applying)e(LSTM)h(to)g(time)f(series)657
3827 y(predictable)22 b(through)g(time-windo)n(w)f(approac)n(hes,")j
(in)e Fa(Pro)r(c.)k(ICANN)f(2001,)h(In)n(t.)657 3919
y(Conf.)k(on)f(Arti\014cial)j(Neural)f(Net)n(w)n(orks)p
Fh(,)25 b(Vienna,)h(Austria,)g(2001.)535 4010 y([7])42
b(M.)19 b(Hallas)g(and)e(G.)h(Dor\013ner,)i(\\A)d(comparativ)n(e)h
(study)e(on)i(feedforw)n(ard)h(and)f(recurren)n(t)657
4101 y(neural)27 b(net)n(w)n(orks)g(in)g(time)f(series)h(prediction)g
(using)g(gradien)n(t)g(descen)n(t)g(learning,")h(in)657
4193 y(T)-6 b(rappl,)38 b(R.)c(\(ed.\),)k Fa(Cyb)r(ernetics)j(and)f
(Systems)f(98,)j(Pro)r(ceedings)g(of)e(14th)657 4284
y(Europ)r(ean)g(Meeting)e(on)h(Cyb)r(ernetics)h(and)e(Systems)g
(Researc)n(h)p Fh(,)d(Vienna,)657 4375 y(1998,)28 b(pp.)d(644{647.)535
4467 y([8])42 b(S.)24 b(Ha)n(ykin,)f Fa(Neural)28 b(net)n(w)n(orks:)37
b(a)27 b(comprehensiv)n(e)g(foundation)p Fh(,)f(New)d(Jersey:)657
4558 y(Pren)n(tice-Hall,)k(2nd)e(edn.,)h(1999.)535 4649
y([9])42 b(S.)33 b(Ha)n(ykin)e(and)h(L.)h(Li,)i(\\Non-linear)e(adaptiv)
n(e)f(prediction)h(of)g(non-stationary)g(sig-)657 4741
y(nals,")27 b Fa(IEEE)j(T)-7 b(ransactions)31 b(on)e(Signal)i(Pro)r
(cessing)p Fh(,)d(v)n(ol.)e(43,)h(no.)f(2,)h(1995.)496
4832 y([10])43 b(K.)19 b(S.)h(Narendra)f(and)g(K.)g(P)n(arthasarath)n
(y)-6 b(,)21 b(\\Iden)n(ti\014cation)e(and)g(con)n(trol)h(of)g
(dynamical)657 4923 y(systems)e(using)g(neural)g(net)n(w)n(orks,")i
Fa(IEEE)h(T)-7 b(ransactions)22 b(on)f(Neural)g(Net)n(w)n(orks)p
Fh(,)657 5014 y(v)n(ol.)26 b(1,)h(pp.)e(4{27,)i(1990.)p
eop
%%Page: 9 9
9 8 bop 496 664 a Fh([11])43 b(A.)34 b(V.)g(Opp)r(enheim)f(and)h(R.)g
(W.)g(Sc)n(hafer,)j Fa(Discrete-time)k(signal)f(pro)r(cessing)p
Fh(,)657 755 y(Pren)n(tice-Hall,)27 b(1989.)496 847 y([12])43
b(J.)27 b(Proakis)f(and)f(D.)h(Manolakis,)h Fa(Digital)32
b(signal)e(pro)r(cessing)p Fh(,)e(Pren)n(tice)e(Hall,)g(3rd)657
938 y(edn.,)g(1996.)496 1029 y([13])43 b(G.)30 b(V.)g(Pusk)n(orius)g
(and)f(L.)h(A.)g(F)-6 b(eldk)l(amp,)29 b(\\Neuro)r(con)n(trol)h(of)h
(nonlinear)f(dynamical)657 1121 y(systems)20 b(with)g(Kalman)g
(\014lter)g(trained)h(recurren)n(t)f(net)n(w)n(orks,")i
Fa(IEEE)h(T)-7 b(ransactions)657 1212 y(on)30 b(Neural)g(Net)n(w)n
(orks)p Fh(,)25 b(v)n(ol.)h(5,)h(no.)f(2,)g(pp.)f(279{297,)k(1994.)496
1303 y([14])43 b(A.)26 b(J.)h(Robinson)f(and)g(F.)g(F)-6
b(allside,)28 b(\\A)e(recurren)n(t)g(error)g(propagation)i(sp)r(eec)n
(h)e(recog-)657 1395 y(nition)36 b(system,")i Fa(Computer)j(Sp)r(eec)n
(h)g(and)g(Language)p Fh(,)e(v)n(ol.)d(5,)j(pp.)c(259{274,)657
1486 y(1991.)496 1577 y([15])43 b(A.)19 b(C.)h(Tsoi)g(and)f(A.)g(Bac)n
(k,)i(\\Discrete)f(time)e(recurren)n(t)g(neural)i(net)n(w)n(ork)e(arc)n
(hitectures:)657 1669 y(a)26 b(unifying)g(review,")h
Fa(Neuro)r(computing)p Fh(,)h(v)n(ol.)f(15,)f(pp.)f(183{223,)k(1997.)
496 1760 y([16])43 b(R.)28 b(J.)i(Williams)f(and)f(D.)g(Zipser,)i(\\A)e
(learning)h(algorithm)g(for)g(con)n(tin)n(ually)g(training)657
1851 y(recurren)n(t)19 b(neural)g(net)n(w)n(orks,")i
Fa(Neural)h(Computation)p Fh(,)g(v)n(ol.)d(1,)i(pp.)d(270{280,)23
b(1989.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
